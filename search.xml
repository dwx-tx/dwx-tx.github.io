<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>0-1背包问题</title>
    <url>/2022/03/22/0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="0-1背包问题"><a href="#0-1背包问题" class="headerlink" title="0-1背包问题"></a>0-1背包问题</h1><p>0-1背包问题是一个典型的动态规划问题</p>
<p><strong>问题背景：</strong>用有限的背包容量去装价值最多的物品的组合，物品有质量和价值。</p>
<p>0-1背包问题是最简单的背包问题，对于一个物品，只有两种选择——装或者不装。因此这个程序不能使用贪心算法来解，使用动态规划来解。</p>
<p>因为背包问题是一个动态规划问题，它可能满足动态规划的三要素。</p>
<p><strong>三要素：</strong></p>
<p>最优子程序、最优值，最优解</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/03/c8ee0e9c7035a08a.jpg" alt="背包问题的算法"> </p>
<p>当我们有了这些算法逻辑上的准备后，就可以着手实现算法了。</p>
<h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><p>对于0-1背包问题，我们逻辑上是从上到下进行添值的，但是在算法实现的过程中，我们是使用从低往上添值的。</p>
<h3 id="自上而下的算法实现"><a href="#自上而下的算法实现" class="headerlink" title="自上而下的算法实现"></a>自上而下的算法实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Knapsack</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * n : 定义物品的数量</span></span><br><span class="line"><span class="comment">    * c: 定义背包的容量</span></span><br><span class="line"><span class="comment">    * w[]:定义我拼的重量</span></span><br><span class="line"><span class="comment">    * v[]:定义每个物品的价值</span></span><br><span class="line"><span class="comment">    * m[][]：定义记录表格*/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> c;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] w;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] v;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[][] m;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//我们写的是用来调用的方法，使用get/set方法体现我们方法的封装</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getN</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setN</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.n = n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getC</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setC</span><span class="params">(<span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.c = c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] getW() &#123;</span><br><span class="line">        <span class="keyword">return</span> w;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setW</span><span class="params">(<span class="keyword">int</span>[] w)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.w = w;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] getV() &#123;</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setV</span><span class="params">(<span class="keyword">int</span>[] v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.v = v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] getM() &#123;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setM</span><span class="params">(<span class="keyword">int</span>[][] m)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.m = m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//算法的主体</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">knapsack</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//对我们的m矩阵机型初始化</span></span><br><span class="line">        <span class="keyword">int</span> j,k,l;</span><br><span class="line">        <span class="comment">//对于m[][]</span></span><br><span class="line">        <span class="comment">//i表示是第几个物品，j表示容量为j的子背包</span></span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;=c;j++)&#123;</span><br><span class="line">            <span class="comment">//如果能够 对于子背包能够装下就装</span></span><br><span class="line">            <span class="keyword">if</span> (j+<span class="number">1</span> &gt;= w[n])&#123;</span><br><span class="line">                m[n][j] = v[n];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//不能装就跳过</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                m[n][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//操作除了最后一行的其他行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n-<span class="number">1</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;=c;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;=w[i])&#123;</span><br><span class="line">                    m[i][j] = m[i+<span class="number">1</span>][j]&gt;m[i+<span class="number">1</span>][j-w[i]]+v[i] ?  m[i+<span class="number">1</span>][j]:m[i+<span class="number">1</span>][j-w[i]]+v[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>测试:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.passage3.Knapsack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KnapsackTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Knapsack knapsack = <span class="keyword">new</span> Knapsack();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * n : 定义物品的数量</span></span><br><span class="line"><span class="comment">         * c: 定义背包的容量</span></span><br><span class="line"><span class="comment">         * w[]:定义我拼的重量</span></span><br><span class="line"><span class="comment">         * v[]:定义每个物品的价值</span></span><br><span class="line"><span class="comment">         * m[][]：定义记录表格*/</span></span><br><span class="line">        <span class="keyword">int</span> c = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> w[] = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> v[] = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">3000</span>,<span class="number">2000</span>,<span class="number">1500</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> m[][] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line">        knapsack.setC(c-<span class="number">1</span>);</span><br><span class="line">        knapsack.setM(m);</span><br><span class="line">        knapsack.setV(v);</span><br><span class="line">        knapsack.setW(w);</span><br><span class="line">        knapsack.setN(n-<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//执行方法</span></span><br><span class="line">        knapsack.knapsack();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得执行后的m表格</span></span><br><span class="line">        <span class="comment">//因为我们是从上到下填写的</span></span><br><span class="line">        <span class="keyword">int</span>[][] m1 = knapsack.getM();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : m1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>输出:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">3500</span>	</span><br><span class="line"><span class="number">1500</span>	<span class="number">1500</span>	<span class="number">1500</span>	<span class="number">1500</span></span><br></pre></td></tr></table></figure>

<p> <img src="https://s3.bmp.ovh/imgs/2022/03/2a35a55392b06182.jpg"> </p>
<h3 id="自上而下的编写方式"><a href="#自上而下的编写方式" class="headerlink" title="自上而下的编写方式"></a>自上而下的编写方式</h3>]]></content>
  </entry>
  <entry>
    <title>1.2.1版本存在问题与优化</title>
    <url>/2022/10/23/1.2.1%E7%89%88%E6%9C%AC%E7%9A%84%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<h1 id="1-2-1版本存在问题与优化"><a href="#1-2-1版本存在问题与优化" class="headerlink" title="1.2.1版本存在问题与优化"></a>1.2.1版本存在问题与优化</h1><h2 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h2><p>由于我使用的是团队服务器，服务器是通过IP地址来进行访问的，没有域名，很难记得，因此我尝试，使用二维码来实现对网站方便的访问</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p><em>二维码技术</em></p>
<p><a href="https://blog.csdn.net/jam_fanatic/article/details/82818857">(180条消息) java实现二维码的生成与解析_jam_fanatic的博客-CSDN博客_java 二维码生成</a></p>
<p><strong>需要的依赖</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> &lt;dependency&gt;</span><br><span class="line"><span class="number">2</span>     &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</span><br><span class="line"><span class="number">3</span>     &lt;artifactId&gt;core&lt;/artifactId&gt;</span><br><span class="line"><span class="number">4</span>     &lt;version&gt;<span class="number">3.3</span><span class="number">.3</span>&lt;/version&gt;</span><br><span class="line"><span class="number">5</span> &lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p><strong>代码</strong></p>
<p><strong>生成二维码类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.zxing.common.BitMatrix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MatrixToImageWriter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BLACK = <span class="number">0xFF000000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WHITE = <span class="number">0xFFFFFFFF</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">MatrixToImageWriter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title">toBufferedImage</span><span class="params">(BitMatrix matrix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> width = matrix.getWidth();</span><br><span class="line">        <span class="keyword">int</span> height = matrix.getHeight();</span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; width; x++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; height; y++) &#123;</span><br><span class="line">                image.setRGB(x, y, matrix.get(x, y) ? BLACK : WHITE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeToFile</span><span class="params">(BitMatrix matrix, String format, File file)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedImage image = toBufferedImage(matrix);</span><br><span class="line">        <span class="keyword">if</span> (!ImageIO.write(image, format, file)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">&quot;Could not write an image of format &quot;</span> + format + <span class="string">&quot; to &quot;</span> + file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>测试类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.zxing.BarcodeFormat;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.EncodeHintType;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.MultiFormatWriter;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.WriterException;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.common.BitMatrix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始生成...&quot;</span>);</span><br><span class="line">        code();</span><br><span class="line">        System.out.println(<span class="string">&quot;生成完毕！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">code</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String content = <span class="string">&quot;https://www.baidu.com&quot;</span>;</span><br><span class="line">            String path = <span class="string">&quot;E:/测试&quot;</span>;<span class="comment">// 二维码保存的路径</span></span><br><span class="line">            String codeName = UUID.randomUUID().toString();<span class="comment">// 二维码的图片名</span></span><br><span class="line">            String imageType = <span class="string">&quot;jpg&quot;</span>;<span class="comment">// 图片类型</span></span><br><span class="line">            MultiFormatWriter multiFormatWriter = <span class="keyword">new</span> MultiFormatWriter();</span><br><span class="line">            Map&lt;EncodeHintType, String&gt; hints = <span class="keyword">new</span> HashMap&lt;EncodeHintType, String&gt;();</span><br><span class="line">            hints.put(EncodeHintType.CHARACTER_SET, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            BitMatrix bitMatrix = multiFormatWriter.encode(content, BarcodeFormat.QR_CODE, <span class="number">400</span>, <span class="number">400</span>, hints);</span><br><span class="line">            File file1 = <span class="keyword">new</span> File(path, codeName + <span class="string">&quot;.&quot;</span> + imageType);</span><br><span class="line">            MatrixToImageWriter.writeToFile(bitMatrix, imageType, file1);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (WriterException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.BarcodeFormat;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.EncodeHintType;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.MultiFormatWriter;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.WriterException;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.common.BitMatrix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始生成...&quot;</span>);</span><br><span class="line">        code();</span><br><span class="line">        System.out.println(<span class="string">&quot;生成完毕！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">code</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String content = <span class="string">&quot;https://www.baidu.com&quot;</span>;</span><br><span class="line">            String path = <span class="string">&quot;E:/测试&quot;</span>;<span class="comment">// 二维码保存的路径</span></span><br><span class="line">            String codeName = UUID.randomUUID().toString();<span class="comment">// 二维码的图片名</span></span><br><span class="line">            String imageType = <span class="string">&quot;jpg&quot;</span>;<span class="comment">// 图片类型</span></span><br><span class="line">            MultiFormatWriter multiFormatWriter = <span class="keyword">new</span> MultiFormatWriter();</span><br><span class="line">            Map&lt;EncodeHintType, String&gt; hints = <span class="keyword">new</span> HashMap&lt;EncodeHintType, String&gt;();</span><br><span class="line">            hints.put(EncodeHintType.CHARACTER_SET, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            BitMatrix bitMatrix = multiFormatWriter.encode(content, BarcodeFormat.QR_CODE, <span class="number">400</span>, <span class="number">400</span>, hints);</span><br><span class="line">            File file1 = <span class="keyword">new</span> File(path, codeName + <span class="string">&quot;.&quot;</span> + imageType);</span><br><span class="line">            MatrixToImageWriter.writeToFile(bitMatrix, imageType, file1);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (WriterException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>IP地址</strong></p>
<p><code>http://115.29.41.122:8099/union</code></p>
<p><strong>组合</strong></p>
<p>结束</p>
<p><a href="https://imgse.com/i/x2CWSU"><img src="https://s1.ax1x.com/2022/10/23/x2CWSU.jpg" alt="x2CWSU.jpg"></a></p>
]]></content>
  </entry>
  <entry>
    <title>网站2.1优化</title>
    <url>/2022/10/30/2.1%E7%89%88%E6%9C%AC%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="2-1版本优化"><a href="#2-1版本优化" class="headerlink" title="2.1版本优化"></a>2.1版本优化</h1><p>程序存在的问题是：</p>
<ul>
<li>长文章展示有点混乱，不会换行</li>
<li>不能做到模糊查询，没有输入完整的关键字就无法查询到东西</li>
</ul>
<h2 id="富文本代替正常的文本"><a href="#富文本代替正常的文本" class="headerlink" title="富文本代替正常的文本"></a>富文本代替正常的文本</h2><p><a href="https://imgse.com/i/xI5ge0"><img src="https://s1.ax1x.com/2022/10/30/xI5ge0.png" alt="xI5ge0.png"></a></p>
<p>程序出现的问题是，数据库存储的只有文字，没有html里的标签，html无法展示</p>
<p><a href="https://imgse.com/i/xI5fFU"><img src="https://s1.ax1x.com/2022/10/30/xI5fFU.png" alt="xI5fFU.png"></a></p>
<p>数据库里数据格式正常</p>
<p><strong>修改数据库数据格式</strong><a href="https://imgse.com/i/xI5hYF"><img src="https://s1.ax1x.com/2022/10/30/xI5hYF.png" alt="xI5hYF.png"></a>)</p>
<p><strong>修改后程序的效果</strong></p>
<p><a href="https://imgse.com/i/xI5ol9"><img src="https://s1.ax1x.com/2022/10/30/xI5ol9.png" alt="xI5ol9.png"></a></p>
<p><strong>遗留问题：</strong></p>
<p>程序没有内置富文本编译器，因此需要管理员在编辑关键字的时候加上<code>&lt;/br&gt;</code></p>
<h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><p><strong>修改sql为</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">select * from union.<span class="function">interpretation where keyword like  <span class="title">concat</span><span class="params">(<span class="string">&#x27;%&#x27;</span>,#&#123;keyword&#125;,<span class="string">&#x27;%&#x27;</span>)</span></span></span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/xI5bex"><img src="https://s1.ax1x.com/2022/10/30/xI5bex.png" alt="xI5bex.png"></a></p>
<p><a href="https://imgse.com/i/xI5XFO"><img src="https://s1.ax1x.com/2022/10/30/xI5XFO.png" alt="xI5XFO.png"></a></p>
<p><strong>问题：</strong>格式有点怪，后续进行修改</p>
]]></content>
  </entry>
  <entry>
    <title>2.2版本分析</title>
    <url>/2022/11/22/2.2%E7%89%88%E6%9C%AC%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="2-2版本分析"><a href="#2-2版本分析" class="headerlink" title="2.2版本分析"></a>2.2版本分析</h1><p>2.1版本上的升级</p>
<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>最近在读书做笔记时，想到，传统的手写笔记不容易编写，也不容易阅读。</p>
<p>而且受写作的人的笔迹影响很大。由于我的笔迹看着很差，但是我是不想改的，因此我想到编写一个程序用来存放我的阅读笔迹。</p>
<p>正好“阶梯计划”程序还有一个空闲地方没有用，因此就直接塞进这个程序吧</p>
<p><a href="https://imgse.com/i/z3eGm6"><img src="https://s1.ax1x.com/2022/11/22/z3eGm6.png" alt="z3eGm6.png"></a></p>
<p>这里模块虽然显示的是党章，但是这里其实只添加了一个别人的超链接，修改一下不会有影响。</p>
<h2 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h2><h3 id="前端准备"><a href="#前端准备" class="headerlink" title="前端准备"></a>前端准备</h3><p><strong>首先我们应该挑选一个漂亮的前端来渲染我们的数据</strong></p>
<p><a href="https://imgse.com/i/z3ewpd"><img src="https://s1.ax1x.com/2022/11/22/z3ewpd.png" alt="z3ewpd.png"></a></p>
<p>并没有在网上找到合适的页面，就自己手写吧</p>
<p><a href="https://imgse.com/i/z3eDXt"><img src="https://s1.ax1x.com/2022/11/22/z3eDXt.png" alt="z3eDXt.png"></a></p>
<p>大概就是这个样子 后续还会添加分页功能</p>
<p><strong>前端预留的功能有：</strong></p>
<ul>
<li>添加金句</li>
<li>修改金句</li>
<li>删除金句</li>
<li>分页查询</li>
</ul>
<h3 id="后端准备"><a href="#后端准备" class="headerlink" title="后端准备"></a>后端准备</h3><h4 id="最简单一个测试demo"><a href="#最简单一个测试demo" class="headerlink" title="最简单一个测试demo"></a>最简单一个测试demo</h4><p><strong>数据库准备</strong></p>
<p><a href="https://imgse.com/i/z3efpj"><img src="https://s1.ax1x.com/2022/11/22/z3efpj.png" alt="z3efpj.png"></a></p>
<p>**表名为：fagment(片段)**列名包括</p>
<table>
<thead>
<tr>
<th>列名</th>
<th>意义</th>
<th>类型</th>
</tr>
</thead>
<tbody><tr>
<td>content</td>
<td>金句内容</td>
<td>text</td>
</tr>
<tr>
<td>from</td>
<td>节选自</td>
<td>varchar</td>
</tr>
<tr>
<td>addByID</td>
<td>添加的管理员的ID</td>
<td>varchar</td>
</tr>
</tbody></table>
<p><strong>后端框架搭建</strong></p>
<p><strong>POJO</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line">    <span class="keyword">private</span> String addByID;</span><br><span class="line">    <span class="keyword">private</span> String addByName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Mapper</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.dwx.mapper;</span><br><span class="line"></span><br><span class="line">import com.dwx.pojo.Fragment;</span><br><span class="line">import org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Mapper</span><br><span class="line">public interface FragmentMapper &#123;</span><br><span class="line">    //查询金句操作</span><br><span class="line">    //首先写一个能够查询所有金句的程序试水</span><br><span class="line">    List&lt;Fragment&gt; getAllFragments();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>前端jsp</strong></p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">         pageEncoding=<span class="string">&quot;UTF-8&quot;</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;/houtai/jsp/common/head.jsp&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        .head &#123;</span><br><span class="line">            margin-left: <span class="number">90</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        .main&#123;</span><br><span class="line">            align-self: center;</span><br><span class="line">            <span class="comment">/*background-color: #61CAD0;*/</span></span><br><span class="line">            <span class="comment">/*height: auto;*/</span></span><br><span class="line">            height: 160px;</span><br><span class="line">            width: <span class="number">60</span>%;</span><br><span class="line">            margin-left: <span class="number">20</span>%;</span><br><span class="line">            margin-bottom: 20px;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*设置一个边框*/</span></span><br><span class="line">            border:4px solid #eeab07;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">        &#125;</span><br><span class="line">        .body&#123;</span><br><span class="line">            <span class="comment">/*background-color: #0a5eb6;*/</span></span><br><span class="line">            height: <span class="number">70</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        .foot&#123;</span><br><span class="line">            <span class="comment">/*background-color: #2b4906;*/</span></span><br><span class="line">            height: <span class="number">30</span>%;</span><br><span class="line">            <span class="comment">/*横向布局*/</span></span><br><span class="line">            display: flex;</span><br><span class="line">            border:2px solid #eeab07;</span><br><span class="line">            border-top-color: #ab1e1e;</span><br><span class="line">        &#125;</span><br><span class="line">        .from&#123;</span><br><span class="line">            <span class="comment">/*background-color: #ab1e1e;*/</span></span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">            width: <span class="number">40</span>%;</span><br><span class="line">            <span class="comment">/*float: left;*/</span></span><br><span class="line">        &#125;</span><br><span class="line">        .addBy&#123;</span><br><span class="line">            <span class="comment">/*background-color: #6A6AFF;*/</span></span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">            width: <span class="number">20</span>%;</span><br><span class="line">            <span class="comment">/*float: left;*/</span></span><br><span class="line">            margin-left: <span class="number">5</span>%;</span><br><span class="line">            margin-right: <span class="number">5</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        .update&#123;</span><br><span class="line">            <span class="comment">/*background-color: #aaaaaa;*/</span></span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">            width: <span class="number">10</span>%;</span><br><span class="line">            margin-left: <span class="number">5</span>%;</span><br><span class="line">            margin-right: <span class="number">5</span>%;</span><br><span class="line">            <span class="comment">/*float: right;*/</span></span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        .delete&#123;</span><br><span class="line">            <span class="comment">/*background-color: #f6f7f9;*/</span></span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">            width: <span class="number">10</span>%;</span><br><span class="line">            margin-left: <span class="number">5</span>%;</span><br><span class="line">            text-align: center;</span><br><span class="line">            <span class="comment">/*float: right;*/</span></span><br><span class="line">        &#125;</span><br><span class="line">        .p1&#123;</span><br><span class="line">            font-weight: bold;</span><br><span class="line">            font-family: 华文楷体;</span><br><span class="line">            font-size: large;</span><br><span class="line">        &#125;</span><br><span class="line">        .p2&#123;</span><br><span class="line">            font-weight: bold;</span><br><span class="line">            font-family: <span class="string">&quot;Microsoft Yahei&quot;</span>, <span class="string">&quot;Hiragino Sans GB&quot;</span>, <span class="string">&quot;Helvetica Neue&quot;</span>, Helvetica, tahoma, arial, Verdana, sans-serif, <span class="string">&quot;WenQuanYi Micro Hei&quot;</span>, <span class="string">&quot;\5B8B\4F53&quot;</span>;</span><br><span class="line">            font-size: large;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;right&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;location&quot;</span>&gt;</span><br><span class="line">        &lt;strong&gt;你现在所在的位置是:&lt;/strong&gt;</span><br><span class="line">        &lt;span&gt;金句节选界面&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;head&quot;</span>&gt;</span><br><span class="line">        &lt;form  method=<span class="string">&quot;get&quot;</span> action=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/houtai/jsp/bill.do&quot;</span>&gt;</span><br><span class="line">            &lt;input  value=<span class="string">&quot;添加金句&quot;</span> type=<span class="string">&quot;submit&quot;</span> id=<span class="string">&quot;searchbutton&quot;</span>&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--文章块--&gt;</span><br><span class="line">    &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;fragment&quot;</span> items=<span class="string">&quot;$&#123;fragments&#125;&quot;</span> varStatus=<span class="string">&quot;status&quot;</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;main&quot;</span>&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;body&quot;</span>&gt;</span><br><span class="line">                    &lt;p <span class="class"><span class="keyword">class</span> </span>=<span class="string">&quot;p1&quot;</span>&gt;$&#123;fragment.content&#125;</span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;foot&quot;</span>&gt;</span><br><span class="line">                    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;from&quot;</span>&gt;</span><br><span class="line">                        &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;p2&quot;</span>&gt;节选自: $&#123;fragment.from&#125;&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;addBy&quot;</span>&gt;</span><br><span class="line">                        &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;p2&quot;</span>&gt;添加者: $&#123;fragment.addByID&#125;&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;update&quot;</span>&gt;</span><br><span class="line">                        &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;p2&quot;</span>&gt;&lt;a&gt;修改&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;delete&quot;</span>&gt;</span><br><span class="line">                        &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;p2&quot;</span>&gt;&lt;a&gt;删除&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/section&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;/houtai/jsp/common/foot.jsp&quot;</span> %&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/houtai/js/billlist.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><strong>最简单的框架执行结束</strong></p>
<p><a href="https://imgse.com/i/z3eX9J"><img src="https://s1.ax1x.com/2022/11/22/z3eX9J.png" alt="z3eX9J.png"></a></p>
<h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p><strong>查询数据需要修改</strong></p>
<p><a href="https://imgse.com/i/z3exj1"><img src="https://s1.ax1x.com/2022/11/22/z3exj1.png" alt="z3exj1.png"></a></p>
<p>这里应该是name，不是id，在service层进行一个修改即可。</p>
<h4 id="编写添加金句程序"><a href="#编写添加金句程序" class="headerlink" title="编写添加金句程序"></a>编写添加金句程序</h4><p><strong>前端准备</strong></p>
<p><a href="https://imgse.com/i/z3m9HK"><img src="https://s1.ax1x.com/2022/11/22/z3m9HK.png" alt="z3m9HK.png"></a></p>
<p>我的水平 写成这样已经是我的极限了</p>
<p><strong>前端代码</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">         pageEncoding=&quot;UTF-8&quot; %&gt;</span><br><span class="line">&lt;%@include file=&quot;/houtai/jsp/common/head.jsp&quot; %&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.fragmentAddBody</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">80%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">30%</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #eee304;*/</span></span></span><br><span class="line"><span class="css">            <span class="comment">/*居中*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">30%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="comment">/*添加边框*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">border-width</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-style</span>: solid;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-color</span>: <span class="number">#a40505</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.fragmentAddContest</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#10c278</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.fragmentAddFrom</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#f6bc04</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.fragmentAddBtn</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #ab1e1e;*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.save</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #a2d866;*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">40%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-right</span>: <span class="number">20%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.back</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #61CAD0;*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">40%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.contest</span>&#123;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;location&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>你现在所在的位置是:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>金句管理页面 &gt;&gt; 金句添加页面<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fragmentAddBody&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--操作按钮--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/fragmentAdd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fragmentAddContest&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>金句片段:<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;46&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fragmentContest&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;16&quot;</span> <span class="attr">class</span>=<span class="string">&quot;contest&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fragmentAddFrom&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>选自: <span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;46&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fragmentFrom&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;from&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fragmentAddBtn&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;save&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span>  <span class="attr">style</span>=<span class="string">&quot;width: 100px&quot;</span>   <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;保存&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;back&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span>  <span class="attr">style</span>=<span class="string">&quot;width: 100px&quot;</span>   <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;返回&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%@include file=&quot;/houtai/jsp/common/foot.jsp&quot; %&gt;</span><br><span class="line">&lt;%--<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/js/billmodify.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>--%&gt;</span><br></pre></td></tr></table></figure>



<p><strong>后端编写</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/fragmentAdd&quot;)</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">fragmentAdd</span><span class="params">(String fragmentContest, String fragmentFrom, String type, HttpServletRequest req, HttpServletResponse resp)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//添加一个过滤器</span></span><br><span class="line">      UserUtil util = <span class="keyword">new</span> UserUtil();</span><br><span class="line">      <span class="keyword">boolean</span> b1 = <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          b1 = util.userExist(req, resp);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!b1) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&quot;/error/index&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//首先判断类型</span></span><br><span class="line">      System.out.println(<span class="string">&quot;该操作的类型为: &quot;</span> + type);</span><br><span class="line">      <span class="keyword">if</span> (type.equals(<span class="string">&quot;保存&quot;</span>)) &#123;</span><br><span class="line"></span><br><span class="line">          System.out.println(<span class="string">&quot;输入的金句内容是: &quot;</span> + fragmentContest);</span><br><span class="line">          System.out.println(<span class="string">&quot;输入的金句节选自: &quot;</span> + fragmentFrom);</span><br><span class="line">          <span class="comment">//从session里得到用户ID</span></span><br><span class="line">          HttpSession session = req.getSession();</span><br><span class="line">          User user = (User) session.getAttribute(<span class="string">&quot;userSession&quot;</span>);</span><br><span class="line">          System.out.println(<span class="string">&quot;添加者ID: &quot;</span> + user.getId());</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (!fragmentContest.equals(<span class="string">&quot;&quot;</span>) &amp;&amp; !fragmentFrom.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">              <span class="comment">//如果都不为空 则进行添加程序</span></span><br><span class="line">              <span class="keyword">boolean</span> b = fragmentService.addFragment(fragmentContest, fragmentFrom, user.getId());</span><br><span class="line">              <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                  System.out.println(<span class="string">&quot;添加金句成功&quot;</span>);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  System.out.println(<span class="string">&quot;添加金句失败&quot;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&quot;/houtai/jsp/billadd&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//执行一个查询程序</span></span><br><span class="line">          getALlFragments(req, resp);</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&quot;/houtai/jsp/billlist&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="编写删除程序"><a href="#编写删除程序" class="headerlink" title="编写删除程序"></a>编写删除程序</h4><p><a href="https://imgse.com/i/z3miND"><img src="https://s1.ax1x.com/2022/11/22/z3miND.png" alt="z3miND.png"></a></p>
<p>删除成功</p>
<p><img src="/dwx-tx.github.io/2022/11/22/2.2%E7%89%88%E6%9C%AC%E5%88%86%E6%9E%90/Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20221122181527392.png" alt="image-20221122181527392"></p>
<p><strong>后端代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//删除金句</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/fragmentDelete&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fragmentDelete</span><span class="params">(String fragmentContent,HttpServletRequest req, HttpServletResponse resp)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;要删除金句的内容是:&quot;</span>+fragmentContent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加一个过滤器</span></span><br><span class="line">        UserUtil util = <span class="keyword">new</span> UserUtil();</span><br><span class="line">        <span class="keyword">boolean</span> b1 = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            b1 = util.userExist(req, resp);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!b1) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;/error/index&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//进行一个判断看能不能删除</span></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line">        User user = (User) session.getAttribute(<span class="string">&quot;userSession&quot;</span>);</span><br><span class="line">        String id = user.getId();</span><br><span class="line">        System.out.println(id);</span><br><span class="line">        <span class="keyword">boolean</span> b = util.userRole(req, resp, id);</span><br><span class="line">        <span class="keyword">if</span> (b)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;有资格，可以删除&quot;</span>);</span><br><span class="line">            fragmentService.deleteFragment(fragmentContent);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;没资格删除&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//再次更新一下fragmentList</span></span><br><span class="line">        getALlFragments(req, resp);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/houtai/jsp/billlist&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="编写修改程序"><a href="#编写修改程序" class="headerlink" title="编写修改程序"></a>编写修改程序</h4><p>根据修改程序的逻辑，应该分为两块，</p>
<p><strong>第一块，点击能够跳转到类似查看的页面:</strong></p>
<p><strong>前端编写：</strong></p>
<p><a href="https://imgse.com/i/z3mVgA"><img src="https://s1.ax1x.com/2022/11/22/z3mVgA.png" alt="z3mVgA.png"></a></p>
<p><strong>代码:</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">         pageEncoding=&quot;UTF-8&quot; %&gt;</span><br><span class="line">&lt;%@include file=&quot;/houtai/jsp/common/head.jsp&quot; %&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.fragmentAddBody</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">80%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">30%</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #eee304;*/</span></span></span><br><span class="line"><span class="css">            <span class="comment">/*居中*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">30%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="comment">/*添加边框*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">border-width</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-style</span>: solid;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-color</span>: <span class="number">#a40505</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.fragmentAddContest</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#10c278</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.fragmentAddFrom</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#f6bc04</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.fragmentAddBtn</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #ab1e1e;*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.save</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #a2d866;*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">40%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-right</span>: <span class="number">20%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.back</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #61CAD0;*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">40%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.contest</span>&#123;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;location&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>你现在所在的位置是:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>金句管理页面 &gt;&gt; 金句添加页面<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fragmentAddBody&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--操作按钮--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fragmentAddContest&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>金句片段:<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span>  <span class="attr">cols</span>=<span class="string">&quot;46&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fragmentContest&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;16&quot;</span> <span class="attr">class</span>=<span class="string">&quot;contest&quot;</span>&gt;</span>$&#123;fragment.content&#125;<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fragmentAddFrom&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>选自: <span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;46&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fragmentFrom&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;from&quot;</span>&gt;</span>$&#123;fragment.from&#125;<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fragmentAddBtn&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;save&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span>  <span class="attr">style</span>=<span class="string">&quot;width: 100px&quot;</span>   <span class="attr">name</span>=<span class="string">&quot;type&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;保存&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;back&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span>  <span class="attr">style</span>=<span class="string">&quot;width: 100px&quot;</span>   <span class="attr">name</span>=<span class="string">&quot;type&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;返回&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%@include file=&quot;/houtai/jsp/common/foot.jsp&quot; %&gt;</span><br><span class="line">&lt;%--<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/js/billmodify.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>--%&gt;</span><br></pre></td></tr></table></figure>

<p><strong>后端代码:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/fragmentUpdateView&quot;)</span></span><br><span class="line"><span class="comment">//修改程序分为两个 第一个是一个查询程序</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">fragmentUpdateView</span><span class="params">(<span class="keyword">int</span> id,HttpServletRequest req, HttpServletResponse resp)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;要修改的金句的id为: &quot;</span>+id);</span><br><span class="line"></span><br><span class="line">    Fragment fragment = fragmentService.getFragmentByID(id);</span><br><span class="line"></span><br><span class="line">    req.getSession().setAttribute(<span class="string">&quot;fragment&quot;</span>,fragment);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;/houtai/jsp/billmodify&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;    <span class="meta">@RequestMapping(&quot;/fragmentUpdateView&quot;)</span></span><br><span class="line"><span class="comment">//修改程序分为两个 第一个是一个查询程序</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">fragmentUpdateView</span><span class="params">(<span class="keyword">int</span> id,HttpServletRequest req, HttpServletResponse resp)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;要修改的金句的id为: &quot;</span>+id);</span><br><span class="line"></span><br><span class="line">    Fragment fragment = fragmentService.getFragmentByID(id);</span><br><span class="line"></span><br><span class="line">    req.getSession().setAttribute(<span class="string">&quot;fragment&quot;</span>,fragment);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;/houtai/jsp/billmodify&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>第二个程序是保存修改结果程序</strong></p>
<p><strong>修改前：</strong></p>
<p><a href="https://imgse.com/i/z3muHf"><img src="https://s1.ax1x.com/2022/11/22/z3muHf.png" alt="z3muHf.png"></a></p>
<p><strong>修改之后</strong></p>
<p><a href="https://imgse.com/i/z3mQUS"><img src="https://s1.ax1x.com/2022/11/22/z3mQUS.png" alt="z3mQUS.png"></a></p>
<p><strong>后端代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//修改金句</span></span><br><span class="line">    <span class="comment">//修改程序</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/fragmentUpdate&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fragmentUpdate</span><span class="params">(String content, String from, String type, HttpServletRequest req, HttpServletResponse resp)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用session获得id</span></span><br><span class="line">        Fragment fragmentOld = (Fragment) req.getSession().getAttribute(<span class="string">&quot;fragment&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> id = fragmentOld.getId();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;要修改的金句: &quot;</span>+content);</span><br><span class="line">        System.out.println(<span class="string">&quot;选自: &quot;</span>+from);</span><br><span class="line">        System.out.println(<span class="string">&quot;操作内容: &quot;</span>+type);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (type.equals(<span class="string">&quot;保存&quot;</span>)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//修改程序</span></span><br><span class="line">            fragmentService.updateFragment(content, from, id);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//修改完更新一下程序</span></span><br><span class="line">            Fragment fragment = fragmentService.getFragmentByID(id);</span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;fragment&quot;</span>, fragment);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;/houtai/jsp/billmodify&quot;</span>;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//没有修改 直接跳转回原页面</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;/houtai/jsp/billlist&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>一个简单的包含增删改查程序的一个模块就写好了，不过还有遗留问题</p>
<ul>
<li>没有分页查询</li>
<li>分页查询需要大量的数据，但是我现在还没有这些数据</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>2021年C题的分析</title>
    <url>/2022/08/21/2021%E5%B9%B4C%E9%A2%98/</url>
    <content><![CDATA[<h1 id="2021年C题的分析"><a href="#2021年C题的分析" class="headerlink" title="2021年C题的分析"></a>2021年C题的分析</h1><p>分析此题，感觉比2021年其他的题要简单。</p>
<hr>
<p><strong>原文</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">某建筑和装饰板材的生产企业所用原材料主要是木质纤维和其他植物素纤维材料,</span><br><span class="line">总体可分为 A，B，C 三种类型。该企业每年按 48 周安排生产，需要提前制定 24 周的原</span><br><span class="line">材料订购和转运计划，即根据产能要求确定需要订购的原材料供应商（称为“供应商”）</span><br><span class="line">和相应每周的原材料订购数量（称为“订货量”），确定第三方物流公司（称为“转运</span><br><span class="line">商”）并委托其将供应商每周的原材料供货数量（称为“供货量”）转运到企业仓库。</span><br><span class="line">该企业每周的产能为 2.82 万立方米，每立方米产品需消耗 A 类原材料 0.6 立方米，</span><br><span class="line">或 B 类原材料 0.66 立方米，或 C 类原材料 0.72 立方米。由于原材料的特殊性，供应商</span><br><span class="line">不能保证严格按订货量供货，实际供货量可能多于或少于订货量。为了保证正常生产的</span><br><span class="line">需要，该企业要尽可能保持不少于满足两周生产需求的原材料库存量，为此该企业对供</span><br><span class="line">应商实际提供的原材料总是全部收购。</span><br><span class="line">在实际转运过程中，原材料会有一定的损耗（损耗量占供货量的百分比称为“损耗</span><br><span class="line">率”），转运商实际运送到企业仓库的原材料数量称为“接收量”。每家转运商的运输</span><br><span class="line">能力为 6000 立方米/周。通常情况下，一家供应商每周供应的原材料尽量由一家转运商</span><br><span class="line">运输。</span><br><span class="line">原材料的采购成本直接影响到企业的生产效益，实际中 A 类和 B 类原材料的采购单</span><br><span class="line">价分别比 C 类原材料高 20%和 10%。三类原材料运输和储存的单位费用相同。</span><br><span class="line">附件 1 给出了该企业近 5 年 402 家原材料供应商的订货量和供货量数据。附件 2 给</span><br><span class="line">出了 8 家转运商的运输损耗率数据。请你们团队结合实际情况，对相关数据进行深入分</span><br><span class="line">析，研究下列问题：</span><br><span class="line">1．根据附件 1，对</span><br></pre></td></tr></table></figure>



<h2 id="第一问"><a href="#第一问" class="headerlink" title="第一问"></a>第一问</h2><p><strong>问题：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">根据附件 1，对 402 家供应商的供货特征进行量化分析，建立反映保障企业生产</span><br><span class="line">重要性的数学模型，在此基础上确定 50 家最重要的供应商，并在论文中列表给出结果。</span><br></pre></td></tr></table></figure>

<p>根据分析，我们认为此题是一个评价类问题，但是评价标准不好找。有如下几点问题</p>
<ol>
<li>没有训练集，不能通过拟合等确定个因素的比重</li>
<li>因素太少，只有订货量和供货量</li>
</ol>
<p>因此，我们分析得，我们采用专家法，自己指定一套评价体系，评价体系如下：</p>
<ul>
<li>关于重要性，我认为 我们对重要客户的依赖度要足够高（订单量要尽可能大）</li>
<li>关于可信度，我认为供货商要极可能满足我们的订单（订单少的数量要尽可能少）</li>
</ul>
<p>因此我们确定了两个指标<strong>重要性S1</strong>和<strong>可信度S2</strong></p>
<p><code>S1 = 某个供货商的订单总数/max(供货商订单总数)</code></p>
<p><code>S2 = 1 - 某个订货商的缺少数/max(订货商的缺少数)</code></p>
<h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><p><strong>代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.C;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//确定企业数为402</span></span><br><span class="line">        <span class="comment">//确定订单次数为240</span></span><br><span class="line">        <span class="keyword">int</span> m = <span class="number">402</span>;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">240</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;:请输入企业订单数据：&quot;</span>);</span><br><span class="line">        <span class="comment">//读入企业订单数据</span></span><br><span class="line">        <span class="keyword">int</span>[][] Q = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">402</span>][<span class="number">240</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">                Q[i][j] = scanner.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;:请输入供应商数据：&quot;</span>);</span><br><span class="line">        <span class="comment">//读入供应商数据</span></span><br><span class="line">        <span class="keyword">int</span>[][] G = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">402</span>][<span class="number">240</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">                G[i][j] = scanner.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//对供应商的依赖度进行处理 即先求出供应商的总订单 再求出每个供应商对我们总总订单的占比</span></span><br><span class="line">        <span class="comment">//存储各个供应商的订单量总和</span></span><br><span class="line">        <span class="keyword">int</span>[] q1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">402</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                q1[i] = q1[i] + Q[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求出我们需求的总和</span></span><br><span class="line">        <span class="keyword">int</span> Max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(q1[i]&gt;Max)&#123;</span><br><span class="line">                Max = q1[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求出占比</span></span><br><span class="line">        <span class="keyword">double</span>[] s1 = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">402</span>];</span><br><span class="line">        System.out.println(<span class="string">&quot;对供应商下达的最大订单为:&quot;</span>+Max);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            s1[i] = q1[i]* <span class="number">1.0</span>/Max ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出依赖度</span></span><br><span class="line">        <span class="comment">//保留两位小数</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">double</span> v : s1) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%.2f\n&quot;</span>,v);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求可靠度 即 求供应商和订单之间的差异度</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 在此我们规定 对于供应商供给的货多于订单量或等于订单量 我们都视为0</span></span><br><span class="line"><span class="comment">        * 当供应商供给订单数量少于订单数量 则即差异度为（订单-实际供货）</span></span><br><span class="line"><span class="comment">        * 我们对每一次订货进行操作 因此不至于有误差</span></span><br><span class="line"><span class="comment">        * 差异度 只对占比比较大的厂家进行使用*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//读入厂家数据</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入符合要求的供应商:&quot;</span>);</span><br><span class="line">        <span class="comment">//有意义的供应商有89加</span></span><br><span class="line">        <span class="keyword">int</span> m1 = <span class="number">89</span>;</span><br><span class="line">        <span class="keyword">int</span>[] M = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">89</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m1;i++)&#123;</span><br><span class="line">            M[i] = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] d = <span class="keyword">new</span> <span class="keyword">int</span>[m1];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m1;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (G[M[i]][j] &gt;= Q[M[i]][j])&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    d[i] = d[i] + (Q[M[i]][j] - G[M[i]][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出差异度</span></span><br><span class="line">        System.out.println(<span class="string">&quot;输出差异度：&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : d) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求得最小差异度</span></span><br><span class="line">        <span class="keyword">int</span> min = <span class="number">9999</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m1;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (d[i] &lt; min)&#123;</span><br><span class="line">                min = d[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;最小数为:&quot;</span>+min);</span><br><span class="line">        <span class="comment">//求得可信度</span></span><br><span class="line">        <span class="keyword">double</span>[] K = <span class="keyword">new</span> <span class="keyword">double</span>[m1];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m1;i++)&#123;</span><br><span class="line">            K[i] = d[i]*<span class="number">1.0</span>/min;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出可信度</span></span><br><span class="line">        System.out.println(<span class="string">&quot;输出可信度:&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m1;i++)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;供应商&quot;</span>+M[i]+<span class="string">&quot;的差异数为:&quot;</span>+K[i]);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/*</span></span><br><span class="line"><span class="comment">       * 可信度分数 = 1 - 差异度/max(差异度s)*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; m1;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (d[i] &gt; max)&#123;</span><br><span class="line">                max = d[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;最大值为:&quot;</span>+max);</span><br><span class="line">        <span class="keyword">double</span>[] k = <span class="keyword">new</span> <span class="keyword">double</span>[m1];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m1;i++)&#123;</span><br><span class="line">            k[i] = <span class="number">1</span> - d[i]*<span class="number">1.0</span>/max;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">double</span> v : k) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%.4f\n&quot;</span>,v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>首先获得重要性分数</strong></p>
<p><img src="https://pic.imgdb.cn/item/630193b216f2c2beb12d9052.jpg"></p>
<p>进行降序排序后，我发现，只有前91名供应商的数据是有效的，因此我认为可以忽略其余的300+的小供应商，避免这些供应商数据稳定性良好影响大供应商的分数。</p>
<p><strong>再对大供应商进行操作，求得他们的可靠性分数</strong></p>
<p><img src="https://pic.imgdb.cn/item/6301940c16f2c2beb12db3d1.jpg"></p>
<p><strong>分析数据，可得，数据多在0.99附近，差异性小。</strong></p>
<p><img src="https://pic.imgdb.cn/item/6301941e16f2c2beb12db9e8.jpg"></p>
<p><strong>总分 = 依赖性 + 可靠性</strong>这样分析，还是有不小的差异性的。</p>
]]></content>
  </entry>
  <entry>
    <title>2022年暑假计划</title>
    <url>/2022/06/05/2022%E5%B9%B4%E6%9A%91%E5%81%87%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<h1 id="2022年暑假计划"><a href="#2022年暑假计划" class="headerlink" title="2022年暑假计划"></a>2022年暑假计划</h1><p>我们必须在暑假前指定一个暑假计划 在暑假后进行一个检验，下边分析一个我们需要做的事</p>
<ul>
<li>机组学习 机组笔记的编写</li>
<li>高数下学习</li>
<li>概率论学习</li>
<li>英语单词背记（准备四级）</li>
<li>驾照考试</li>
<li>数学建模学习（不能托团队后腿）</li>
<li>锻炼（感觉身体肌肉不够 太瘦了）</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>C语句</title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80C%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<h1 id="C语句"><a href="#C语句" class="headerlink" title="C语句"></a>C语句</h1><h2 id="C语句分为下列5类"><a href="#C语句分为下列5类" class="headerlink" title="C语句分为下列5类"></a>C语句分为下列5类</h2><ol>
<li><p>控制语句</p>
<ul>
<li>if()…else…                  （条件语句）</li>
<li>for()…                         （循环语句）</li>
<li>while()…                     （循环语句）</li>
<li>do while()                   （循环语句）</li>
<li>continue                     （结束本次循环语句）</li>
<li>break                           （中止执行switch或循环语句）</li>
<li>switch                          （多分支选择语句）</li>
<li>return                          （从函数返回语句）</li>
<li>goto                             （转向语句，在结构化的程序中基本不用goto语句）</li>
</ul>
</li>
<li><p>函数调用语句</p>
<p>函数调用语句由一个函数调用加一个分号构成</p>
</li>
<li><p>表达式语句</p>
<p>表达式语句由一个表达式加一个分号构成</p>
<p>一个表达式的最后加一个分号就成了一个语句</p>
</li>
<li><p>空语句</p>
<p>就一个空格加；什么也不做</p>
</li>
<li><p>复合语句</p>
<p>可以用{}把一些语句和声明括起来成为复合语句（又称语句块）</p>
</li>
</ol>
<h2 id="最基础的语句——赋值语句"><a href="#最基础的语句——赋值语句" class="headerlink" title="最基础的语句——赋值语句"></a>最基础的语句——赋值语句</h2><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>赋值符号“=”就是赋值运算符，它的作用是将一个数据赋给一个变量</p>
<h3 id="复合的赋值运算符"><a href="#复合的赋值运算符" class="headerlink" title="复合的赋值运算符"></a>复合的赋值运算符</h3><p>在赋值运算符“=”前加上其他的运算符，可以构成复合的运算符。</p>
<p><em><strong>凡是二目运算符，都可以与赋值运算符一起组合成复合赋值符</strong></em></p>
<h3 id="赋值表达式"><a href="#赋值表达式" class="headerlink" title="赋值表达式"></a>赋值表达式</h3><p>格式：变量   赋值运算符     表达式</p>
<p><em>赋值表达式的作用是将一个表达式的值赋给一个变量，因此赋值表达式具有计算和赋值的双重功能</em></p>
<h3 id="赋值过程中的类型转换"><a href="#赋值过程中的类型转换" class="headerlink" title="赋值过程中的类型转换"></a>赋值过程中的类型转换</h3><ol>
<li>将浮点数类型赋值给整数类型时，先对浮点数取整，即舍弃小数部分，然后赋予整型变量。</li>
<li>将整型数据赋值给单、双精度变量时，数值不变，但以浮点数类型储存到变量中</li>
<li>将一个double类型数据赋给float变量时，先将双精度数转换成单精度，即只取6~7位有效数字，存储到float型变量的4个字节中</li>
<li>字符型数据赋给整型变量时，将字符的ASCLL代码赋给整型变量</li>
<li>将一个占字节多的整型数据赋值给一个站字节少的整型变量或字符变量时，只将其低字节原封不动地送到被赋值的变量（即发生“截断”）</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>C语言字符串</title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="字符串常量"><a href="#字符串常量" class="headerlink" title="字符串常量"></a>字符串常量</h2><p><strong>字符串常量</strong>是由一对双引号括起来的一个字符序列。如“hello”，“12354”“</p>
<p>无论双引号内是否包含字符，包含多少个字符，都代表一个字符串常量</p>
<p><em><strong>为便于确定字符串的长度，C编译器会自动在字符串的末尾添加一个ASCLL码值为0的空操作符‘\0’作为字符串结束的标志，在字符串中可以不显示地写出</strong></em></p>
<p><strong>字符串</strong>：实际就是由若干有效字符构成且以字符‘\0’作为结束的一个字符序列</p>
<h2 id="字符串的储存"><a href="#字符串的储存" class="headerlink" title="字符串的储存"></a>字符串的储存</h2><ul>
<li>C语言中没有提供字符串数据类型，因此字符串的存取要用字符型数组来实现</li>
<li>判断存入字符型数组的是否是一个字符串需要通过观察其结尾是否有‘\0’来判断</li>
<li>字符串结束标志‘\0’也占一个字节的内存，但他不计入字符串的实际长度，只计入数组的长度</li>
</ul>
<p><strong>字符串赋值时可以直接声明数组长度，也可以不声明数组长度</strong></p>
<ul>
<li>当声明了数组长度时，不需要需要使输入的数组最后一位是‘\0’，系统会自动补’\0’</li>
<li>没有声明数组长度，必须人为地在数组初始化列表中添加’\0’</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">6</span>] = &#123;<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> str2[<span class="number">6</span>] = &#123;<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> str3[] = &#123;<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>

<p><strong>以上的三种赋值法都是合法的</strong></p>
<h3 id="字符串的长度"><a href="#字符串的长度" class="headerlink" title="字符串的长度"></a>字符串的长度</h3><p>字符串的长度和字符串数组的长度不同</p>
<p>数组长度 = 字符数 + 1</p>
<h3 id="二维字符数组"><a href="#二维字符数组" class="headerlink" title="二维字符数组"></a>二维字符数组</h3><p><strong>通常，我们将一个字符串放在一维字符数组中；将多个字符串放在多维字符数组中</strong></p>
<p><strong>字符第一维的长度代表字符串的个数，可以省略；但是第二维的长度不能省略，应该按最长的字符串的长度设定第二维的长度</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> weekday[<span class="number">7</span>][<span class="number">10</span>] = &#123;<span class="string">&quot;Sunday&quot;</span>,<span class="string">&quot;Monday&quot;</span>,<span class="string">&quot;Tuesday&quot;</span>,<span class="string">&quot;Wednesday&quot;</span>,<span class="string">&quot;Thursday&quot;</span>,<span class="string">&quot;Friday&quot;</span>,<span class="string">&quot;Saturday&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> weekday[][<span class="number">10</span>] = &#123;<span class="string">&quot;Sunday&quot;</span>,<span class="string">&quot;Monday&quot;</span>,<span class="string">&quot;Tuesday&quot;</span>,<span class="string">&quot;Wednesday&quot;</span>,<span class="string">&quot;Thursday&quot;</span>,<span class="string">&quot;Friday&quot;</span>,<span class="string">&quot;Saturday&quot;</span>&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>上述的两种初始化的方法是正确的</p>
<p><strong>若字符串太长，无法写在一行中，则可将其拆分成几个小的片段写在不同的行中</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">char longString[] = &quot;This is the first half of the string&quot;</span><br><span class="line">                    &quot;and this is the second half.&quot;;</span><br></pre></td></tr></table></figure>

<h2 id="字符指针"><a href="#字符指针" class="headerlink" title="字符指针"></a>字符指针</h2><p><strong>字符指针</strong>：是指向字符型数据的指针变量。</p>
<p>字符指针中存储的地址值是字符数组的首地址</p>
<h3 id="字符指针的定义"><a href="#字符指针的定义" class="headerlink" title="字符指针的定义"></a>字符指针的定义</h3><p>直接定义 char *ptr =”Hello”</p>
<p>间接定义 char *ptr;       ptr = “Hello”</p>
<h2 id="字符串的访问和输入-输出"><a href="#字符串的访问和输入-输出" class="headerlink" title="字符串的访问和输入/输出"></a>字符串的访问和输入/输出</h2><h3 id="如何访问字符串中的单个字符"><a href="#如何访问字符串中的单个字符" class="headerlink" title="如何访问字符串中的单个字符"></a>如何访问字符串中的单个字符</h3><p><strong>和其他类型的数组一样，可以通过使用下标的方式访问存储在字符中的每个字符</strong></p>
<p>str [0] 就是字符数组的第一个字符</p>
<p><strong>此外可以通过字符指针间接访问存放于数组中的字符串</strong></p>
<p>若字符指针ptr指向了数组str的首地址，既可以通过*（ptr+i）来引用字符串中的第i+1个数组；</p>
<p>*（ptr+i）相当于 *（str+i）即str[i]</p>
<p><strong>注意，对于数组名str，不能使用str++操作使其指向字符串中的某个字符，因为数组名是一个地址常量，其值是不能被改变的</strong></p>
<h3 id="字符串的输入-输出"><a href="#字符串的输入-输出" class="headerlink" title="字符串的输入\输出"></a>字符串的输入\输出</h3><p>有三种方式可以对字符串进行输入或输出</p>
<h4 id="第一种按照C格式符"><a href="#第一种按照C格式符" class="headerlink" title="第一种按照C格式符"></a>第一种按照C格式符</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;str[i]);             <span class="comment">//输入</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,&amp;str[i]);             <span class="comment">//输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第二种按照S格式符"><a href="#第二种按照S格式符" class="headerlink" title="第二种按照S格式符"></a>第二种按照S格式符</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br></pre></td></tr></table></figure>

<p>注意当使用S格式符时，无论是输入还是输出，都不用&amp;取地址符</p>
<p>因为此时str不仅仅是字符名，也是代表字符的首地址</p>
<h4 id="第三种gets（）puts（）"><a href="#第三种gets（）puts（）" class="headerlink" title="第三种gets（）puts（）"></a>第三种gets（）puts（）</h4><p><strong>使用字符串处理函数gets（），可以输入代空格的字符串</strong></p>
<p>gets（）以回车符作为字符串的终止符，同时将回车符从缓冲区读走，但不作为字符串的一部分</p>
<p>scanf（）不读走回车符，回车符仍在输入缓冲区</p>
<p>puts（）用于从括号内的参数给出的地址开始，依次输出存储单元中的字符，当遇到第一个’\0‘时输出结束，并自动输出一个换行符</p>
<p>printf（）可以在输出行中添加一些其他的字符信息</p>
<p><strong>由于gets（）函数不能限制输入字符串的长度，需要用fgets（）函数来约束它</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">fgets(name,<span class="keyword">sizeof</span>(name),<span class="built_in">stdin</span>)</span><br></pre></td></tr></table></figure>

<h2 id="字符串处理函数"><a href="#字符串处理函数" class="headerlink" title="字符串处理函数"></a>字符串处理函数</h2><blockquote>
<ol>
<li><table>
<thead>
<tr>
<th>函数功能</th>
<th>函数调用的一般形式</th>
<th>功能描述及其说明</th>
</tr>
</thead>
<tbody><tr>
<td>求字符串长度</td>
<td>strlen(str)</td>
<td>由函数值返回字符串str实际长度，即不包括’\0’在内的实际字符的个数</td>
</tr>
<tr>
<td>字符串复制</td>
<td>strcpy(str1,str2)</td>
<td>将字符串str2复制到字符数组str1中，这里应确保字符数组str1的大小足以存放下字符串2</td>
</tr>
<tr>
<td>字符串比较</td>
<td>strcmp(str1,str2)</td>
<td>比较字符串str1和str2的大小，结果分一下三种第一种当str1大于str2时，函数返回值大于0；当str1等于str2时，函数返回值等于0；当str1小于str2时，函数返回值小于0</td>
</tr>
<tr>
<td>字符串链接</td>
<td>strcat(str1,str2)</td>
<td>将str2添加到str1的末尾</td>
</tr>
<tr>
<td>“n族”字符串复制</td>
<td>strncpy(str1,str2,n)</td>
<td>将字符串str2的至多前n个字符复制到字符数组str1中</td>
</tr>
<tr>
<td>“n族”字符串比较</td>
<td>strncmp(str1,str2,n)</td>
<td>比较前n个字符</td>
</tr>
<tr>
<td>“n族”字符串链接</td>
<td>strncat(str1,str2,n)</td>
<td>将str2最多前n个字符添加到str1的末尾</td>
</tr>
</tbody></table>
</li>
</ol>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>C语言学生管理系统(单链表)</title>
    <url>/2021/12/26/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="学生管理系统（单链表）"><a href="#学生管理系统（单链表）" class="headerlink" title="学生管理系统（单链表）"></a>学生管理系统（单链表）</h2><p><strong>某个班的学生，每个学生的信息包括学号、姓名、3门课成绩。从键盘输入学生的数据，要求：能够给用户提供以下功能：要求： 1、找到每门课成绩最高的学生，打印其全部信息;2、查找平均分最高的学生打印其信息；</strong></p>
<p>已经实现了的功能如上所述</p>
<p><strong>代码：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> id;</span><br><span class="line">	<span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">	<span class="keyword">double</span> math;</span><br><span class="line">	<span class="keyword">double</span> chinese;</span><br><span class="line">	<span class="keyword">double</span> english;</span><br><span class="line">&#125; Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SNode</span> &#123;</span></span><br><span class="line">	Student elem;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">SNode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; SNode,*SList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Order</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//初始化一个单链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(SList &amp;S)</span></span>;</span><br><span class="line"><span class="comment">//输入学生信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setSList</span><span class="params">(SList &amp;S)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印整个单链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintList</span><span class="params">(SList &amp;S)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得平均分最高的</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getMaxNode</span><span class="params">(SList &amp;S)</span></span>;</span><br><span class="line"><span class="comment">//打印单个节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintNode</span><span class="params">(SNode* &amp;S)</span></span>;</span><br><span class="line"><span class="comment">//获得单个科目的最大值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getMax</span><span class="params">(SList &amp;S)</span></span>;</span><br><span class="line"><span class="comment">//排序 这里我设计的排序都是使用冒泡排序 冒泡排序是适用于顺序表和链表的</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SortByChinese</span><span class="params">(SList &amp;S)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SortByMath</span><span class="params">(SList &amp;S)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SortByEnglish</span><span class="params">(SList &amp;S)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(SList &amp;S)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Order();</span><br><span class="line">	SList S;</span><br><span class="line">	<span class="keyword">int</span> order;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;order);</span><br><span class="line">	<span class="keyword">while</span>(order!=<span class="number">10</span>) &#123;</span><br><span class="line">		<span class="keyword">switch</span>(order) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				init(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				PrintList(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">				setSList(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">				getMaxNode(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">				getMax(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">deflaut:</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;请输入正确的指令:\n&quot;</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入你要执行的命令:&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;order);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Order</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;1.初始化一个单链表:\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;2.打印整个单链表\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;3.输入学生信息\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;4.打印平均分最大的人\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;5.分别打印三科分最高的人\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入你要执行的命令:&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(SList &amp;S)</span> </span>&#123;</span><br><span class="line">	S = (SNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SNode));</span><br><span class="line">	S-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">if</span>(S) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;单链表创建成功!!!\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;内存不足，单链表创建失败!!!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintList</span><span class="params">(SList &amp;S)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	SList L = (SList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SList));</span><br><span class="line">	L = S;</span><br><span class="line">	<span class="keyword">while</span>(L-&gt;next) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,L-&gt;elem.id);</span><br><span class="line">		<span class="comment">//打印学生姓名</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; L-&gt;elem.name[j]!=<span class="string">&#x27;#&#x27;</span>; j++) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,L-&gt;elem.name[j]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;数学成绩:%lf\t&quot;</span>,L-&gt;elem.math);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;语文成绩:%lf\t&quot;</span>,L-&gt;elem.chinese);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;英语成绩:%lf\t&quot;</span>,L-&gt;elem.english);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">		L = L-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setSList</span><span class="params">(SList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//输入学生信息就是给单链表插入数据的过程</span></span><br><span class="line">	<span class="comment">//这里采用的方法是前插法创建链表</span></span><br><span class="line">	<span class="keyword">int</span> num;</span><br><span class="line">	<span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入你要输入几个学生信息:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">	<span class="keyword">while</span>(num!=<span class="number">0</span>) &#123;</span><br><span class="line">		SNode* L = (SNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SNode));</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入学生的学号:&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;L-&gt;elem.id);</span><br><span class="line">		getchar();</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入学生姓名(学生姓名以#结尾):&quot;</span>);</span><br><span class="line">		i=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">do</span> &#123;</span><br><span class="line">			i++;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;L-&gt;elem.name[i]);</span><br><span class="line">		&#125; <span class="keyword">while</span>(L-&gt;elem.name[i]!=<span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入学生的数学成绩:&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;L-&gt;elem.math);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入学生的语文成绩:&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;L-&gt;elem.chinese);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入学生的英语成绩:&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;L-&gt;elem.english);</span><br><span class="line"></span><br><span class="line">		L-&gt;next = S;</span><br><span class="line">		S = L;</span><br><span class="line">		num--;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getMaxNode</span><span class="params">(SList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//用一个指针执行平均分最高的</span></span><br><span class="line">	<span class="keyword">double</span> totalMax;</span><br><span class="line">	<span class="comment">//给总数一个初始化 因为每人都是三科 平均分的最大值就是总分的最大值</span></span><br><span class="line">	totalMax = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">double</span> total;</span><br><span class="line">	SNode* LMax = (SNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SNode));</span><br><span class="line">	SNode* L    = (SNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SNode));</span><br><span class="line">	L = S;</span><br><span class="line">	LMax = L;</span><br><span class="line">	<span class="keyword">while</span>(L-&gt;next) &#123;</span><br><span class="line">		total = L-&gt;elem.chinese + L-&gt;elem.english + L-&gt;elem.math;</span><br><span class="line">		<span class="keyword">if</span>(total &gt; totalMax) &#123;</span><br><span class="line">			totalMax = total;</span><br><span class="line">			LMax = L;</span><br><span class="line">		&#125;</span><br><span class="line">		L = L-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;平均分最大的人是:\n&quot;</span>);</span><br><span class="line">	PrintNode(LMax);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintNode</span><span class="params">(SNode* &amp;S)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,S-&gt;elem.id);</span><br><span class="line">	<span class="comment">//打印学生姓名</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; S-&gt;elem.name[j]!=<span class="string">&#x27;#&#x27;</span>; j++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,S-&gt;elem.name[j]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;数学成绩:%lf\t&quot;</span>,S-&gt;elem.math);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;语文成绩:%lf\t&quot;</span>,S-&gt;elem.chinese);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;英语成绩:%lf\t&quot;</span>,S-&gt;elem.english);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getMax</span><span class="params">(SList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">double</span> englishMax = <span class="number">0.0</span>;</span><br><span class="line">	<span class="keyword">double</span> chineseMax = <span class="number">0.0</span>;</span><br><span class="line">	<span class="keyword">double</span> mathMax = <span class="number">0.0</span>;</span><br><span class="line">	<span class="keyword">double</span> chinese;</span><br><span class="line">	<span class="keyword">double</span> english;</span><br><span class="line">	<span class="keyword">double</span> math;</span><br><span class="line"></span><br><span class="line">	SNode* LChineseMax = (SNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SNode));</span><br><span class="line">	SNode* LMathMax = (SNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SNode));</span><br><span class="line">	SNode* LEnglishMax = (SNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SNode));</span><br><span class="line">	SNode* L    = (SNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SNode));</span><br><span class="line">	L = S;</span><br><span class="line">	<span class="keyword">while</span>(L-&gt;next) &#123;</span><br><span class="line">		chinese = L-&gt;elem.chinese;</span><br><span class="line">		english = L-&gt;elem.english;</span><br><span class="line">		math = L-&gt;elem.math;</span><br><span class="line">		<span class="keyword">if</span>(math &gt; mathMax) &#123;</span><br><span class="line">			mathMax = math;</span><br><span class="line">			LMathMax = L;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(english &gt; englishMax) &#123;</span><br><span class="line">			englishMax = english;</span><br><span class="line">			LEnglishMax = L;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(chinese &gt; chineseMax) &#123;</span><br><span class="line">			chineseMax = chinese;</span><br><span class="line">			LChineseMax = L;</span><br><span class="line">		&#125;</span><br><span class="line">		L = L-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;数学分最大的人是:\n&quot;</span>);</span><br><span class="line">	PrintNode(LMathMax);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;语文分最大的人是:\n&quot;</span>);</span><br><span class="line">	PrintNode(LChineseMax);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;英语分最大的人是:\n&quot;</span>);</span><br><span class="line">	PrintNode(LEnglishMax);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="程序运行截图"><a href="#程序运行截图" class="headerlink" title="程序运行截图"></a>程序运行截图</h3><p> <img src="https://s3.bmp.ovh/imgs/2021/12/66eb8640ab53cb60.png" alt="过程1"> </p>
<p> <img src="https://s3.bmp.ovh/imgs/2021/12/e21faf9bd1a9482a.png"> </p>
<p> <img src="https://s3.bmp.ovh/imgs/2021/12/e3b318b0b85d8f9c.png"> </p>
<p> <img src="https://s3.bmp.ovh/imgs/2021/12/2ca6a711307866df.png"> </p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="C语言常用工具"><a href="#C语言常用工具" class="headerlink" title="C语言常用工具"></a>C语言常用工具</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul>
<li>用/ * 和 * /包含起来的内容成为注释</li>
<li>在/ 和 * 之间不能有空格</li>
</ul>
<p>C++风格的注释则是以//开始，只能注释一行</p>
<p>注释不可以嵌套，即不能在一个注释中嵌套另一个注释</p>
<h2 id="sizeof"><a href="#sizeof" class="headerlink" title="sizeof"></a>sizeof</h2><p><em><strong>sizeof是C语言的关键字，不是函数名。sizeof（）是C语言提供的专门用于计算制定数据类型字节的运算型。</strong></em><br>使用方法</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;xx %d&quot;</span>,size of (xx));</span><br></pre></td></tr></table></figure>

<h2 id="宏常量"><a href="#宏常量" class="headerlink" title="宏常量"></a>宏常量</h2><ul>
<li>在程序中直接使用的常数，成为幻数</li>
<li>为了保护良好的程序设计风格，可把幻术定义为宏常量或const常量</li>
</ul>
<p>eg ：#define PI 3.14159</p>
<ul>
<li>宏定义的一般形式为#define 标识符 字符串</li>
<li>在用#define定义一个标识符和一个字符串，程序进行时遇到标识符时会被识别为字符串</li>
<li>宏定义中标识符被称为<strong>宏名</strong> ，习惯用字母全部大写的单词命名宏常量。将程序中出现字符串代替标识符的过程称为宏替换</li>
</ul>
<p><em><strong>宏定义中的宏名与字符串之间可有多个空白符，但无需加等号，且字符串后一般不以分号结尾，，因此宏定义不是C语句，而是一种编译预处理命令</strong></em></p>
<p><em><strong>如果字符串加分号，在替换时会连同“；”一起替换</strong></em></p>
<h2 id="常用的标准数学函数"><a href="#常用的标准数学函数" class="headerlink" title="常用的标准数学函数"></a>常用的标准数学函数</h2><table>
<thead>
<tr>
<th align="center">函数名</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">sqrt(x)</td>
<td align="center">计算x的平方根，x应大于等于0</td>
</tr>
<tr>
<td align="center">fabs(x)</td>
<td align="center">计算x的绝对值</td>
</tr>
<tr>
<td align="center">log(x)</td>
<td align="center">计算lnx的值，x应大于0</td>
</tr>
<tr>
<td align="center">log10(x)</td>
<td align="center">计算lgx的值，x应大于0</td>
</tr>
<tr>
<td align="center">exp(x)</td>
<td align="center">计算e^x的值</td>
</tr>
<tr>
<td align="center">pow(x,y)</td>
<td align="center">计算x^y的值</td>
</tr>
<tr>
<td align="center">sin(x)</td>
<td align="center">计算sinx的值，x的弧度值，而非角度值</td>
</tr>
<tr>
<td align="center">cos(x)</td>
<td align="center">计算cosx的值，x的弧度值，而非角度值</td>
</tr>
</tbody></table>
<h2 id="域宽m"><a href="#域宽m" class="headerlink" title="域宽m"></a>域宽m</h2><p>输出域宽m（m为整数）</p>
<p>作用：指定输出项输出十所占的列数</p>
<table>
<thead>
<tr>
<th align="center">类型</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">%md</td>
<td align="center">若m为正整数，当输出数据的域宽小于m时在域内内向右靠齐，左边多余位补空格；当输出数据的域宽大于m时，按实际宽度全部输出</td>
</tr>
<tr>
<td align="center">%0md</td>
<td align="center">若m前有前导号0，则在左边多余位补0</td>
</tr>
<tr>
<td align="center">%-md</td>
<td align="center">若m为负整数，则输出数据在域内向左靠齐</td>
</tr>
</tbody></table>
<p><em><strong>显示精度.n</strong></em></p>
<table>
<thead>
<tr>
<th align="center">类型</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">%.nf</td>
<td align="center">用于指定输出浮点数的小数位数</td>
</tr>
<tr>
<td align="center">%.ns</td>
<td align="center">用于指定从字符串左侧开始截取的子串字符的个数</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E5%B8%B8%E8%80%83%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<h1 id="C语言常考知识点"><a href="#C语言常考知识点" class="headerlink" title="C语言常考知识点"></a>C语言常考知识点</h1><ol>
<li><p>标准C语言编写的程序都是以main（）作为开头，有且只能存在一个main</p>
</li>
<li><p>主函数中的语句用换括号{}括起来</p>
</li>
<li><p>C语言是以分号;（英文中的分号）结尾的</p>
</li>
<li><p>C程序总是以主函数开始执行，与它在程序中的位置无关</p>
</li>
<li><p>不能在注释中添加另一个注释</p>
</li>
<li><p>C语言中没有提供专门的输入/输出的语句，输入/输出操作是通过调用C的标准库函数来实现的</p>
</li>
<li><p>负数是以补码的形式在电脑中储存的</p>
</li>
<li><p>一个函数包括<strong>声明部分</strong>和<strong>执行部分</strong></p>
</li>
<li><p>C语言中的下标都是从0开始的</p>
</li>
<li><p>计算机中数组计算所占内存的方法</p>
<ul>
<li>一维数组在内存中占用的字节数为：数组长度 * sizeof（基类型）</li>
<li>二维数组在内存中占用的字节数为：第一维长度 * 第二维长度 * sizeof（基类型）</li>
</ul>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/</url>
    <content><![CDATA[<h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><h2 id="变量的内存地址"><a href="#变量的内存地址" class="headerlink" title="变量的内存地址"></a>变量的内存地址</h2><p>在C语言中，要获得变量的地址，需要用到**取地址运算符（Address Operator），即&amp;.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p&quot;</span>,&amp;a);</span><br></pre></td></tr></table></figure>

<p><strong>%p格式符，表示输出变量a，b，c的地址值</strong></p>
<p><strong>地址值是用一个十六进制的无符号整数表示的，其字长一般与主机字长相同</strong></p>
<p><strong>变量的地址</strong>：变量在内存中所占内存空间的首地址</p>
<p><strong>变量的值</strong>：变量在存储空间中存放的数据</p>
<p><strong>变量的名字</strong></p>
<h2 id="指针的变量的定义和初始化"><a href="#指针的变量的定义和初始化" class="headerlink" title="指针的变量的定义和初始化"></a>指针的变量的定义和初始化</h2><p><strong>指针</strong>：存放变量的一种特殊类型的变量。</p>
<p><strong>指针变量</strong>：具有指针类型的变量，是专门用于存储变量的地址值的变量</p>
<p>定义变量的形式：</p>
<p>​                    <strong>类型关键字 * 指针变量名</strong></p>
<p><strong>指针变量的基类型</strong>：类型关键字代表变量要指向的变量的数据类型，</p>
<h3 id="指针的初始化"><a href="#指针的初始化" class="headerlink" title="指针的初始化"></a>指针的初始化</h3><p>指针变量未初始化意味着指针变量的值为一个随机值。</p>
<p>为了避免忘记指针初始化带给系统带来的潜在危险，为了防止指针乱指一气，习惯上在定义指针变量的同时将其初始化为NULL（在stdio.h中定义为零值得宏）</p>
<p><strong>指向某变量的指针变量，通常简称为某变量的指针</strong></p>
<p>虽然指针变量中存在的是变量的地址值，二者在数值上相等，但在概念上变量的指针不等同于变量的地址。</p>
<p>变量的地址是一个常数，不能对其赋值，二变量是一个变量，其值是可以改变的.</p>
<p><em><strong>指针变量只能指向同一基类型的变量</strong></em></p>
<h3 id="对指针初始化的方法"><a href="#对指针初始化的方法" class="headerlink" title="对指针初始化的方法"></a>对指针初始化的方法</h3><ul>
<li>直接初始化</li>
<li>间接初始化</li>
</ul>
<h4 id="直接初始化"><a href="#直接初始化" class="headerlink" title="直接初始化"></a>直接初始化</h4><p>类型：int *pa = &amp;a；</p>
<h4 id="间接初始化"><a href="#间接初始化" class="headerlink" title="间接初始化"></a>间接初始化</h4><p>类型：int *pa；</p>
<p>​            pa = &amp;a；</p>
<h2 id="间接寻址运算符"><a href="#间接寻址运算符" class="headerlink" title="间接寻址运算符"></a>间接寻址运算符</h2><p><strong>直接寻址</strong>：直接按变量名或者变量的地址存取变量内容的访问方式</p>
<p>scanf(“%d”,&amp;a);</p>
<p>printf(“%d”,a);</p>
<p><strong>间接寻址</strong>：用过指针变量间接存取它所指向的变量的访问方式</p>
<p><strong>指针运算符，也称间接寻址运算符</strong>即为 * 。间接寻址运算符 * 用来访问指针变量指向的变量的值</p>
<p>通过 * 可以对指针变量实现解引用，即访问指针变量</p>
]]></content>
  </entry>
  <entry>
    <title>C语言按字符读写文件</title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E6%8C%89%E5%AD%97%E7%AC%A6%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="按字符读写文件"><a href="#按字符读写文件" class="headerlink" title="按字符读写文件"></a>按字符读写文件</h1><p>ANSI C提供了丰富的文件读写函数。包括按字符读写，按数据块读写，按格式读写等。</p>
<h2 id="读写文件中的字符"><a href="#读写文件中的字符" class="headerlink" title="读写文件中的字符"></a>读写文件中的字符</h2><p>​      函数<strong>fgetc（）</strong>用于从一个以只读或读写方式打开的文件上读字符。fgetc（）函数的原型为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fgets</span><span class="params">(FILE *fp)</span></span>;</span><br></pre></td></tr></table></figure>

<p>其中fp是由函数fopen()返回的文件指针。</p>
<p><strong>功能</strong>：从fp所指的文件中读取一个字符，并将位置指针指向下一个字符。若读取成功则返回该字符，若读到文件末尾，则返回EOF(EOF是一个符号常量，在stdio.h中定义为-1)</p>
<p>​      函数<strong>fputc（）</strong>用于将一个字符写到一个文件上。fputc（）的函数原型为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fputc</span><span class="params">(<span class="keyword">int</span> c,FILE *fp)</span></span>;</span><br></pre></td></tr></table></figure>

<p>其中fp是由函数fopen()返回的文件指针。c是要输出的字符（尽管C定义为int型，但只能写入低字节）</p>
<p><strong>功能</strong>：将字符c写在文件指针fp所指的文件中。若写入错误，则返回EOF，否则返回字符c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    fp = fopen(<span class="string">&quot;D:\\demo.txt&quot;</span>,<span class="string">&quot;w&quot;</span>); <span class="comment">//此处也许是编译器问题，我的Clion必须加上demo所在的盘位置才行</span></span><br><span class="line">    <span class="keyword">if</span>(fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open demo.text!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ch = getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fputc(ch, fp);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以在D盘的位置找到demo.txt 确实里边写的内容和我们输入的内容一致</p>
<p><strong>注意</strong>：使用getchar()输入字符时，是先将所有字符送入缓冲区，直到键入回车换行符才从缓冲区逐个读出并赋值给变量ch</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    fp = fopen(<span class="string">&quot;D:\\demo.bin&quot;</span>,<span class="string">&quot;wb&quot;</span>);    <span class="comment">//此处也许是编译器问题，我的Clion必须加上demo所在的盘位置才行</span></span><br><span class="line">    <span class="keyword">if</span>(fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open demo.bin!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">128</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fputc(i,fp);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    fp = fopen(<span class="string">&quot;D:\\demo.bin&quot;</span>,<span class="string">&quot;rb&quot;</span>);   <span class="comment">//此处也许是编译器问题，我的Clion必须加上demo所在的盘位置</span></span><br><span class="line">    <span class="keyword">if</span>(fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open demo.bin!\n&quot;</span>);<span class="comment">//否则这里会报错</span></span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>((ch = fgetc(fp)) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(ch);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在程序倒数的while循环中，通过检查函数fgets（）的返回值是否为EOF来判断是否读到文件末尾，若读到末尾就返回EOF，即-1。</p>
<p>除此之外，还可以使用函数feof（）来判断是否读到文件末尾。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    fp = fopen(<span class="string">&quot;D:\\demo.bin&quot;</span>,<span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open demo.bin!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">128</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fputc(i,fp);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    fp = fopen(<span class="string">&quot;D:\\demo.bin&quot;</span>,<span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open demo.bin! \n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>((ch = fgetc(fp)) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isprint</span>(ch))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c\t&quot;</span>,ch);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,ch);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>除本例使用的方法外，还可以使用函数feof()来判断是否读道文本的末尾</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(!feof(fp))</span><br><span class="line">&#123;</span><br><span class="line">    ch = fgetc(fp);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isprint</span>(ch))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c\t&quot;</span>,ch);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>为了解决如果文本末尾的文件结束符又是一个-1，或不可打印字符不能被读出的问题</strong></p>
<p>可以将isprint()判断是否可以打印字符改为函数iscntrl()判断,即将其改为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="built_in">iscntrl</span>(ch))</span><br></pre></td></tr></table></figure>

<p><strong>函数feof()总是在读完文件所有内容后再执行一次读文件操作（将文件结束符读走，但不显示）才能返回真（非0）值</strong></p>
<h2 id="读写文件中的字符串"><a href="#读写文件中的字符串" class="headerlink" title="读写文件中的字符串"></a>读写文件中的字符串</h2><p>从文件中读取字符串可使函数fgets()其函数原型为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">fgets</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> n, FILE *fp)</span></span>;</span><br></pre></td></tr></table></figure>

<p><strong>作用</strong>：该函数从fp所指的文件中读取字符串末尾添加‘\0’，然后存入s，最多读n-1个字符。当读到回车符、到达文件尾或读满n-1个字符时，函数返回该字符串的首个地址。即指针s的值，读取失败时返回空指针NULL。</p>
<p>**函数ferror()**：用来检测是否出现文件错误，如果出现失误，则函数返回一个非0值，否则，函数返回0值</p>
<p><strong>使用</strong>：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(ferror(fp))</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Error on file\n&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><strong>fputs()函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fputs</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *s,FILE *fp)</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 80</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">char</span> str[N];</span><br><span class="line">    <span class="keyword">if</span>((fp = fopen(<span class="string">&quot;D:\\demo.txt&quot;</span>,<span class="string">&quot;a&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open demo.text! \n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="built_in">fputs</span>(str,fp);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">if</span>((fp = fopen(<span class="string">&quot;D:\\demo.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open demo.text! \n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fgets(str,N,fp);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>该程序可以实现对文件进行书写，但不更改源文件中的内容</strong></p>
<p>在每次运行上述程序时，从键盘输入的字符串都会被添加到demo.txt的末尾</p>
<p>​    与gets（）不同的是，fgets（）从指定的流读字符串，读到换行符时，将换行符也作为字符串的一部分读到字符串中来。同理，与puts（）不同的是，fputs（）不会早写入文件的字符串末尾加上换行符。</p>
]]></content>
  </entry>
  <entry>
    <title>C语言指针和数组</title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E5%92%8C%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h1 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h1><p>C语言其高效性就在于其有指针这一利器，所以我们要好好弄懂指针和数组的区别</p>
<h2 id="指针和一维数组的关系"><a href="#指针和一维数组的关系" class="headerlink" title="指针和一维数组的关系"></a>指针和一维数组的关系</h2><h3 id="数组名的意义及其访问一维数组的方法"><a href="#数组名的意义及其访问一维数组的方法" class="headerlink" title="数组名的意义及其访问一维数组的方法"></a>数组名的意义及其访问一维数组的方法</h3><p><strong>数组名</strong>：数组名代表了存放数组的连续空间的首地址</p>
<p>对数组的访问可以通过两种方式：下标法和指针</p>
<p>第一种：下标法</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">5</span>],i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Input five numbers&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);   <span class="comment">/*下标法写入数组元素*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);   <span class="comment">/*下标法读出数组元素*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第二种：指针</p>
<p>因为数组名a代表数组的首地址，即元素a[0]的地址（&amp;a[0]）</p>
<p>因此，可以通过*a（此处 *为解引用符）来获得首地址a所指的储存单元中储存的内容</p>
<p><strong>原因</strong>数组元素之所以能够通过这种方法来引用，是因为数组的下标运算符[]实际上就是以指针作为操作数的</p>
<p>类型 ： *(a+i)意义为引用数组首地址后第i个元素</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">5</span>],i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Input five numbers&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);                   <span class="comment">/*这里的a+i等于a[i]*/</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*(a+i);                   <span class="comment">/*这里的a+i等于a[i]*/</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="指针与二维数组的关系"><a href="#指针与二维数组的关系" class="headerlink" title="指针与二维数组的关系"></a>指针与二维数组的关系</h2>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E6%8C%89%E6%95%B0%E6%8D%AE%E5%9D%97%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="按数据块读写文件"><a href="#按数据块读写文件" class="headerlink" title="按数据块读写文件"></a>按数据块读写文件</h1><p>函数fread（）和fwrite（）用于一次读取一组数据，即按数据块读写文件。</p>
<h2 id="fread（）函数"><a href="#fread（）函数" class="headerlink" title="fread（）函数"></a>fread（）函数</h2><p><strong>函数的原型</strong>：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">fread</span><span class="params">(<span class="keyword">void</span> *buffer, <span class="keyword">unsigned</span> <span class="keyword">int</span> size, <span class="keyword">unsigned</span> <span class="keyword">int</span> countn, FILE *fp)</span></span>;</span><br></pre></td></tr></table></figure>

<p><strong>功能</strong>：fread（）函数的功能是从fp所指的文件中读取数据块并存储到buffer指向的内存中。</p>
<p><strong>参数的用途</strong>：buffer是待读入数据块的起始地址。size是每个数据块的大小（待读入的每个数据块的字节数）。count是最多允许读取的数据块个数（每个数据块size个字节）。</p>
<p><strong>返回值类型</strong>：函数返回的是实际写入的数据块个数</p>
<p>  块数据的读写使我们不再局限于一个只读取一个字符、一个单词或一行字符串，它允许用户指定想要读写的内存放大小，最小为1个字节，最大为整个文件。</p>
<p><strong>此实例的程序的前提是在D盘中已经有了一个名为score.txt文件</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 30</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">&#125;DATE;</span><br><span class="line"><span class="keyword">typedef</span>  <span class="class"><span class="keyword">struct</span>  <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">long</span> studentID;</span><br><span class="line">    <span class="keyword">char</span> studentName[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> studentSex;</span><br><span class="line">    DATE birthday;</span><br><span class="line">    <span class="keyword">int</span> score[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">float</span> aver;</span><br><span class="line">&#125;STUDENT;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputScore</span><span class="params">(STUDENT stu[],<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AverScore</span><span class="params">(STUDENT stu[], <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WritetoFile</span><span class="params">(STUDENT stu[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintScore</span><span class="params">(STUDENT stu[], <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ReadfromFile</span><span class="params">(STUDENT stu[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    STUDENT stu[N];</span><br><span class="line">    <span class="keyword">int</span> n, m = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;How many student?\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    InputScore(stu,n,m);</span><br><span class="line">    AverScore(stu,n,m);</span><br><span class="line">    WritetoFile(stu,n);</span><br><span class="line">    n = ReadfromFile(stu);</span><br><span class="line">    PrintScore(stu, n, m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputScore</span><span class="params">(STUDENT stu[],<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Input record %d:\n&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>,&amp;stu[i].studentID);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,stu[i].studentName);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot; %c&quot;</span>,&amp;stu[i].studentSex);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;stu[i].birthday.year);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;stu[i].birthday.month);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;stu[i].birthday.day);</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;stu[i].score[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AverScore</span><span class="params">(STUDENT  stu[], <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, sum;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum = sum + stu[i].score[j];</span><br><span class="line">        &#125;</span><br><span class="line">        stu[i].aver = (<span class="keyword">float</span>)sum / m;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WritetoFile</span><span class="params">(STUDENT stu[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">if</span>((fp = fopen(<span class="string">&quot;D:\\student.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open score.txt!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fwrite(stu, <span class="keyword">sizeof</span>(STUDENT), n, fp);</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ReadfromFile</span><span class="params">(STUDENT stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">if</span>((fp = fopen(<span class="string">&quot;D:\\student.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open score.txt!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; !feof(fp); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fread(&amp;stu[i],<span class="keyword">sizeof</span>(STUDENT),<span class="number">1</span>,fp);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Total student is %d.\n&quot;</span>,i<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> i - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintScore</span><span class="params">(STUDENT stu[], <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%10ld%8s%3c%6d/%02d/%02d&quot;</span>,stu[i].studentID,stu[i].studentName,stu[i].studentSex,</span><br><span class="line">               stu[i].birthday.year,stu[i].birthday.month,stu[i].birthday.day);</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>,stu[i].score[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%6.1f\n&quot;</span>,stu[i].aver);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>/<em>将输入的数据写入名为student.txt的文件中</em>/</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E6%8C%89%E6%A0%BC%E5%BC%8F%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="按格式读写文件"><a href="#按格式读写文件" class="headerlink" title="按格式读写文件"></a>按格式读写文件</h1><p>C语言允许按指定格式读写文件。<strong>函数fscanf（）用于按指定格式从文件读数据。</strong></p>
<p><strong>函数原型为：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fscanf</span><span class="params">(FILE *fp, <span class="keyword">const</span> <span class="keyword">char</span> *format,...)</span></span>;</span><br></pre></td></tr></table></figure>

<p><strong>参数作用</strong>：第一个参数为<strong>文件指针</strong>，第二个参数为<strong>格式控制参数</strong>，第三个参数为<strong>地址参数列表</strong>，后两个参数和返回值与函数scanf（）相同。</p>
<p><strong>fprintf()函数用于指定格式像文件写数据</strong></p>
<p><strong>函数原型为：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fprintf</span><span class="params">(FILE *fp, <span class="keyword">const</span> <span class="keyword">char</span> *format,...)</span></span>;</span><br></pre></td></tr></table></figure>

<p><strong>参数作用</strong>：第一个参数为<strong>文件指针</strong>，第二个参数为<strong>格式控制参数</strong>，第三个参数为<strong>输入参数列表</strong>，后两个参数和返回值与函数printf（）相同。</p>
<p>**用函数fscanf（）和fprintf（）进行文件的格式化读写，读写方便，容易理解，但输入时要将ASCLL字符转换成二进制数，输出时，要将二进制数转换为ASCLL字符，比较耗时。</p>
<p>以下实例函数可以实现对学生信息的采集，输入到文件中</p>
<p>需要做的准备为，在D盘建立名为score.txt的文件</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 30</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">&#125;DATE;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">long</span> studentID;</span><br><span class="line">    <span class="keyword">char</span> studentName[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> studentSex;</span><br><span class="line">    DATE birthday;</span><br><span class="line">    <span class="keyword">int</span> score[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">float</span> aver;</span><br><span class="line">&#125;STUDENT;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputScore</span><span class="params">(STUDENT stu[],<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AverScore</span><span class="params">(STUDENT stu[], <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WritetoFile</span><span class="params">(STUDENT stu[],<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    STUDENT stu[N];</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;How many student?\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    InputScore(stu,n,<span class="number">4</span>);</span><br><span class="line">    AverScore(stu,n,<span class="number">4</span>);</span><br><span class="line">    WritetoFile(stu,n,<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputScore</span><span class="params">(STUDENT stu[],<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Input record %d:\n&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>,&amp;stu[i].studentID);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,stu[i].studentName);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot; %c&quot;</span>,&amp;stu[i].studentSex);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;stu[i].birthday.year);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;stu[i].birthday.month);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;stu[i].birthday.day);</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;stu[i].score[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AverScore</span><span class="params">(STUDENT  stu[], <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, sum;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum = sum + stu[i].score[j];</span><br><span class="line">        &#125;</span><br><span class="line">        stu[i].aver = (<span class="keyword">float</span>)sum / m;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WritetoFile</span><span class="params">(STUDENT stu[],<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">if</span>((fp = fopen(<span class="string">&quot;D:\\score.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open score.txt!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%d\t,%d\n&quot;</span>,n,m);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%10ld%8s%3c%6d/%02d/%02d&quot;</span>,stu[i].studentID,stu[i].studentName,stu[i].studentSex,stu[i].birthday.year,stu[i].birthday.month,stu[i].birthday.day);</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%4d&quot;</span>,stu[i].score[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%6.1f\n&quot;</span>,stu[i].aver);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>该程序对文件内容的书写是会改变文件中的内容的</strong></p>
<p>在对程序进行数据输入后，程序就自动退出了，可以通过用户自己到D盘找到score.txt文件去查看文件情况。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 30</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">&#125;DATE;</span><br><span class="line"><span class="keyword">typedef</span>  <span class="class"><span class="keyword">struct</span>  <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">long</span> studentID;</span><br><span class="line">    <span class="keyword">char</span> studentName[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> studentSex;</span><br><span class="line">    DATE birthday;</span><br><span class="line">    <span class="keyword">int</span> score[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">float</span> aver;</span><br><span class="line">&#125;STUDENT;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReadfromFile</span><span class="params">(STUDENT stu[],<span class="keyword">int</span> *n, <span class="keyword">int</span> *m)</span></span>;<span class="comment">//从文件中读取数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintScore</span><span class="params">(STUDENT stu[], <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>;<span class="comment">//屏幕打印数据</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    STUDENT stu[N];</span><br><span class="line">    <span class="keyword">int</span> n,m=<span class="number">4</span>;</span><br><span class="line">    ReadfromFile(stu, &amp;n, &amp;m);</span><br><span class="line">    PrintScore(stu, n, m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReadfromFile</span><span class="params">(STUDENT stu[], <span class="keyword">int</span> *n, <span class="keyword">int</span> *m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">if</span>((fp = fopen(<span class="string">&quot;D:\\score.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failure to open score.txt!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp,<span class="string">&quot;%d\t%d&quot;</span>,n,m);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; *n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp,<span class="string">&quot;%10ld&quot;</span>,&amp;stu[i].studentID);</span><br><span class="line">        <span class="built_in">fscanf</span>(fp,<span class="string">&quot;%8s&quot;</span>,stu[i].studentName);</span><br><span class="line">        <span class="built_in">fscanf</span>(fp,<span class="string">&quot;% c&quot;</span>,&amp;stu[i].studentSex);</span><br><span class="line">        <span class="built_in">fscanf</span>(fp,<span class="string">&quot;%6d/%2d/%2d&quot;</span>,&amp;stu[i].birthday.year,</span><br><span class="line">                                &amp;stu[i].birthday.month,</span><br><span class="line">                                &amp;stu[i].birthday.day);</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(fp,<span class="string">&quot;%4d&quot;</span>, &amp;stu[i].score[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp,<span class="string">&quot;%f&quot;</span>,&amp;stu[i].aver);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintScore</span><span class="params">(STUDENT stu[], <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%10ld%8s%3c%6d/%02d/%02d&quot;</span>,stu[i].studentID,stu[i].studentName,stu[i].studentSex,</span><br><span class="line">                                          stu[i].birthday.year,stu[i].birthday.month,stu[i].birthday.day);</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>,stu[i].score[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%6.1f\n&quot;</span>,stu[i].aver);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>此程序出了问题，不知问题出在程序还是文件，在深入学习了解后，我会对该程序进行改正</strong></p>
<p>该程序原本的功能是用于对文件中的数据进行提取输出</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E6%8E%92%E5%BA%8F%E5%92%8C%E6%9F%A5%E6%89%BE/</url>
    <content><![CDATA[<h1 id="排序和查找"><a href="#排序和查找" class="headerlink" title="排序和查找"></a>排序和查找</h1><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p><strong>排序</strong>：是把一系列无序的数据按照特定的顺序重新排列为有序序列的过程</p>
<h3 id="交换法排序"><a href="#交换法排序" class="headerlink" title="交换法排序"></a>交换法排序</h3><p><strong>特点</strong>：性能比较低，但是易于理解，是选择法的基础</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j = i+<span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        若score[j] &gt; score[i]</span><br><span class="line">        则交换 score[j] 和 score[i] 的值    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="选择排序法"><a href="#选择排序法" class="headerlink" title="选择排序法"></a>选择排序法</h3><p><strong>特点</strong>：执行次数少，不过较难理解</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void DateSort(int score[], int n)</span><br><span class="line">&#123;</span><br><span class="line">    int i, j, k, temp;</span><br><span class="line">    for(i = 0; i &lt; n-1; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        k = i;</span><br><span class="line">        for(j = i + 1; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(score[j] &gt; score[k])</span><br><span class="line">            &#123;</span><br><span class="line">                k = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(k != i)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = score[k];</span><br><span class="line">            score[k] = score[i];</span><br><span class="line">            score[i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">                </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对信息进行排序时，通常只使用信息的一个子项作为<strong>键值（Key Value）</strong>，由键值决定信息的全部子项的排列顺序</p>
<h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p><strong>查找</strong>：在数组中搜索一个特定元素的处理过程</p>
<h3 id="线性查找（Linear-Search）"><a href="#线性查找（Linear-Search）" class="headerlink" title="线性查找（Linear Search）"></a>线性查找（Linear Search）</h3><p><strong>特点</strong>：算法简单直观，但效率较低</p>
<p><strong>查找键</strong>：查找的基本过程是利用循环顺序扫描整个数组，依次将每个元素与待查找值进行比较；若找到就停止循环</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(number == X)</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="折半查找（Binary-Search）"><a href="#折半查找（Binary-Search）" class="headerlink" title="折半查找（Binary Search）"></a>折半查找（Binary Search）</h3><p><strong>特点</strong>：稍微复杂，但效率很高</p>
<p><strong>注意</strong>：折半查找只能在已经排好序的数值中查找</p>
<p><strong>折半查找基本思想</strong>：首先选取位于数组中间的元素，将其与查找键进行比较。如果它们的值相等，则查找建以被找到，返回数组中间元素的下标。否则，将查找的区间缩小为原来区间的一半，即在一半的数组元素中查找</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> low = <span class="number">0</span>, high = n<span class="number">-1</span>,mid;</span><br><span class="line"><span class="keyword">while</span>(low &lt;= high)</span><br><span class="line">&#123;</span><br><span class="line">    mid = (high + low) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &gt; num[mid])</span><br><span class="line">        low = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x &lt; num[mid])</span><br><span class="line">        high = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> mid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="一维数组的定义和初始化"><a href="#一维数组的定义和初始化" class="headerlink" title="一维数组的定义和初始化"></a>一维数组的定义和初始化</h2><p><strong>数组</strong>：是一组具有相同类型的变量的集合</p>
<p><strong>数组名</strong>：用以识别该组相同类型数据的名字</p>
<p><strong>数组元素</strong>：构成数组的每个数据项</p>
<p><strong>数组下标</strong></p>
<p><strong>数组的基类型</strong>：数组中元素的类型</p>
<p><strong>数组的维数</strong>：下标的个数</p>
<p>一维数组的格式：类型    数组名[元素个数]；</p>
<hr>
<p><em><strong>注意，C语言中的下标都是从0开始的</strong></em></p>
<p>为了访问数组中的每个元素，可以通过数组名加上标值得形式，在数组名的右侧添加方括号，然后将下标值写在其中。</p>
<hr>
<p><strong>在定义数组时不能使用变量定义数组的大小</strong></p>
<h3 id="一维数组的初始化"><a href="#一维数组的初始化" class="headerlink" title="一维数组的初始化"></a>一维数组的初始化</h3><p>定义但未进行初始化的数组元素的值仍然是随机数。</p>
<p><strong>初始化方法</strong></p>
<p>将元素初值放在=后面用一对花括号括起来的初始化列表中。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> score[<span class="number">5</span>] = &#123;<span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">100</span>,<span class="number">95</span>&#125;;</span><br></pre></td></tr></table></figure>

<p>初始化的值不能多于数组元素个数，也可以不规定数组元素个数，机器会自动识别；</p>
<p>当初始化的值不够数组元素个数时，机器会自动将其他的补位0</p>
<h2 id="二维数组的定义和初始化"><a href="#二维数组的定义和初始化" class="headerlink" title="二维数组的定义和初始化"></a>二维数组的定义和初始化</h2><p><strong>定义一般格式</strong></p>
<p>类型     数组名[第一维长度] [第二维长度]</p>
<p>第一维长度代表数组的行数，第二维长度代表数组的列数</p>
<h3 id="计算机中数组计算所占内存的方法"><a href="#计算机中数组计算所占内存的方法" class="headerlink" title="计算机中数组计算所占内存的方法"></a>计算机中数组计算所占内存的方法</h3><ul>
<li>一维数组在内存中占用的字节数为：数组长度 * sizeof（基类型）</li>
<li>二维数组在内存中占用的字节数为：第一维长度 * 第二维长度 * sizeof（基类型）</li>
</ul>
<h3 id="相数组输入和输出数据"><a href="#相数组输入和输出数据" class="headerlink" title="相数组输入和输出数据"></a>相数组输入和输出数据</h3><p><strong>原理</strong>：由于C语言中不带下标的数组名具有特殊的含义，它代表数组的首地址，因此不能整体引用一个数组，每次只能引用指定下标值得数组元素</p>
<h4 id="输入数据"><a href="#输入数据" class="headerlink" title="输入数据"></a>输入数据</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;matrix[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="输出数据"><a href="#输出数据" class="headerlink" title="输出数据"></a>输出数据</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, &amp;matrix[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：</p>
<p>当对数组的全部元素进行初始化时，第一维的长度声明可以忽略</p>
<p>数组的第二维的长度声明永远不能省略</p>
<h2 id="向函数传递一维数组"><a href="#向函数传递一维数组" class="headerlink" title="向函数传递一维数组"></a>向函数传递一维数组</h2><p>数组元素和基本型变量一样，既可以出现在任何合法的C表达式中，也可用作函数参数</p>
<h3 id="数组作为参数的方式"><a href="#数组作为参数的方式" class="headerlink" title="数组作为参数的方式"></a>数组作为参数的方式</h3><p>若要把一个数组传递给一个函数，那么只要使用<strong>不带方括号</strong>的数组名作为函数实参调用函数即可</p>
<p><em><strong>注意，仅仅是数组名，不带方括号和下标</strong></em></p>
<h3 id="按值传递"><a href="#按值传递" class="headerlink" title="按值传递"></a>按值传递</h3><p>由于<strong>数组名代表数组第一个元素的地址</strong>，因此<strong>用数组名作函数实参实际上是将数组的首地址传给被调函数</strong></p>
<p><strong>注意：数组作为函数形参时，数组的长度可以不出现在数组名后面的方括号内，通常用另一个整型形参来指定数组的长度</strong></p>
<h2 id="向函数传递二维数组"><a href="#向函数传递二维数组" class="headerlink" title="向函数传递二维数组"></a>向函数传递二维数组</h2><p><strong>当形参被声明为二维数组时，可以省略数组的第一维长度声明，但不能忽略数组的第二维的长度声明</strong></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="C语言数据类型"><a href="#C语言数据类型" class="headerlink" title="C语言数据类型"></a>C语言数据类型</h1><p><em><strong>C语言程序处理的数据类型有常量（Constant）和变量（Variable）两种形式</strong></em></p>
<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><hr>
<table>
<thead>
<tr>
<th>常量类型</th>
<th>实例</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>整型常量</td>
<td>10，-30,0</td>
<td>包括正整数，负整数和零在内的所有整数</td>
</tr>
<tr>
<td>实型常量</td>
<td>3.14 -0.56</td>
<td>由于计算机的实型数是以浮点类型表示，实型常量也可以称为浮点数</td>
</tr>
<tr>
<td>字符常量</td>
<td>‘x’，‘X’，‘0’</td>
<td>用一对单引号括起来的任意字符</td>
</tr>
<tr>
<td>字符串常量</td>
<td>”Hello！“</td>
<td>用一对双引号括起来的零个或多个字符</td>
</tr>
</tbody></table>
<p><em>补充</em></p>
<ul>
<li>整数(有符号) ——&gt;int</li>
<li>无符号整数常量——&gt;int + 整数 + U或u</li>
<li>长整型 ——&gt;int + 整数 + L或l</li>
<li>无符号长整型——&gt;int + 整数 + Lu</li>
<li>十进制小数——&gt;必须带小数点</li>
<li>指数形式——&gt;eg：1e-10 用e或E代表以10位底的指数</li>
<li>单精度（float）——&gt;常数值后加F或f</li>
<li>双精度（double）——&gt;实型常量没有明确表明类型都是双精度</li>
<li>长双精度（long double）——&gt;12.5L 常数值后跟L或l来表示</li>
</ul>
<h4 id="字符常量"><a href="#字符常量" class="headerlink" title="字符常量"></a>字符常量</h4><p>字符常量有两种：普通字符和转义字符</p>
<p>常见的以“\”开头的特殊字符</p>
<table>
<thead>
<tr>
<th>转义字符</th>
<th>字符值</th>
<th>输出结果</th>
</tr>
</thead>
<tbody><tr>
<td>\ ‘</td>
<td>一个单撇号（‘）</td>
<td>输出单撇号字符’</td>
</tr>
<tr>
<td>\ ‘’</td>
<td>一个双撇号（“）</td>
<td>输出双撇号字符”</td>
</tr>
<tr>
<td>\ ?</td>
<td>一个问号（？）</td>
<td>输出问号字符？</td>
</tr>
<tr>
<td>\ \</td>
<td>一个反斜线（\）</td>
<td>输出反斜线字符\</td>
</tr>
<tr>
<td>\ a</td>
<td>警告（alert）</td>
<td>产生声音或视觉信号</td>
</tr>
<tr>
<td>\ b</td>
<td>退格（backspace）</td>
<td>将光标当前位置后退一个字符</td>
</tr>
<tr>
<td>\ f</td>
<td>换页（form feed）</td>
<td>将光标当前位置移到下一页的开头</td>
</tr>
<tr>
<td>\ n</td>
<td>换行</td>
<td>将光标当前位置移到下一行的开头</td>
</tr>
<tr>
<td>\ r</td>
<td>回车（carriage return）</td>
<td>将光标当前位置移到本行的开头</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>\t</th>
<th>水平制表符</th>
<th>将光标当前位置移到下一个Tab位置</th>
</tr>
</thead>
<tbody><tr>
<td>\ v</td>
<td>垂直制表符</td>
<td>将光标当前位置移到下一个垂直制表对齐点</td>
</tr>
<tr>
<td>\ 0,\00或\000其中o代表一个八进制数字</td>
<td>与该八进制码对应的ASCLL字符</td>
<td>与该八进制码对应的字符</td>
</tr>
<tr>
<td>\xh[h…]其中h代表一个十六进制数字</td>
<td>与该十六进制码对应的ASCLL字符</td>
<td>与该十六进制码对应的字符</td>
</tr>
</tbody></table>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="变量名的命名规则"><a href="#变量名的命名规则" class="headerlink" title="变量名的命名规则"></a>变量名的命名规则</h3><hr>
<p><strong>变量的名字就是标识符</strong></p>
<ul>
<li>标识符只能由英文字母，数字和下划线_组成</li>
<li>标识符必须以字母或下划线开头</li>
<li>不允许使用C关键字作为标识符命名</li>
<li>标识符可以包含任意多个字符，但一般会有最大限制</li>
</ul>
<p><em><strong>标识符是区分大小写的即大小写敏感的</strong></em></p>
<ol>
<li>标准C规定所有的变量必须在第一条执行语句之前定义</li>
<li>在为变量赋值时，等号两边的空格不是必须的，增加程序的可读性</li>
<li>C语言允许在定义变量时对变量进行初始化（为其赋值）</li>
</ol>
<h3 id="整型变量的符号属性"><a href="#整型变量的符号属性" class="headerlink" title="整型变量的符号属性"></a>整型变量的符号属性</h3><table>
<thead>
<tr>
<th>类型</th>
<th>字节数</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td>int</td>
<td>4</td>
<td>-2 147 483 648~2 147 483 647</td>
</tr>
<tr>
<td>unsigned int</td>
<td>4</td>
<td>0 ~ 4 294 967 295</td>
</tr>
<tr>
<td>short</td>
<td>2</td>
<td>-32 768 ~ 32 767</td>
</tr>
<tr>
<td>unsigned short</td>
<td>2</td>
<td>0 ~ 65 535</td>
</tr>
<tr>
<td>long</td>
<td>4</td>
<td>-2 147 483 648 ~ 2 147 483 647</td>
</tr>
<tr>
<td>unsigned long</td>
<td>4</td>
<td>0 ~ 4 294 967 295</td>
</tr>
<tr>
<td>long long</td>
<td>8</td>
<td>-9 223 372 036 854 775 808 ~ 9 223 372 036 854 775 807</td>
</tr>
<tr>
<td>unsigned long long</td>
<td>8</td>
<td>0 ~ 18 446 744 073 709 551 615</td>
</tr>
</tbody></table>
<h3 id="字符变量"><a href="#字符变量" class="headerlink" title="字符变量"></a>字符变量</h3><table>
<thead>
<tr>
<th>类型</th>
<th>字节数</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td>signed char</td>
<td>1</td>
<td>-128~127</td>
</tr>
<tr>
<td>unsigned char</td>
<td>1</td>
<td>0~255</td>
</tr>
</tbody></table>
<h3 id="实型变量"><a href="#实型变量" class="headerlink" title="实型变量"></a>实型变量</h3><table>
<thead>
<tr>
<th>类型</th>
<th>字节数</th>
<th>有效数字</th>
<th>数值范围（绝对值）</th>
</tr>
</thead>
<tbody><tr>
<td>float</td>
<td>4</td>
<td>6</td>
<td>0以及1.2*10^-38 ~ 3.4 *  10^38</td>
</tr>
<tr>
<td>double</td>
<td>8</td>
<td>15</td>
<td>0以及2.3*10^-308 ~ 1.7 * 10^308</td>
</tr>
<tr>
<td>long double</td>
<td>8</td>
<td>15</td>
<td>0以及2.3*10^-308 ~ 1.7 * 10^308</td>
</tr>
<tr>
<td>long double</td>
<td>16</td>
<td>19</td>
<td>0以及3.4 * 10^-4932 ~ 1.1 * 10^4982</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><h2 id="二进制文件和文本文件"><a href="#二进制文件和文本文件" class="headerlink" title="二进制文件和文本文件"></a>二进制文件和文本文件</h2><p><strong>文件</strong>：是由文件名来识别，因此只要声明了文件名，就可以读出或写入数据。只要文件名不同，就不会发生冲突。</p>
<p>C语言提供了两种文件类型：文本文件和二进制文件</p>
<h3 id="文本文件"><a href="#文本文件" class="headerlink" title="文本文件"></a>文本文件</h3><p>文本文件又名（ASCLL码文件）</p>
<p><strong>特点</strong>：文本文件中的每一位数字都单独占用一个字节的存储空间。</p>
<p><strong>优点</strong>：文本文件可以很方便地被其他程序读取，包括文本编译器、Office办公软件等，且其输出与字符一一对应，一个字节代表一个字符，便于对字符进行逐个处理，便于输入字符，但一般占据的空间比较大，且需环肥ASCLL码与字符键的转换时间。</p>
<h3 id="二进制文件"><a href="#二进制文件" class="headerlink" title="二进制文件"></a>二进制文件</h3><p><strong>特点</strong>：把整个数字作为一个二进制数来储存，并非数值的每一位数字都占用单独的储存空间</p>
<p><strong>优点</strong>：以二进制文本输出数据，可以节省额外的空间和转换时间，但因为一个字节并非对应一个字符，不能直接输出其对应的字符形式</p>
<h3 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h3><p><strong>定义</strong>：无论一个C语言文件内容是什么，它一律把数据看成是由字节构成的序列，即字节流。</p>
<p>因此C语言文件又被称为<strong>流式文件</strong>。</p>
<h2 id="两种文件储存系统"><a href="#两种文件储存系统" class="headerlink" title="两种文件储存系统"></a>两种文件储存系统</h2><p>C语言有<strong>缓冲型</strong>和<strong>非缓冲型</strong>两种文件系统</p>
<h3 id="第一种，缓冲型"><a href="#第一种，缓冲型" class="headerlink" title="第一种，缓冲型"></a>第一种，缓冲型</h3><p>缓冲型文件缓冲系统是指系统自动在内存中为每一个正在使用的文件开辟一个缓冲区，作为程序与文件之间数据交换的中间媒介。也就是在读写文件时，数据先送到缓冲区，再传递给C语言程序或外存上。缓冲文件系统利用文件指针标识文件。</p>
<p><strong>缓冲型文件系统痛的文件操作</strong>，也称为高级文件操作，高级文件操作函数是ANSIC定义的可移植的文件操作函数，具有跨平台和可移植的能力，可解决大多数文件操作问题。</p>
<h3 id="第二种，非缓冲型"><a href="#第二种，非缓冲型" class="headerlink" title="第二种，非缓冲型"></a>第二种，非缓冲型</h3><p>非缓冲文件系统是不会自动设置文件缓冲区的，缓冲区必须由程序员自己设定。非缓冲文件系统没有文件指针，它使用称为文件号的整数来标识文件</p>
<h2 id="文件的打开与关闭"><a href="#文件的打开与关闭" class="headerlink" title="文件的打开与关闭"></a>文件的打开与关闭</h2><p>在使用文件之前必须先打开文件。函数fopen()用来打开文件：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">FILE *fopen(<span class="keyword">const</span> <span class="keyword">char</span> *filename, <span class="keyword">const</span> <span class="keyword">char</span> *mode)</span><br></pre></td></tr></table></figure>

<p><strong>返回值类型</strong>：fopen()的返回值是一个<strong>文件指针</strong></p>
<p><strong>FILE</strong>是stdio.h中定义的<strong>结构体类型</strong>，封装了与文件有关的信息，如文件句柄、位置指针及缓冲区等。缓冲文件系统的每个被使用的文件在内存中开辟一个缓冲区，用来存放文件有关的信息，这些现在被保存在一个<strong>FILE</strong>结构类型的变量中。</p>
<p><strong>fopen()的两个形参</strong>：第一个形参<strong>filename</strong>表示文件名，可包含<strong>路径</strong>和<strong>文件名</strong>两部分。第二个形参<strong>mode</strong>表示文件的打开方式，其取值如下表：</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>“r”</td>
<td>以只读的方式，打开文本文件。以“r”方式打开的文件，只能读出，而不能向该文件写入数据。该文件必须是已经存在的，若文件不存在，则会出错</td>
</tr>
<tr>
<td>“w”</td>
<td>以只写方式，创建并打开文本文件，已存在的文件将被覆盖。以“w”方式打开文件时，无论文件是否存在，都需创建一个新的文件，只能写入数据</td>
</tr>
<tr>
<td>“a”</td>
<td>以只写方式，打开文本文件，位置指针移到文件末尾，向文件尾部添加数据，原文件数据保留。若文件不存在，则会出错</td>
</tr>
<tr>
<td>“+”</td>
<td>与上面的字符串组合，表示以读写方式打开文本文件。即可向文件中写入数据，也可从文件中读出数据</td>
</tr>
<tr>
<td>“b”</td>
<td>与上面的字符串组合，表示打开二进制文件</td>
</tr>
</tbody></table>
<p>以向在D盘中的demo.text读写为例</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">fp = fopen(<span class="string">&quot;D:\\demo.text&quot;</span>,<span class="string">&quot;a+&quot;</span>);<span class="comment">//已读写方式打开demo</span></span><br><span class="line">fp = fopen(<span class="string">&quot;D:\\demo.bin&quot;</span>,<span class="string">&quot;ab+&quot;</span>);<span class="comment">//以二进制方式打开demo.bin</span></span><br></pre></td></tr></table></figure>

<p><strong>文件指针fp是指向FILE结构类型的指针变量定义如下</strong>：</p>
<p>FILE *fp；</p>
<p>因为操作系统对于同时打开的文件数目是有限制的，所以在文件使用结束后必须关键文件，否则会出现意想不到的错误。在C语言中，函数fclose（）用来关闭一个由函数fopen（）打开的文件</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fclose</span><span class="params">(FILE *fp)</span></span>;</span><br></pre></td></tr></table></figure>

<p>函数fclose（）返回一个整型数。当文件关闭成功时，返回0值，否则返回一个非0值。</p>
<p>因此可以根据函数的返回值判断文件是否关闭成功。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6%E6%8B%93%E5%B1%95/</url>
    <content><![CDATA[<h1 id="文件内容拓展"><a href="#文件内容拓展" class="headerlink" title="文件内容拓展"></a>文件内容拓展</h1><h2 id="文件的随机读写"><a href="#文件的随机读写" class="headerlink" title="文件的随机读写"></a>文件的随机读写</h2><p><strong>顺序文件处理</strong>：在顺序文件处理过程中，数据项是一个接着一个进行读取或者读写。</p>
<p><strong>随机访问</strong>：允许在文件中随机定位，并在文件的任何位置直接读写数据</p>
<p><strong>方法</strong>：为了实现文件的定位，在每一次打开的文件中，都有一个<strong>文件位置指针</strong>也称<strong>文件位置标记</strong>，用来指向当前读写文件的位置，它保存了文件中的位置信息。</p>
<p>eg 这里给出两个函数来定义的文件位置指针。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fseek</span><span class="params">(FILE *fp, <span class="keyword">long</span> offset, <span class="keyword">int</span> fromwhere)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rewind</span><span class="params">(FILE *fp)</span></span>;</span><br></pre></td></tr></table></figure>

<h3 id="fseek-函数"><a href="#fseek-函数" class="headerlink" title="fseek()函数"></a>fseek()函数</h3><p><strong>功能</strong>：函数fseek（）的功能是将fp的文件位置指针从fromwhere开始移到offset个字节，指示下一个要读取数据的位置</p>
<p><strong>参数的意义</strong>：<strong>offset</strong>是一个偏移量，它告诉文件位置指针要跳多少个字节。offect为正时，向后移动，为负时，向前移动。AXSI C要求位移量<strong>offset</strong>是长整型数据（常量后加L）。<strong>fromwhere</strong>用于确定偏移量计算的起始位置，它的情况可能有三种：</p>
<ul>
<li>SEEK_SET或0，表示文件开始处</li>
<li>SEEK_CUR或1，代表文件当前的位置</li>
<li>SEEK_END或2，代表文件结尾处</li>
</ul>
<h3 id="rewind（）函数"><a href="#rewind（）函数" class="headerlink" title="rewind（）函数"></a>rewind（）函数</h3><p><strong>功能</strong>：将文件位置指针指向文件首字节，即重置位置指针到文件首部</p>
<p><strong>如果函数fseek（）调用成功，则返回0值，否则返回非0值</strong></p>
<h3 id="ftell（）函数"><a href="#ftell（）函数" class="headerlink" title="ftell（）函数"></a>ftell（）函数</h3><p><strong>功能</strong>：用于读取当前文件位置指针的函数，用于相对于文件起始位置的字节偏移量来表示返回的当前文件位置指针</p>
<p><strong>原型</strong>：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">ftell</span><span class="params">(FILE *fp)</span></span>;</span><br></pre></td></tr></table></figure>

<h3 id="fflush（）函数"><a href="#fflush（）函数" class="headerlink" title="fflush（）函数"></a>fflush（）函数</h3><p><strong>功能</strong>：fflush（）函数的功能是无条件地把缓冲区中的所有数据写入物理设备</p>
<p><strong>通过下列的这个程序实例，可以实现对文件中的数据的搜索</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">&#125;DATE;</span><br><span class="line"><span class="keyword">typedef</span>  <span class="class"><span class="keyword">struct</span>  <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">long</span> studentID;</span><br><span class="line">    <span class="keyword">char</span> studentName[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> studentSex;</span><br><span class="line">    DATE birthday;</span><br><span class="line">    <span class="keyword">int</span> score[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">float</span> aver;</span><br><span class="line">&#125;STUDENT;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SearchinFile</span><span class="params">(<span class="keyword">char</span> fileName[],<span class="keyword">long</span> k)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> k;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Input the searching record number:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>,&amp;k);</span><br><span class="line">    SearchinFile(<span class="string">&quot;D:\\student.txt&quot;</span>,k);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SearchinFile</span><span class="params">(<span class="keyword">char</span> fileName[],<span class="keyword">long</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">int</span> j;</span><br><span class="line">    STUDENT stu;</span><br><span class="line">    <span class="keyword">if</span>((fp = fopen(fileName,<span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Faliure to open %s!\n&quot;</span>,fileName);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fseek(fp,(k<span class="number">-1</span>)* <span class="keyword">sizeof</span> (STUDENT), SEEK_SET);</span><br><span class="line">    fread(&amp;stu, <span class="keyword">sizeof</span>(STUDENT),<span class="number">1</span>,fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%10ld%8s%3c%6d/%02d/%02d&quot;</span>,stu.studentID,stu.studentName,stu.studentSex,</span><br><span class="line">           stu.birthday.year,stu.birthday.month,stu.birthday.day);</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>,stu.score[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%6.1f\n&quot;</span>,stu.aver);</span><br><span class="line">    fclose(fp);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E5%85%AC%E7%94%A8%E4%BD%93/</url>
    <content><![CDATA[<h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><p>结构体和共用体就是C语言提供的用于处理复杂数据类型的方式<strong>允许用户自定义数据类型</strong>在C语言中为<strong>构造数据类型</strong>（也称<strong>复合数据类型</strong>）</p>
<p>它允许用户根据自己的需要利用已有的基本数据类型在制造出自己所需的数据类型。用于表示链表，树，堆栈等复杂的数据对象。</p>
<h2 id="结构体的定义"><a href="#结构体的定义" class="headerlink" title="结构体的定义"></a>结构体的定义</h2><p><strong>数组</strong>：是由同类型的数据构成的一种数据结构，适合于对具有相同属性的数据进行批处理</p>
<p><strong>结构体</strong>：是将不同类型的数据成员组织到统一的名字之下，适合于对关系密切、逻辑相关、具有相同或者不同属性的数据进行处理</p>
<p><strong>共用体</strong>：虽然也能表示逻辑相关的不同类型的数据集合，但其数据成员是情形互斥的，每一刻只有一个数据成员起作用</p>
<h3 id="结构体变量的定义"><a href="#结构体变量的定义" class="headerlink" title="结构体变量的定义"></a>结构体变量的定义</h3><p><strong>结构体模板</strong>的标准格式：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构体名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    数据类型 成员<span class="number">1</span>的名字；</span><br><span class="line">    数据类型 成员<span class="number">2</span>的名字；</span><br><span class="line">    数据类型 成员<span class="number">3</span>的名字；</span><br><span class="line">    ……</span><br><span class="line">    数据类型 成员n的名字；</span><br><span class="line">    </span><br><span class="line">&#125;；<span class="comment">/*注意，这里的分号不能忘了写*/</span></span><br></pre></td></tr></table></figure>

<p><strong>结构体标签</strong>：结构体的名字，作为用户自定义的结构体类型的标志，用于与其他结构体类型相区别。</p>
<p>结构体的各种信息是在{}中声明的</p>
<p><strong>结构体成员</strong>：构成结构体的变量，每个结构体成员都有一个名字和相应的数据类型，其命名必须遵循变量的命名规则</p>
<p><strong>注意，结构体模板只是声明了一种数据类型，定义了数据的组织形式，并未声明结构体类型的变量</strong></p>
<hr>
<p>C语言允许一下两种方法定义结构体变量：</p>
<p>第一种：先声明结构体模板，再定义结构体变量</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构体名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    数据类型 成员<span class="number">1</span>的名字；</span><br><span class="line">    数据类型 成员<span class="number">2</span>的名字；</span><br><span class="line">    数据类型 成员<span class="number">3</span>的名字；</span><br><span class="line">    ……</span><br><span class="line">    数据类型 成员n的名字；</span><br><span class="line">    </span><br><span class="line">&#125;；</span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu1</span>；</span></span><br><span class="line"><span class="class"></span></span><br></pre></td></tr></table></figure>

<p>第二种：在声明结构体模板的同时定义结构体变量</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构体名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    数据类型 成员<span class="number">1</span>的名字；</span><br><span class="line">    数据类型 成员<span class="number">2</span>的名字；</span><br><span class="line">    数据类型 成员<span class="number">3</span>的名字；</span><br><span class="line">    ……</span><br><span class="line">    数据类型 成员n的名字；</span><br><span class="line">    </span><br><span class="line">&#125;stu1；</span><br></pre></td></tr></table></figure>

<h3 id="用typedef（关键字）定义数据类型"><a href="#用typedef（关键字）定义数据类型" class="headerlink" title="用typedef（关键字）定义数据类型"></a>用typedef（关键字）定义数据类型</h3><p>  关键字typedef用于为系统固有的或程序员自定义的数据类型定义一个别名。</p>
<p><strong>通常数据类型的别名都是全英文大写的</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> INTEGER; <span class="comment">/*将int重新命名为INTEGER*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">STUDENT</span>;</span><span class="comment">/*将自己制造的student类型重命名为STUDENT*/</span></span><br><span class="line"><span class="keyword">or</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    数据类型 成员<span class="number">1</span>的名字；</span><br><span class="line">    数据类型 成员<span class="number">2</span>的名字；</span><br><span class="line">    数据类型 成员<span class="number">3</span>的名字；</span><br><span class="line">    ……</span><br><span class="line">    数据类型 成员n的名字；</span><br><span class="line">    </span><br><span class="line">&#125;STUDENT；</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<p>上述的定义STUDENT的两个代码是等价的；</p>
<p><strong>typedef只是为一种已存在的类型定义一个名字而已，并未定义一种新的数据类型</strong></p>
<h3 id="嵌套的结构体"><a href="#嵌套的结构体" class="headerlink" title="嵌套的结构体"></a>嵌套的结构体</h3><p><strong>嵌套的结构体</strong>就是在一个结构体内包含了另一个结构体作为其成员</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">&#125;DATE;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[];</span><br><span class="line">    <span class="keyword">int</span> ID;</span><br><span class="line">    DATE birthday;</span><br><span class="line">&#125;STUDENT</span><br></pre></td></tr></table></figure>

<h3 id="结构体变量的引用"><a href="#结构体变量的引用" class="headerlink" title="结构体变量的引用"></a>结构体变量的引用</h3><hr>
<p>C语言规定，不能将一个结构体变量作为一个整体进行输入，输出操作，只能对每个具体的成员进行输入，输出操作</p>
<hr>
<p><strong>访问格式</strong>： 结构体变量名 . 成员名</p>
<p>当引用嵌套体时，必须一级一级地通过访问格式找到最底层的成员后再引用</p>
<p>eg：stu1.birthday.day</p>
<hr>
<p>C语言允许对具有相同结构体类型的变量进行整体赋值。</p>
<p>stu1 = stu2；</p>
<p>这样是非法的；</p>
<p><em><strong>并非所有的结构体成员都可以使用赋值运算符来赋值，对字符数组类型成员进行赋值时，必须使用字符串处理函数strcpy（）</strong></em></p>
<p>结构体变量也和基本的变量一样有作用域，在函数外定义的结构体变量是全局声明，在函数内部定义的结构体变量是局部声明</p>
<p><strong>结构体变量的地址是结构体变量所占内存空间的首地址，而结构体成员的地址值与结构体成员在结构体中所处的位置及其该成员所占内存的字节数有关</strong></p>
<h3 id="结构体所占内存的字节数"><a href="#结构体所占内存的字节数" class="headerlink" title="结构体所占内存的字节数"></a>结构体所占内存的字节数</h3><p>有四字节对齐原则</p>
<h2 id="结构体数组的定义和初始化"><a href="#结构体数组的定义和初始化" class="headerlink" title="结构体数组的定义和初始化"></a>结构体数组的定义和初始化</h2><h3 id="结构体数组的定义"><a href="#结构体数组的定义" class="headerlink" title="结构体数组的定义"></a>结构体数组的定义</h3><p>与基本的数据类型相同，结构体也是有其对应的数组的，是代表有与结构体中每个元素相同的一系类结构体的集合</p>
<h3 id="结构体数组的初始化"><a href="#结构体数组的初始化" class="headerlink" title="结构体数组的初始化"></a>结构体数组的初始化</h3><p>可以在定义结构体数组时就对其进行初始化，和字符数组一样</p>
<p>也可以通过scanf（）函数进行初始化，不过要注意每个结构体元素对应的数据类型</p>
<h3 id="指向结构体的指针"><a href="#指向结构体的指针" class="headerlink" title="指向结构体的指针"></a>指向结构体的指针</h3><p>结构一也是有指针的，定义结构体指针的方法如下：</p>
<p>第一种：STUDENT *pt = stu；</p>
<p>第二种：STUDENT *pt = &amp;stu[0]；</p>
<p>第三种：STUDENT *pt；</p>
<p>​            pt = stu；</p>
<p>以上三种定义的方法都是等价的</p>
<h2 id="向函数传递结构体"><a href="#向函数传递结构体" class="headerlink" title="向函数传递结构体"></a>向函数传递结构体</h2><p>第一种：用结构体的单个成员作为函数参数，向函数传递结构体的单个成员</p>
<p>第二种：用结构体变量作为函数参数，向函数传递结构体的完整结构</p>
<p>第三种：通过结构体指针或结构体数组作为函数参数，向函数传递结构体的地址</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<p>0</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/C%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="运算符和表达式"><a href="#运算符和表达式" class="headerlink" title="运算符和表达式"></a>运算符和表达式</h1><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul>
<li>一个操作数的运算符是一元运算符</li>
<li>两个操作数的运算符是二元运算符</li>
<li>三个操作数的运算符是三元运算符</li>
</ul>
<p><em><strong>条件运算符是C语言唯一的一个三元运算符，除此之外都是二元运算符</strong></em></p>
<h3 id="C运算符"><a href="#C运算符" class="headerlink" title="C运算符"></a>C运算符</h3><p>C语言提供一下运算符：</p>
<ol>
<li><p>算数运算符                             （+ - * / % ++ –）</p>
</li>
<li><p>关系运算符                             （&gt; &lt; == &gt;= &lt;= !=）</p>
</li>
<li><p>逻辑运算符                              （！ &amp;&amp; ||）</p>
</li>
<li><p>位运算符                                  （&lt;&lt; &gt;&gt; ~ | ^ &amp;）</p>
<hr>
</li>
<li><p>赋值运算符                               （= 及其扩展形式）</p>
</li>
<li><p>条件运算符                                （？：）</p>
</li>
<li><p>逗号运算符                                 （，）</p>
</li>
<li><p>指针运算符                                  （*和&amp;）</p>
</li>
<li><p>求字节数运算符                           （sizeof）</p>
</li>
<li><p>强制类型转换运算符                   （（类型））</p>
</li>
<li><p>成员运算符                                   （.-&gt;）</p>
</li>
<li><p>下标运算符                                   （[]）</p>
</li>
<li><p>其他                                                （如函数调用运算符（））</p>
</li>
</ol>
<h3 id="基本的算数运算符"><a href="#基本的算数运算符" class="headerlink" title="基本的算数运算符"></a>基本的算数运算符</h3><p>最常用的算术运算符</p>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">含义</th>
<th align="center">举例</th>
<th align="center">结果</th>
</tr>
</thead>
<tbody><tr>
<td align="center">+</td>
<td align="center">正号运算符（单目运算符）</td>
<td align="center">+a</td>
<td align="center">a的值</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">负号运算符（单目运算符）</td>
<td align="center">-a</td>
<td align="center">a的算数负数</td>
</tr>
<tr>
<td align="center">*</td>
<td align="center">乘法运算符</td>
<td align="center">a * b</td>
<td align="center">a和b的乘积</td>
</tr>
<tr>
<td align="center">/</td>
<td align="center">除法运算符</td>
<td align="center">a / b</td>
<td align="center">a除以b的商</td>
</tr>
<tr>
<td align="center">%</td>
<td align="center">求余运算符</td>
<td align="center">a % b</td>
<td align="center">a除以b的余数</td>
</tr>
<tr>
<td align="center">+</td>
<td align="center">加法运算符</td>
<td align="center">a + b</td>
<td align="center">a和b的和</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">减法运算法</td>
<td align="center">a - b</td>
<td align="center">a和b的差</td>
</tr>
</tbody></table>
<p><strong>说明：</strong></p>
<ul>
<li>由于键盘无×号，运算符×以*代替</li>
<li>由于键盘无÷号，运算符÷以/代替。两个实数相除的结果是双精度实数，两个整数相除的结果为整数。但是，如果除数或被除数中有一个负数，则舍入的方向是不固定的。</li>
<li>%运算符要求参加运算的运算对象（即操作数）为整数，结果也是整数</li>
<li>除%以外的运算符的操作数都可以是任何算术类型</li>
</ul>
<h3 id="自增（-），自减（–）运算符"><a href="#自增（-），自减（–）运算符" class="headerlink" title="自增（++），自减（–）运算符"></a>自增（++），自减（–）运算符</h3><p>自增，自减运算符的作用是使变量的值加1或减1，例如：</p>
<p>++i，–i  （在使用i之前，先使i的值加（减）1）</p>
<p>i++，i–  （在使用i之后，使i的值加（减）1）</p>
<h3 id="算术表达式和运算符的优先级与结合性"><a href="#算术表达式和运算符的优先级与结合性" class="headerlink" title="算术表达式和运算符的优先级与结合性"></a>算术表达式和运算符的优先级与结合性</h3><p>用算术运算符和括号将运算对象（也称操作数）连接起来的、符合C语法规则的式子成为<strong>C算术表达式</strong></p>
<p><em><strong>C语言规定了运算数的优先级，还规定了运算符的结合性</strong></em></p>
<hr>
<p>算术运算符——&gt;自左至右</p>
<p>赋值运算——&gt;自右向左</p>
<h3 id="不同类型数据间的混合运算"><a href="#不同类型数据间的混合运算" class="headerlink" title="不同类型数据间的混合运算"></a>不同类型数据间的混合运算</h3><p><em><strong>如果一个运算符两侧的数据类型不同，则先自动进行类型转换，是两者成为同一类型，然后进行运算。</strong></em></p>
<hr>
<p>低——————————————————————————————&gt;高</p>
<p>int（char，short)–&gt;unsigned int–&gt;long–&gt;unsigned long–&gt;double(float)–&gt;long double</p>
<hr>
<p>按照从高到低的顺序给各种数据类型分等级，依次为：long double, double, float, unsigned long long, long long, unsigned long, long, unsigned int 和 int。这里有一个小小的例外，如果 long 和 int 大小相同，则 unsigned int 的等级应位于 long 之上。char 和 short 并没有出现于这个等级列表，是因为它们应该已经被升级成了 int 或者 unsigned int。  </p>
<hr>
<p>当是从低级转换为高级时，是自动转换</p>
<p>从高级转换为低级时，需要进行强制转换</p>
<hr>
<h4 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h4><p>类型：</p>
<p>（类型名）（表达式）</p>
]]></content>
  </entry>
  <entry>
    <title>计算器原始代码（面向过程）</title>
    <url>/2021/12/16/GUI/</url>
    <content><![CDATA[<p><strong>计算器原始代码（面向过程）</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.dwx.Prame;</span><br><span class="line"></span><br><span class="line">import java.awt.*;</span><br><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line">import java.awt.event.WindowAdapter;</span><br><span class="line">import java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line">public class testCale &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        new Cale();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Cale extends Frame&#123;</span><br><span class="line">    public Cale()&#123;</span><br><span class="line">        //在窗口上 我们需要三个文本框 一个标签 一个按钮</span><br><span class="line">        TextField num1 = new TextField(10);</span><br><span class="line">        TextField num2 = new TextField(10);</span><br><span class="line">        TextField num3 = new TextField(11);</span><br><span class="line"></span><br><span class="line">        Label label = new Label(&quot;+&quot;);</span><br><span class="line"></span><br><span class="line">        Button button = new Button(&quot;=&quot;);</span><br><span class="line">        button.addActionListener(new MyCale(num1,num2,num3)); //将三个文本框作为参数传递给下边的方法</span><br><span class="line">        //流式布局</span><br><span class="line">        setLayout(new FlowLayout());</span><br><span class="line">        add(num1);</span><br><span class="line">        add(label);</span><br><span class="line">        add(num2);</span><br><span class="line">        add(button);</span><br><span class="line">        add(num3);</span><br><span class="line">        pack();</span><br><span class="line">        setVisible(true);</span><br><span class="line">        addWindowListener(new WindowAdapter() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void windowClosing(WindowEvent e) &#123;</span><br><span class="line">                super.windowClosing(e);</span><br><span class="line">                System.exit(0);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">class MyCale implements ActionListener&#123;</span><br><span class="line"></span><br><span class="line">    //获取三个变量</span><br><span class="line">    //将第三个变量的值设为前两个变量的和</span><br><span class="line">    //将前两个变量清空</span><br><span class="line">    private TextField num1,num2,num3; //设置三个本地的参数来承接传递过来的参数</span><br><span class="line">    public  MyCale(TextField num1,TextField num2,TextField num3)&#123;</span><br><span class="line">            this.num1 = num1;</span><br><span class="line">            this.num2 = num2;</span><br><span class="line">            this.num3 = num3;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">        int n1 = Integer.parseInt(num1.getText());//将字符串类型强制转换成int类型的方法</span><br><span class="line">        int n2 = Integer.parseInt(num2.getText());</span><br><span class="line"></span><br><span class="line">        num3.setText(&quot;&quot;+(n1+n2));</span><br><span class="line"></span><br><span class="line">        num1.setText(&quot;&quot;);</span><br><span class="line">        num2.setText(&quot;&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>C语言排序法</title>
    <url>/2021/12/22/C%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="排序法"><a href="#排序法" class="headerlink" title="排序法"></a>排序法</h2><p><strong>这篇博客介绍了多个基本的排序法</strong></p>
<p><strong>也是我常用的 最能理解的排序法</strong></p>
<h2 id="排序的基本概念"><a href="#排序的基本概念" class="headerlink" title="排序的基本概念"></a>排序的基本概念</h2><p>**排序:**是按照关键字的非递减或非递增顺序对一组记录重新进行排序的操作</p>
<p>**排序的稳定性:**假设K1=Kj，且在排序前的序列中Ri领先于Rj(即i&lt;j)。若Ri仍领先于Rj。则这个排序法是稳定的。</p>
<h3 id="内部排序和外部排序"><a href="#内部排序和外部排序" class="headerlink" title="内部排序和外部排序"></a>内部排序和外部排序</h3><p><strong>内部排序：</strong>待排序的记录都在计算机的内存中</p>
<p><strong>外部排序：</strong>待排序的数据量很大，将外部数据分块放入内存中，进行排序。</p>
<h3 id="内部排序方法的分类"><a href="#内部排序方法的分类" class="headerlink" title="内部排序方法的分类"></a>内部排序方法的分类</h3><ul>
<li>插入类：插入排序，折半插入排序，希尔排序</li>
<li>交换类：冒泡排序，快速排序</li>
<li>选择类：简单选择排序，树形选择排序，堆排序</li>
<li>归并类：2-路并排序</li>
<li>分配类：唯一一个不需要进行关键字比较的排序方法。</li>
</ul>
<h3 id="几个排序法的作用总览"><a href="#几个排序法的作用总览" class="headerlink" title="几个排序法的作用总览"></a>几个排序法的作用总览</h3><p><strong>这是一个完整的C语言程序 经测是能够运行的</strong></p>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/543f22ae7dd48a8d.png" alt="实现"> </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 200000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> r[MAXSIZE+<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">int</span> length;</span><br><span class="line">&#125; SqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//顺序表的初始化</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">(SqList &amp;S)</span></span>;</span><br><span class="line"><span class="comment">//插入排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(SqList &amp;S)</span></span>;</span><br><span class="line"><span class="comment">//折半插入排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BInsertSort</span><span class="params">(SqList &amp;S)</span></span>;</span><br><span class="line"><span class="comment">//希尔排序 希尔排序要分为两部分进行</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellInsert</span><span class="params">(SqList &amp;S, <span class="keyword">int</span> dk)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellSort</span><span class="params">(SqList &amp;S)</span></span>;</span><br><span class="line"><span class="comment">//上述的排序都是插入排序</span></span><br><span class="line"><span class="comment">//还有一个大类的排序就是接下来要设计到的 交换排序</span></span><br><span class="line"><span class="comment">//交换排序中的老大哥 冒泡排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(SqList &amp;S)</span></span>;</span><br><span class="line"><span class="comment">//快速排序 我写的快速排序或许会与书上的不同</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FastSort</span><span class="params">(SqList &amp;S,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>;</span><br><span class="line"><span class="comment">//选择排序 选择排序才是我经常使用的排序法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectSort</span><span class="params">(SqList &amp;S)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">(SqList &amp;S)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Order</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	SqList S;</span><br><span class="line">	<span class="keyword">int</span> order;</span><br><span class="line">	Order();</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;order);</span><br><span class="line">	<span class="keyword">while</span>(order!=<span class="number">10</span>) &#123;</span><br><span class="line">		<span class="keyword">switch</span> (order) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				init(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				Print(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">				InsertSort(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">				BInsertSort(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">				ShellSort(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">				BubbleSort(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">				FastSort(S,<span class="number">1</span>,S.length);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">				SelectSort(S);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">default</span>:</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;请输入正确的序号!!!\n&quot;</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入你要执行的程序的序号:&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;order);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">(SqList &amp;S)</span> </span>&#123;</span><br><span class="line">	srand(time(<span class="literal">NULL</span>));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入你要创建的顺序表的长度:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;S.length);</span><br><span class="line">	<span class="keyword">int</span> i,j;</span><br><span class="line">	<span class="comment">//初始化顺序表是从1开始的，这样就可以使r[0]作为哨兵</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=S.length; i++) &#123;</span><br><span class="line">		S.r[i] = rand()%<span class="number">1000</span> + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(SqList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//对于插入排序是在排序好的顺序表中插入元素</span></span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> j;</span><br><span class="line">	<span class="comment">//这里的i=2是因为，对于第一个数据，是已经排好序的了的，只有一个数据的顺序串是一定是有序的</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;=S.length; i++) &#123;</span><br><span class="line">		<span class="comment">//如果要执行的那个数据小于他之前的数据，就需要对前边进行查找，找到合适的位置，把数据插入</span></span><br><span class="line">		<span class="keyword">if</span>(S.r[i]&lt;S.r[i<span class="number">-1</span>]) &#123;</span><br><span class="line">			<span class="comment">//使用哨兵 来存储要实行的数据</span></span><br><span class="line">			S.r[<span class="number">0</span>] = S.r[i];</span><br><span class="line">			S.r[i] = S.r[i<span class="number">-1</span>];</span><br><span class="line">			<span class="comment">//进行移动 如果找到 或 到了哨兵节点 就跳出</span></span><br><span class="line">			<span class="keyword">for</span>(j=i<span class="number">-2</span>; S.r[<span class="number">0</span>] &lt; S.r[j]; j--) &#123;</span><br><span class="line">				S.r[j+<span class="number">1</span>]=S.r[j];</span><br><span class="line">			&#125;</span><br><span class="line">			S.r[j+<span class="number">1</span>] = S.r[<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">(SqList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=S.length; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,S.r[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BInsertSort</span><span class="params">(SqList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> low;</span><br><span class="line">	<span class="keyword">int</span> high;</span><br><span class="line">	<span class="keyword">int</span>  mid;</span><br><span class="line">	<span class="keyword">int</span> j;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;=S.length; i++) &#123;</span><br><span class="line">		S.r[<span class="number">0</span>] = S.r[i];</span><br><span class="line">		<span class="comment">//设计两个区间</span></span><br><span class="line">		<span class="comment">//在执行的目标元素之前都是排序好的</span></span><br><span class="line">		low = <span class="number">1</span>;</span><br><span class="line">		high = i<span class="number">-1</span>;</span><br><span class="line">		<span class="comment">//请注意这里是 &lt;= 不是&lt;</span></span><br><span class="line">		<span class="keyword">while</span>(low &lt;= high) &#123;</span><br><span class="line">			mid = (low+high)/<span class="number">2</span>;</span><br><span class="line">			<span class="comment">//如果个mid比较大小 目标元素太大了 就提高low 反正降低high</span></span><br><span class="line">			<span class="keyword">if</span>(S.r[<span class="number">0</span>]&lt;S.r[mid]) &#123;</span><br><span class="line">				high = mid<span class="number">-1</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				low = mid+<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//如果找到了合适的位置 就要用一般方法进行插入</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(j=i<span class="number">-1</span>; j&gt;=high+<span class="number">1</span>; j--) &#123;</span><br><span class="line">			S.r[j+<span class="number">1</span>] = S.r[j];</span><br><span class="line">		&#125;</span><br><span class="line">		S.r[high+<span class="number">1</span>] = S.r[<span class="number">0</span>];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Order</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入你要执行的程序的序号:\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;1.初始化一个链表\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;2.展示链表\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;3.插入排序给链表排序\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;4.折半排序给链表排序\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;5.希尔排序给链表排序\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;6.冒泡排序给链表进行排序\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;7.快速排序给链表进行排序\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;8.简单排序给链表进行排序\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;10.退出程序\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellSort</span><span class="params">(SqList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">	<span class="keyword">int</span> dt[<span class="number">1000</span>];</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入要做几次划分:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">	<span class="comment">//对我们的划分进行初始化 最后一个一定要为1 是非递减的输入的</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;k; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个划分大小&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;dt[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;k; i++) &#123;</span><br><span class="line">		ShellInsert(S,dt[i]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellInsert</span><span class="params">(SqList &amp;S,<span class="keyword">int</span> dk)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//对整个数组机型查分排序</span></span><br><span class="line">	<span class="keyword">int</span> i,j;</span><br><span class="line">	<span class="keyword">for</span>(i=dk+<span class="number">1</span>; i&lt;=S.length; i++) &#123;</span><br><span class="line">		<span class="comment">//如果未知序列第一个元素比已经排好序的序列对应的元素小 就调换他们的位置</span></span><br><span class="line">		<span class="keyword">if</span>(S.r[i]&lt;S.r[i-dk]) &#123;</span><br><span class="line">			S.r[<span class="number">0</span>] = S.r[i];</span><br><span class="line"></span><br><span class="line">			<span class="comment">//因为可能一个划分里有多个元素 因此需要进行循环</span></span><br><span class="line">			<span class="keyword">for</span>(j=i-dk; j&gt;<span class="number">0</span> &amp;&amp; S.r[<span class="number">0</span>]&lt;S.r[j]; j-=dk) &#123;</span><br><span class="line">				S.r[j+dk] = S.r[j];</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//条出循环就说明找到了位置</span></span><br><span class="line">			S.r[j+dk] = S.r[<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(SqList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//冒泡排序就是通过多次的相邻两个元素的比较 交换 实现将最大或最小的元素放到两边</span></span><br><span class="line">	<span class="comment">//不同的是 这个冒泡排序标记一个flag 如果在排序中没有出现交换 那么就证明排序已经玩成了 就不需要在继续执行了</span></span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> m = S.length<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">while</span>((m&gt;<span class="number">0</span>)&amp;&amp;(flag==<span class="number">1</span>)) &#123;</span><br><span class="line">		<span class="comment">//在进行循环之前将flag表为0 检测后续是否有数据变化</span></span><br><span class="line">		flag = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;m; i++) &#123;</span><br><span class="line">			<span class="comment">//我们执行的是从小到大排序</span></span><br><span class="line">			<span class="keyword">if</span>(S.r[i+<span class="number">1</span>]&lt;S.r[i]) &#123;</span><br><span class="line">				<span class="comment">//交换两者位置 并且将flag立为0</span></span><br><span class="line">				S.r[<span class="number">0</span>] = S.r[i+<span class="number">1</span>];</span><br><span class="line">				S.r[i+<span class="number">1</span>] = S.r[i];</span><br><span class="line">				S.r[i] = S.r[<span class="number">0</span>];</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//最大值已经确定 不用再比较</span></span><br><span class="line">			--m;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FastSort</span><span class="params">(SqList &amp;S,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,t,temp;</span><br><span class="line">	<span class="keyword">if</span>(left&gt;right)&#123;</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	temp = S.r[left];</span><br><span class="line">	i = left;</span><br><span class="line">	j = right;</span><br><span class="line">	<span class="keyword">while</span>(i!=j)&#123;</span><br><span class="line">		<span class="keyword">while</span>(S.r[j]&gt;=temp &amp;&amp; i&lt;j)&#123;</span><br><span class="line">			j--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span>(S.r[i]&lt;=temp &amp;&amp; i&lt;j)&#123;</span><br><span class="line">			i++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">			t = S.r[i];</span><br><span class="line">			S.r[i]=S.r[j];</span><br><span class="line">			S.r[j] = t;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	S.r[left] = S.r[i];</span><br><span class="line">	S.r[i] = temp;</span><br><span class="line">	FastSort(S,left,i<span class="number">-1</span>);</span><br><span class="line">	FastSort(S,i+<span class="number">1</span>,right);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectSort</span><span class="params">(SqList &amp;S)</span></span>&#123;</span><br><span class="line">	<span class="comment">//每次挑出一个最小值 放到指定的位置 再进行循环 纸质结束</span></span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> j;</span><br><span class="line">	<span class="keyword">int</span> min;</span><br><span class="line">	<span class="keyword">int</span> temp;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=S.length;i++)&#123;</span><br><span class="line">		min = i;</span><br><span class="line">		<span class="keyword">for</span>(j=i;j&lt;=S.length;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(S.r[j]&lt;S.r[min])&#123;</span><br><span class="line">				<span class="comment">//找到最小的数</span></span><br><span class="line">				min = j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(min != i)&#123;</span><br><span class="line">			temp = S.r[i];</span><br><span class="line">			S.r[i] = S.r[min];</span><br><span class="line">			S.r[min] = temp;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p><strong>基本思想</strong>：每一趟将一个待排序的记录，将其关键字的大小插入到已经拍好序的一组记录的适当位置上，直到所有待排序记录全部插入为止。</p>
<h3 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h3><p><strong>直接插入排序：</strong>是最简单的插入排序，每一次进行排序都是将数据插入到已经排好序的有序表中，从而得到一个新的、记录数量增1的有序表。</p>
<p><strong>代码实现:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(SqList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//对于插入排序是在排序好的顺序表中插入元素</span></span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> j;</span><br><span class="line">	<span class="comment">//这里的i=2是因为，对于第一个数据，是已经排好序的了的，只有一个数据的顺序串是一定是有序的</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;=S.length; i++) &#123;</span><br><span class="line">		<span class="comment">//如果要执行的那个数据小于他之前的数据，就需要对前边进行查找，找到合适的位置，把数据插入</span></span><br><span class="line">		<span class="keyword">if</span>(S.r[i]&lt;S.r[i<span class="number">-1</span>]) &#123;</span><br><span class="line">			<span class="comment">//使用哨兵 来存储要实行的数据</span></span><br><span class="line">			S.r[<span class="number">0</span>] = S.r[i];</span><br><span class="line">			S.r[i] = S.r[i<span class="number">-1</span>];</span><br><span class="line">			<span class="comment">//进行移动 如果找到 或 到了哨兵节点 就跳出</span></span><br><span class="line">			<span class="keyword">for</span>(j=i<span class="number">-2</span>; S.r[<span class="number">0</span>] &lt; S.r[j]; j--) &#123;</span><br><span class="line">				S.r[j+<span class="number">1</span>]=S.r[j];</span><br><span class="line">			&#125;</span><br><span class="line">			S.r[j+<span class="number">1</span>] = S.r[<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>算法特点:</strong></p>
<ol>
<li>稳定排序</li>
<li>算法简便、且容易实现</li>
<li>适合于链式存储和顺序存储结构</li>
<li>更适合于初始记录基本有序的情况，n较大时，算法时间复杂度较高，不宜采用</li>
<li>时间复杂度为O(n^2)</li>
<li>空间复杂度为O(1)</li>
</ol>
<h3 id="折半插入排序"><a href="#折半插入排序" class="headerlink" title="折半插入排序"></a>折半插入排序</h3><p>折半插入排序能够节省插入排序的寻找过程，但是不能改变移动过程</p>
<p><strong>算法实现：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BInsertSort</span><span class="params">(SqList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> low;</span><br><span class="line">	<span class="keyword">int</span> high;</span><br><span class="line">	<span class="keyword">int</span>  mid;</span><br><span class="line">	<span class="keyword">int</span> j;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;=S.length; i++) &#123;</span><br><span class="line">		S.r[<span class="number">0</span>] = S.r[i];</span><br><span class="line">		<span class="comment">//设计两个区间</span></span><br><span class="line">		<span class="comment">//在执行的目标元素之前都是排序好的</span></span><br><span class="line">		low = <span class="number">1</span>;</span><br><span class="line">		high = i<span class="number">-1</span>;</span><br><span class="line">		<span class="comment">//请注意这里是 &lt;= 不是&lt;</span></span><br><span class="line">		<span class="keyword">while</span>(low &lt;= high) &#123;</span><br><span class="line">			mid = (low+high)/<span class="number">2</span>;</span><br><span class="line">			<span class="comment">//如果个mid比较大小 目标元素太大了 就提高low 反正降低high</span></span><br><span class="line">			<span class="keyword">if</span>(S.r[<span class="number">0</span>]&lt;S.r[mid]) &#123;</span><br><span class="line">				high = mid<span class="number">-1</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				low = mid+<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//如果找到了合适的位置 就要用一般方法进行插入</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(j=i<span class="number">-1</span>; j&gt;=high+<span class="number">1</span>; j--) &#123;</span><br><span class="line">			S.r[j+<span class="number">1</span>] = S.r[j];</span><br><span class="line">		&#125;</span><br><span class="line">		S.r[high+<span class="number">1</span>] = S.r[<span class="number">0</span>];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>算法特点：</strong></p>
<ol>
<li>稳定排序</li>
<li>只能用顺序结构，不能用于链式结构</li>
<li>适合初始记录无序，n较大时的情况</li>
<li>时间复杂度为O(n^2)</li>
<li>空间复杂度为O(1)</li>
</ol>
<h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><p><strong>希尔排序：</strong>又称“缩小增量排序”，需要移动的数据量较少。</p>
<p>希尔排序实际上是采用分组插入的方法，将整个待排序的记录分割成几组，对每组进行直接插入排序。在增加每组的数据量，重新分组。</p>
<p>希尔排序的分组，不是简单地“逐段分割”，而是将相隔某个“增量”的记录分成一组</p>
<p><strong>注意：</strong>最后一次分组一定要是“1”</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellSort</span><span class="params">(SqList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">	<span class="keyword">int</span> dt[<span class="number">1000</span>];</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入要做几次划分:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">	<span class="comment">//对我们的划分进行初始化 最后一个一定要为1 是非递减的输入的</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;k; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个划分大小&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;dt[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;k; i++) &#123;</span><br><span class="line">		ShellInsert(S,dt[i]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellInsert</span><span class="params">(SqList &amp;S,<span class="keyword">int</span> dk)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//对整个数组机型查分排序</span></span><br><span class="line">	<span class="keyword">int</span> i,j;</span><br><span class="line">	<span class="keyword">for</span>(i=dk+<span class="number">1</span>; i&lt;=S.length; i++) &#123;</span><br><span class="line">		<span class="comment">//如果未知序列第一个元素比已经排好序的序列对应的元素小 就调换他们的位置</span></span><br><span class="line">		<span class="keyword">if</span>(S.r[i]&lt;S.r[i-dk]) &#123;</span><br><span class="line">			S.r[<span class="number">0</span>] = S.r[i];</span><br><span class="line"></span><br><span class="line">			<span class="comment">//因为可能一个划分里有多个元素 因此需要进行循环</span></span><br><span class="line">			<span class="keyword">for</span>(j=i-dk; j&gt;<span class="number">0</span> &amp;&amp; S.r[<span class="number">0</span>]&lt;S.r[j]; j-=dk) &#123;</span><br><span class="line">				S.r[j+dk] = S.r[j];</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//条出循环就说明找到了位置</span></span><br><span class="line">			S.r[j+dk] = S.r[<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>算法特点：</strong></p>
<ol>
<li>空间复杂度为O(1)</li>
<li>时间复杂度为P241 无法直接判断</li>
<li>算法不稳定</li>
<li>只能用顺序结构，不能用链式结构</li>
<li>最后一个增量只能是1</li>
<li>适合初始数据无序，n较大的情况</li>
</ol>
<h2 id="交换排序"><a href="#交换排序" class="headerlink" title="交换排序"></a>交换排序</h2><p>交换排序的基本思想：两两比较带排序记录的关键字，一旦发现两个数据不和要求，就进行交换</p>
<p>交换排序有：冒泡排序和快速排序</p>
<h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p><strong>冒泡排序：</strong>是一种最简单的交换法，是相邻的数据进行交换。使最大，最小的数据跑到顺序表两端。</p>
<p><strong>代码实现：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(SqList &amp;S)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//冒泡排序就是通过多次的相邻两个元素的比较 交换 实现将最大或最小的元素放到两边</span></span><br><span class="line">	<span class="comment">//不同的是 这个冒泡排序标记一个flag 如果在排序中没有出现交换 那么就证明排序已经玩成了 就不需要在继续执行了</span></span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> m = S.length<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">while</span>((m&gt;<span class="number">0</span>)&amp;&amp;(flag==<span class="number">1</span>)) &#123;</span><br><span class="line">		<span class="comment">//在进行循环之前将flag表为0 检测后续是否有数据变化</span></span><br><span class="line">		flag = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;m; i++) &#123;</span><br><span class="line">			<span class="comment">//我们执行的是从小到大排序</span></span><br><span class="line">			<span class="keyword">if</span>(S.r[i+<span class="number">1</span>]&lt;S.r[i]) &#123;</span><br><span class="line">				<span class="comment">//交换两者位置 并且将flag立为0</span></span><br><span class="line">				S.r[<span class="number">0</span>] = S.r[i+<span class="number">1</span>];</span><br><span class="line">				S.r[i+<span class="number">1</span>] = S.r[i];</span><br><span class="line">				S.r[i] = S.r[<span class="number">0</span>];</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//最大值已经确定 不用再比较</span></span><br><span class="line">			--m;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>算法特点：</strong></p>
<ol>
<li>稳定排序</li>
<li>可用于顺序存储，也可用于链式存储</li>
<li>移动此处较多，n较大时，此算法不是采用</li>
<li>时间复杂度为O(n^2)</li>
<li>空间复杂度为O(1)</li>
</ol>
<h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p><strong>快速排序：</strong>解决了冒泡排序的只能相邻数据进行比较的缺点，能够实现非相邻的数据进行比较。</p>
<p><strong>代码实现：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FastSort</span><span class="params">(SqList &amp;S,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,t,temp;</span><br><span class="line">	<span class="keyword">if</span>(left&gt;right)&#123;</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	temp = S.r[left];</span><br><span class="line">	i = left;</span><br><span class="line">	j = right;</span><br><span class="line">	<span class="keyword">while</span>(i!=j)&#123;</span><br><span class="line">		<span class="keyword">while</span>(S.r[j]&gt;=temp &amp;&amp; i&lt;j)&#123;</span><br><span class="line">			j--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span>(S.r[i]&lt;=temp &amp;&amp; i&lt;j)&#123;</span><br><span class="line">			i++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">			t = S.r[i];</span><br><span class="line">			S.r[i]=S.r[j];</span><br><span class="line">			S.r[j] = t;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	S.r[left] = S.r[i];</span><br><span class="line">	S.r[i] = temp;</span><br><span class="line">	FastSort(S,left,i<span class="number">-1</span>);</span><br><span class="line">	FastSort(S,i+<span class="number">1</span>,right);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>算法特点：</strong></p>
<ol>
<li>算法是一个递归算法</li>
<li>时间复杂度为O(nlog2n)</li>
<li>空间复杂度为o(n)</li>
<li>排序方法是不稳定的</li>
<li>适用于顺序结构，不适合链式存储</li>
<li>适合于初始记录无序，n较大时的情况</li>
</ol>
<h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><h3 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a>简单选择排序</h3><p><strong>简单选择排序：</strong>也称作<strong>直接选择排序</strong></p>
<p>简单选择排序是我经常使用的 两个for循环就能实现</p>
<p><strong>代码实现:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectSort</span><span class="params">(SqList &amp;S)</span></span>&#123;</span><br><span class="line">	<span class="comment">//每次挑出一个最小值 放到指定的位置 再进行循环 纸质结束</span></span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> j;</span><br><span class="line">	<span class="keyword">int</span> min;</span><br><span class="line">	<span class="keyword">int</span> temp;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=S.length;i++)&#123;</span><br><span class="line">		min = i;</span><br><span class="line">		<span class="keyword">for</span>(j=i;j&lt;=S.length;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(S.r[j]&lt;S.r[min])&#123;</span><br><span class="line">				<span class="comment">//找到最小的数</span></span><br><span class="line">				min = j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(min != i)&#123;</span><br><span class="line">			temp = S.r[i];</span><br><span class="line">			S.r[i] = S.r[min];</span><br><span class="line">			S.r[min] = temp;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>算法特点：</strong></p>
<ol>
<li>时间复杂度O(n^2)</li>
<li>空间复杂度O(1)</li>
<li>既可用于顺序存储结构，也可用于链式存储结构</li>
<li>移动记录次数较少，每次机理占用的空间不多时可用，此时比直接插入排序快</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>数组</title>
    <url>/2021/12/16/Java%E6%95%B0%E7%BB%84%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h2 id="数组的基本概念"><a href="#数组的基本概念" class="headerlink" title="数组的基本概念"></a>数组的基本概念</h2><p>  所谓的数组就是若干个相同数据类型的元素按一定的顺序排列的集合。在java语言中，数组元素可以由基本数据类型的量组成，也可以由对象组成。</p>
<h3 id="栈内存和堆内存"><a href="#栈内存和堆内存" class="headerlink" title="栈内存和堆内存"></a>栈内存和堆内存</h3><p> java语言把内存分为两种，栈内存和堆内存。</p>
<ul>
<li><p>堆内存：堆内存用来存放由new运算符创建的数组或对象，在堆中分配的内存，由java的垃圾回收器来自动管理。</p>
</li>
<li><p>栈内存：在堆中创建一个数组或对象后，同时还在栈中定义了一个特殊的变量，在栈中的这个变量的取值等于数组或对象在堆内存中的首地址。</p>
<h3 id="数组的特点"><a href="#数组的特点" class="headerlink" title="数组的特点"></a>数组的特点</h3></li>
<li><p>数组是相同数据类型元素的集合</p>
</li>
<li><p>数组中的各元素是哟先后顺序的，它们在内存中按照这个先后顺序连续存放在一起</p>
</li>
<li><p>数组元素用整个数组的名字和它自己在数字中的顺序位置来表示。</p>
</li>
</ul>
<h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><p>一维数组是最简单的数组，其逻辑结构时线性表。使用一维数组需要经过<strong>定义</strong>、<strong>初始化</strong>、<strong>应用</strong>等过程</p>
<h3 id="一维数组的定义"><a href="#一维数组的定义" class="headerlink" title="一维数组的定义"></a>一维数组的定义</h3><p>java一维数组的定义需要三个步奏：</p>
<ol>
<li>声明数组</li>
<li>分配空间</li>
<li>创建数组元素并赋值</li>
</ol>
<p>格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">数据类型   数组名；</span><br><span class="line">数组名 = <span class="keyword">new</span>数据类型[个数]；</span><br><span class="line"><span class="comment">/*============或者写为==============*/</span></span><br><span class="line">数据类型[] 数组名 = <span class="keyword">new</span> 数据类型[个数]</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>“[]”指明变量是一个数组类型变量，java语言可以将“[]”放在数组名前，也可以像C一样，把“[]”放在数组名后边。但与C语言不同，java在定义数组变量时，不为数组元素分配空间，因此“[]”中不用给出数组长度，但必须在为其分配过内存空间后才能使用</p>
<p><strong>说明</strong>：数组用new运算符分配内存空间的同时，数组的每个元素都会自动赋一个默认的值：整数为0，实数为0.0，字符为‘\0’，boolean型为false，引用型为null。</p>
<h2 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h2><p> java语言中并没有真正的多维数组。所谓的多维数组，就是数组元素也是数组</p>
<h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p>  二维数组的声明方式与一维数组类似，内存的分配也一样是用<strong>new</strong>运算符。声明与分配内存的格式如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">数据类型[][]数组名；</span><br><span class="line">数组名 = <span class="keyword">new</span>数据类型[行数][列数]</span><br><span class="line"><span class="comment">/*==================================================================*/</span>    </span><br><span class="line">数据类型[][]数组名 = <span class="keyword">new</span> 数据类型[列数][行数]</span><br></pre></td></tr></table></figure>

<p><strong>与C语言要求二维数组是一个矩阵不同，java语言的二维数组不一定是规则的矩阵</strong></p>
<h4 id="二维数组的定义"><a href="#二维数组的定义" class="headerlink" title="二维数组的定义"></a>二维数组的定义</h4><p>如果要创建一个数组，而且该二维数组还是不是规则的矩阵，则需要先建立高层维数</p>
<h5 id="获得二维数组长度的方法"><a href="#获得二维数组长度的方法" class="headerlink" title="获得二维数组长度的方法"></a>获得二维数组长度的方法</h5><p>  <strong>不仅仅是二维，对任意维度的数组</strong>若要获得其长度，只需在数组名后加.length属性即可；若要取得数组中某行元素的个数，则必须在数组名后加上下标，再加上.length</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">x.length;    <span class="comment">//计算数组x的长度</span></span><br><span class="line">x[<span class="number">0</span>].length；<span class="comment">//计算数组x第一行的长度</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：与一维数组相同，用new运算符来为数组申请内存空间时，很容易在数组各维数的指定中出现错误，二维数组必须要求指定高层维数</p>
<p><strong>注意</strong>：和一维数组一样，ava在定义数组变量时，不为数组元素分配空间，因此“[]”中不用给出数组长度，但必须在为其分配过内存空间后才能使用</p>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="字符串的定义"><a href="#字符串的定义" class="headerlink" title="字符串的定义"></a>字符串的定义</h3><p>字符串就是一系列字符的序列。在java语言中字符串是用一对双引号（” “）括起来的字符序列</p>
<h3 id="字符串的分类"><a href="#字符串的分类" class="headerlink" title="字符串的分类"></a>字符串的分类</h3><p> 字符串分为两大类：第一种：在创建后就不能对其进行修改了；第二种：在创建后依然可以对其进行修改</p>
<ul>
<li>对于不可以进行修改的字符串，在java语言中用String类</li>
<li>对于可以进行修改的字符串，在java语言中用StringBuilder类</li>
</ul>
<h3 id="字符串常量的建立"><a href="#字符串常量的建立" class="headerlink" title="字符串常量的建立"></a>字符串常量的建立</h3><ul>
<li>字符常量是用（’ ‘）括起来的单个字符</li>
<li>字符串常量是用（“ ”）括起来的字符序列</li>
</ul>
<h3 id="字符串定义时的格式"><a href="#字符串定义时的格式" class="headerlink" title="字符串定义时的格式"></a>字符串定义时的格式</h3><p><strong>第一种</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String 变量名；</span><br><span class="line">变量名 = <span class="keyword">new</span> String(<span class="string">&quot;字符串&quot;</span>);</span><br><span class="line"><span class="string">&quot;=================================================================================&quot;</span></span><br><span class="line">String 变量名 = <span class="keyword">new</span> String(<span class="string">&quot;字符串&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><strong>第二种</strong>：</p>
<p>由于字符串是引用型变量，所以其存储方式与数组的储存方式基本相同</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">str = <span class="string">&quot;hello world&quot;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="String类的常用方法"><a href="#String类的常用方法" class="headerlink" title="String类的常用方法"></a>String类的常用方法</h3><p>java语言使用String类方法的方法为</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">字符串变量名.方法名();</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>常用方法</th>
<th>功能说明</th>
</tr>
</thead>
<tbody><tr>
<td>public int length()</td>
<td>返回字符串的长度</td>
</tr>
<tr>
<td>public boolean equals(Object anObject)</td>
<td>将给定字符串与当前字符串相比较，若两字符串相等，则返回true，否则返回false</td>
</tr>
<tr>
<td>public String substring(int beginIndex)</td>
<td>返回字符串中从beginIdex开始到字符串末尾的子串</td>
</tr>
<tr>
<td>public String substring(int beginIndex,int endIndex)</td>
<td>返回Index指定位置的字符</td>
</tr>
<tr>
<td>public char charAt(int idex)</td>
<td>返回index指定位置的字符</td>
</tr>
<tr>
<td>public int idexOf(String str)</td>
<td>返回str在字符串中第一次出现的位置</td>
</tr>
<tr>
<td>public int compareTo(String anotherString)</td>
<td>若调用该方法的字符串大于参数字符串，则返回大于0的值；若相等，则返回0；若小于，则返回小于0的数</td>
</tr>
<tr>
<td>public String replace(char oldChar,char newChar)</td>
<td>以newChar字符替换字符串中所有oldChar字符</td>
</tr>
<tr>
<td>public String trim()</td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>常用方法</th>
<th>功能说明</th>
</tr>
</thead>
<tbody><tr>
<td>public String toLowerCase()</td>
<td>将字符串中的所有字符都转换为小写字符</td>
</tr>
<tr>
<td>public String toUpperCase()</td>
<td>将字符串中的所有字符都转换为大写字符</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/JAVA%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h1 id="JAVA流程控制"><a href="#JAVA流程控制" class="headerlink" title="JAVA流程控制"></a>JAVA流程控制</h1><h2 id="用户交互Scanner类——-gt-输入字符串"><a href="#用户交互Scanner类——-gt-输入字符串" class="headerlink" title="用户交互Scanner类——&gt;输入字符串"></a>用户交互Scanner类——&gt;输入字符串</h2><p>通过运用Scanner类，我们可以实现人机交互，通过scanner来获取用户输入的数据</p>
<h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Scanner s = newScanner(System.in);</span><br></pre></td></tr></table></figure>

<p><strong>使用方法</strong>：我们一般通过Scanner类的next（）和nextLine（）方法获取输入的字符串，可以直接使用，亦可以通过判断语句结合hasNext（）或hasNextLine（）来判断是否有数据的输入</p>
<p><strong>使用步奏</strong></p>
<ol>
<li>在main类中new Scanner (System.in)，系统自动导入Scanner类</li>
<li>在刚输入的代码后通过Alt+Enter系统自动封装</li>
<li>在使用scanner后如果不再使用，一定通过scanner.close()将其关闭</li>
</ol>
<p> <img src="/dwx-tx.github.io/2021/12/16/JAVA%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/截屏\scanner.next1.png" alt="scanner.next1"></p>
<p><img src="/dwx-tx.github.io/2021/12/16/JAVA%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/截屏\scanner.next2.png" alt="scanner.next2"></p>
<p>我们可以看到，scanner.next可以直接使用，亦可异通过和判断语句结合使用</p>
<p>而在第二次输入的时候可以发现，输入的是hell0 world但输出的是hello，因此，这里引出next（）使用的方法</p>
<p>next：</p>
<ul>
<li>一定要读取到有效字符后才可以结束输入</li>
<li>对输入有效字符之前遇到空白，next()方法会自动去掉</li>
<li>只有输入有效字符后才将其后面的输入的空白作为分隔符或者结束符</li>
<li>next()不能得到带空格的字符串</li>
</ul>
<p><strong>如果我们需要输入带空格的字符串时给怎么做呐</strong></p>
<p><em><strong>使用nextLine（）</strong></em></p>
<p>nextLine():</p>
<ul>
<li>以Enter作为结束符，也就是说nextLine方法返回输入回车之前的所有字符</li>
<li>可以获取空白</li>
</ul>
<p><img src="/dwx-tx.github.io/2021/12/16/JAVA%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/截屏\scanner.nextLine1.png"></p>
<p><img src="/dwx-tx.github.io/2021/12/16/JAVA%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/截屏\scanner.nextLine2.png"></p>
<h2 id="Scanner输入数字类型"><a href="#Scanner输入数字类型" class="headerlink" title="Scanner输入数字类型"></a>Scanner输入数字类型</h2><p>基本步奏和输入字符串时一样，只不过在调用next（）时使用的是nextInt（）和nextFloat（）</p>
<p><img src="/dwx-tx.github.io/2021/12/16/JAVA%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/截屏\scanner.nextint.png"></p>
<p><img src="/dwx-tx.github.io/2021/12/16/JAVA%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/截屏\scanner.nextInt2.png"></p>
]]></content>
  </entry>
  <entry>
    <title>JdbcUtils</title>
    <url>/2021/12/16/Jdbc%E5%B7%A5%E5%85%B7%E7%B1%BB%E4%BB%A5%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%88%9B%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="JdbcUtils"><a href="#JdbcUtils" class="headerlink" title="JdbcUtils"></a>JdbcUtils</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.jabcstudy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">//提升作用域</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 这是一个静态代码块 因此 再倒入这个类时 只会加载一次</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            InputStream in = JdbcUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>); <span class="comment">//这里是去获取配置文件</span></span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties(); <span class="comment">//这是一个流</span></span><br><span class="line">            properties.load(in); <span class="comment">//加载配置文件</span></span><br><span class="line">           driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);<span class="comment">//这就是获取配置文件中数值的方法</span></span><br><span class="line">           url =  properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">           username =  properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">           password =  properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">           Class.forName(driver);<span class="comment">//加载mysql</span></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;出错了!!!&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取链接</span></span><br><span class="line">    <span class="comment">//方法会返回一个Connection类型的数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(resultSet!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(statement!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            statement.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            connection.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>注意：这个JdbcUtils工具类需要放在调用它的类的同一个包下</strong></p>
<h2 id="db-properties"><a href="#db-properties" class="headerlink" title="db.properties"></a>db.properties</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/demo?useUnicode=true&amp;characterEnconding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">dwx</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>注意：这个配置需要放在src目录下</strong></p>
<h2 id="操作实例"><a href="#操作实例" class="headerlink" title="操作实例"></a>操作实例</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.jabcstudy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCSecond</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Statement statement = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = JdbcUtils.getConnection();<span class="comment">//获取数据库链接</span></span><br><span class="line">            statement = connection.createStatement();<span class="comment">//获得sql的执行对象</span></span><br><span class="line">            String sql = <span class="string">&quot;INSERT INTO dwx(id,`name`,`sex`)&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;VALUES(6,&#x27;kti&#x27;,&#x27;m&#x27;)&quot;</span>; <span class="comment">//有了sql命令</span></span><br><span class="line">            <span class="keyword">int</span> i = statement.executeUpdate(sql);<span class="comment">//将sql丢到sql执行对象里边就行了</span></span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;插入成功!!!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(connection,statement,resultSet); <span class="comment">//调用工具类来释放资源</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/PythonTurtle%E5%87%BD%E6%95%B0%E5%BA%93/</url>
    <content><![CDATA[<h1 id="turtle库语法元素分析"><a href="#turtle库语法元素分析" class="headerlink" title="turtle库语法元素分析"></a>turtle库语法元素分析</h1><h2 id="绘图坐标体系"><a href="#绘图坐标体系" class="headerlink" title="绘图坐标体系"></a>绘图坐标体系</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">turtle.setup(<span class="number">650</span>,<span class="number">350</span>,<span class="number">200</span>,<span class="number">200</span>)</span><br></pre></td></tr></table></figure>

<p>其对应的数据分别为：</p>
<p>turtle.setup(width, height, startx, stary)</p>
<p>参考数据：</p>
<p>width：窗口的宽度，如果值是整数，表示像素值；如果值为小数，表示窗口宽度与屏幕的比例</p>
<p>height：窗口的高度，如果值是整数，表示像素值；如果值是小数，表示窗口高度和屏幕的比例</p>
<p>startx：窗口左侧与屏幕左侧的像素距离，如果值是None，窗口位于屏幕水平中央</p>
<p>starty：窗口顶部与屏幕顶部的像素距离，如果值是None，窗口位于屏幕垂直中央</p>
<p><img src="/dwx-tx.github.io/2021/12/16/PythonTurtle%E5%87%BD%E6%95%B0%E5%BA%93/截屏\setup函数.png" alt="setup函数"></p>
<h2 id="画笔控制函数"><a href="#画笔控制函数" class="headerlink" title="画笔控制函数"></a>画笔控制函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">turtle.penup()</span><br><span class="line">turtle.pendown()</span><br></pre></td></tr></table></figure>

<h3 id="turtle-penup（）"><a href="#turtle-penup（）" class="headerlink" title="turtle.penup（）"></a>turtle.penup（）</h3><p>turtle.penup（）其他形式turtle.penpu(), turtle.up()</p>
<p>作用：抬起画笔，之后移动画笔不绘制形状</p>
<p>参数：无</p>
<h3 id="turtle-pendown（）"><a href="#turtle-pendown（）" class="headerlink" title="turtle.pendown（）"></a>turtle.pendown（）</h3><p>turtle.pendown() 其他形式turtle.pd（），turtle.down（）</p>
<p>作用：落下画笔，之后移动画笔将绘制形状</p>
<p>参数：无</p>
<h3 id="turtle-pensize（）"><a href="#turtle-pensize（）" class="headerlink" title="turtle.pensize（）"></a>turtle.pensize（）</h3><p>turtle.pensize(width)其他形式turtle.width</p>
<p>作用：设置画笔宽度，当无参数输入时，返回当前画笔宽度</p>
<p>参数如下：</p>
<p>width：设置的画笔线条宽度，如果为None或者为空，则函数返回当前画笔宽度</p>
<h3 id="turtle-pencolor（）"><a href="#turtle-pencolor（）" class="headerlink" title="turtle.pencolor（）"></a>turtle.pencolor（）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">turtle.pencolor(colorstring)</span><br><span class="line">turtle.pencolor(r,g,b)</span><br></pre></td></tr></table></figure>

<p>作用：设置画笔颜色，当无参数输入时，返回当前画笔颜色</p>
<p>参数如下：</p>
<p>colorstring：表示颜色的字符串，比如，“purple”、“red”、“blue”等</p>
<p>（r，g，b）：颜色对应的RGB数值，例如，（51,204,140）</p>
<p><strong>很多RGB颜色都有固定的英语名字，这些英文名字可以作为colorstring输入到turtle.pencolor（）函数中，也可以采用（r,g,b）形式直接输入颜色值</strong></p>
<table>
<thead>
<tr>
<th>英文名称</th>
<th>RGB</th>
<th>十六进制</th>
<th>中文名称</th>
</tr>
</thead>
<tbody><tr>
<td>white</td>
<td>255 255 255</td>
<td>#FFFFFF</td>
<td>白色</td>
</tr>
<tr>
<td>black</td>
<td>0 0 0</td>
<td>#000000</td>
<td>黑色</td>
</tr>
<tr>
<td>grey</td>
<td>190 190 190</td>
<td>#BEBEBE</td>
<td>灰色</td>
</tr>
<tr>
<td>darkgreen</td>
<td>0 100 0</td>
<td>#006400</td>
<td>深绿色</td>
</tr>
<tr>
<td>gold</td>
<td>255 215 0</td>
<td>#FFD700</td>
<td>金色</td>
</tr>
<tr>
<td>violet</td>
<td>238 130 238</td>
<td>#EE82EE</td>
<td>紫罗兰</td>
</tr>
<tr>
<td>purple</td>
<td>160 32 240</td>
<td>#A020F0</td>
<td>紫色</td>
</tr>
</tbody></table>
<h4 id="RGB颜色"><a href="#RGB颜色" class="headerlink" title="RGB颜色"></a>RGB颜色</h4><p><strong>拓展</strong>：RGB颜色是计算机系统最常用的颜色体系之一，它采用R（红色）、G（绿色）、B（蓝色）3种基本颜色及它们的叠加组成的各种各样的颜色</p>
<h2 id="形状绘制函数"><a href="#形状绘制函数" class="headerlink" title="形状绘制函数"></a>形状绘制函数</h2><h3 id="turtle-fd（）"><a href="#turtle-fd（）" class="headerlink" title="turtle.fd（）"></a>turtle.fd（）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">turtle.fd（<span class="number">252</span>）</span><br></pre></td></tr></table></figure>

<p>turtle.fd（distance）其他形式turtle.forward（distance）</p>
<p>作用：向小海龟当前行进方向前进distance距离</p>
<p>参数：</p>
<p>distance：行进距离的像素值，当值为负数时，表示向相反方向前进</p>
<h3 id="turtle-seth"><a href="#turtle-seth" class="headerlink" title="turtle.seth"></a>turtle.seth</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">turtle.seth(-<span class="number">40</span>)</span><br></pre></td></tr></table></figure>

<p>turtle.seth(to_angle) 其他形式turtle.setheading(to_angle)</p>
<p>作用：设置小海龟当前行进方向为to_angle,该角度是绝对方向角度值</p>
<p>**turtle库的角度坐标体系以正东方向为绝对0度，正西方向为绝对180度</p>
<h3 id="turtle-circle（）"><a href="#turtle-circle（）" class="headerlink" title="turtle.circle（）"></a>turtle.circle（）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">turtle.circle(radius, estent=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>

<p><strong>参数：</strong>radius：弧形半径，当值为正数时，半径在小海龟的左侧，当值为负数时，半径在小海龟的右侧</p>
<p>​            extent：绘制弧形的角度，当不设置参数或参数设置为None时，绘制整个圆形</p>
<p>​       </p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/Random%E7%B1%BB%E5%92%8C%E5%8C%85%E8%A3%85%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="Random类"><a href="#Random类" class="headerlink" title="Random类"></a>Random类</h2><p>在math中有random()方法，但是，java还提供类一个Random类，这些类能够提供更加丰富多样的随机数</p>
<p><strong>Random的构造方法</strong></p>
<table>
<thead>
<tr>
<th>方法说明</th>
<th>功能描述</th>
</tr>
</thead>
<tbody><tr>
<td>Random( )</td>
<td>用于创建一个随机数生成器，每次实例化Random对象会产生不同的随机数</td>
</tr>
<tr>
<td>Random(long seed)</td>
<td>使用一个long类型的seed种子，当seed相同时，每次Random实例会生成相同的随机数</td>
</tr>
</tbody></table>
<p>与C语言不同的是，Random( )方法中种子是随机给出的</p>
<p><strong>Random类的常用方法</strong></p>
<table>
<thead>
<tr>
<th>方法声明</th>
<th>功能描述</th>
</tr>
</thead>
<tbody><tr>
<td>boolean nextBoolean()</td>
<td>随机生成boolean类型随机数</td>
</tr>
<tr>
<td>double nextDouble()</td>
<td>随机生成double类型的随机数</td>
</tr>
<tr>
<td>float nextFloat()</td>
<td>随机生成float类型的随机数</td>
</tr>
<tr>
<td>int nextInt()</td>
<td>随机生成int类型的随机数</td>
</tr>
<tr>
<td>int nextInt(n)</td>
<td>随机生成从[0,n)之间int类型的随机数</td>
</tr>
<tr>
<td>long nextLong()</td>
<td>随机生成long类型的随机数</td>
</tr>
</tbody></table>
<p><strong>代码实例：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package page03;</span><br><span class="line"></span><br><span class="line">import java.util.Random;</span><br><span class="line"></span><br><span class="line">public class Random01 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Random r = new Random();</span><br><span class="line">        System.out.println(&quot;这是一个随机的boolean类型的随机数&quot;+r.nextBoolean());</span><br><span class="line">        System.out.println(&quot;这是一个int类型的随机数&quot;+r.nextInt());</span><br><span class="line">        System.out.println(&quot;这是一个double类型的随机数&quot;+r.nextDouble());</span><br><span class="line">        System.out.println(&quot;这一个float类型的随机数&quot;+r.nextFloat());</span><br><span class="line">        System.out.println(&quot;这是一个产生从0~10的int类型的随机数&quot;+r.nextInt(10));</span><br><span class="line">        System.out.println(&quot;这是一个产生long类型的随机数&quot;+r.nextLong());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>ResuFul风格</title>
    <url>/2022/02/20/RestFul%E9%A3%8E%E6%A0%BC/</url>
    <content><![CDATA[<h1 id="ResuFul风格"><a href="#ResuFul风格" class="headerlink" title="ResuFul风格"></a>ResuFul风格</h1><p>有时我们访问一个网页需要传递参数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/h2&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">Servlet</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,Model model)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> rest;</span><br><span class="line">        rest = a + b;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;结果为&quot;</span>+rest);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p> <img src="https://s3.bmp.ovh/imgs/2022/02/c21c6e74f768fd5c.jpg" alt="无参时的情况"> </p>
<p>如果没有传递参数那么就会报500的错误</p>
<p><strong>如何传参？</strong></p>
<p>在以前的情况直接使用<strong>？参数=xx</strong>就能完成传参</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/s/h2?a=1&amp;b=3</span><br></pre></td></tr></table></figure>

<p> <img src="https://s3.bmp.ovh/imgs/2022/02/79d8841255e3b3d1.jpg" alt="之前的传参方法">但是这种传参方法有个很大的问题：<strong>必须知道参数名，很不安全，有SQL注入问题</strong></p>
<p>而且这种情况也使得命令行看起来很凌乱</p>
<p><strong>RestFul风格</strong></p>
<p>此时，如果我们使用下边这种方式，就能通过** \ **来传递参数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloServlet</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;hello SpringMvc-annotation&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/h2/&#123;a&#125;/&#123;b&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">Servlet</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> a, <span class="meta">@PathVariable</span> <span class="keyword">int</span> b, Model model)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> rest;</span><br><span class="line">        rest = a + b;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;结果为&quot;</span>+rest);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/s/h2/2/3</span><br></pre></td></tr></table></figure>

<p> <img src="https://s3.bmp.ovh/imgs/2022/02/c9f355bc85194699.jpg" alt="restful"> </p>
<p>这就是我理解的RestFul风格</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/Runtime%E7%B1%BB/</url>
    <content><![CDATA[<h1 id="Runtime类"><a href="#Runtime类" class="headerlink" title="Runtime类"></a>Runtime类</h1><p>Runtime类用于表示java虚拟机运行时的状态，它用于封装java虚拟机进程。</p>
<p>通过getRuntime( )方法获取与之相关的Runtime对象</p>
<h2 id="avaiProcessors-方法和freeMemory-方法和maxMemory-方法"><a href="#avaiProcessors-方法和freeMemory-方法和maxMemory-方法" class="headerlink" title="avaiProcessors( )方法和freeMemory( )方法和maxMemory()方法"></a>avaiProcessors( )方法和freeMemory( )方法和maxMemory()方法</h2><p><strong>代码实例：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package page03;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">public class Strinh &#123;</span><br><span class="line">    public static void main(String[] args) throws IOException, InterruptedException &#123;</span><br><span class="line">        /*表示java虚拟机运行时的状态*/</span><br><span class="line">        /*Runtime类中提供】一个exec()方法，这个方法执行DOS命令*/</span><br><span class="line">        Runtime rt = Runtime.getRuntime();</span><br><span class="line">        /*availablePracessors()方法用来获得处理器的个数*/</span><br><span class="line">        /*freeMemory()方法用来获得空闲内存大小*/</span><br><span class="line">        /*maxMemory用来获得最大可用内存大小*/</span><br><span class="line">        System.out.println(&quot;处理器的个数:&quot;+rt.availableProcessors()+&quot;个&quot;);</span><br><span class="line">        System.out.println(&quot;空闲内存大小:&quot;+rt.freeMemory()/1024/1024+&quot;M&quot;);</span><br><span class="line">        System.out.println(&quot;最大可用内存大小&quot;+rt.maxMemory()/1021/1024+&quot;M&quot;);</span><br><span class="line">        Process process = rt.exec(&quot;notepad.exe&quot;);</span><br><span class="line">        Thread.sleep(3000);</span><br><span class="line">        process.destroy();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>语法格式：</strong></p>
<p><code>Runtime run = Runtime.getRuntime();</code></p>
<h2 id="exec-方法"><a href="#exec-方法" class="headerlink" title="exec( )方法"></a>exec( )方法</h2><p>Runtime类中提供了一个exec( )方法，该方法用于执行一个DOS命令，从而实现和命令框中输入DOS命令相同的效果</p>
<h2 id="destroy-方法"><a href="#destroy-方法" class="headerlink" title="destroy( )方法"></a>destroy( )方法</h2><p>Runtime类中提供的destroy( )方法，是用来关闭打开的文件</p>
]]></content>
  </entry>
  <entry>
    <title>SimpleBankSystem</title>
    <url>/2021/12/16/SimpleBankSystem/</url>
    <content><![CDATA[<p>这是一个简单的银行操作系统，只有后端代码，没有前端代码，通过list以及集合的初始化来模仿数据库</p>
<h2 id="Bank类"><a href="#Bank类" class="headerlink" title="Bank类"></a>Bank类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.bank;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.customer.Customer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bank</span> </span>&#123;</span><br><span class="line">    <span class="comment">//对于Bank类 应为要模拟数据库 就需要设计一个集合来存储用户信息</span></span><br><span class="line">    <span class="comment">//对于此种加载类时就需要产生的数据，易使用static来修饰</span></span><br><span class="line">    <span class="keyword">static</span> ArrayList&lt;Customer&gt; BankDataBase = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//对数据库进行初始化 </span></span><br><span class="line">        Customer customer1 = <span class="keyword">new</span> Customer(<span class="string">&quot;1311164587&quot;</span>, <span class="string">&quot;welcome&quot;</span>, <span class="string">&quot;dwx&quot;</span>, <span class="number">1000.0</span>);</span><br><span class="line">        Customer customer2 = <span class="keyword">new</span> Customer(<span class="string">&quot;1311164586&quot;</span>, <span class="string">&quot;welcome&quot;</span>, <span class="string">&quot;dwa&quot;</span>, <span class="number">1000.0</span>);</span><br><span class="line">        Customer customer3 = <span class="keyword">new</span> Customer(<span class="string">&quot;1311164585&quot;</span>, <span class="string">&quot;welcome&quot;</span>, <span class="string">&quot;dwb&quot;</span>, <span class="number">1000.0</span>);</span><br><span class="line"></span><br><span class="line">        BankDataBase.add(customer1);</span><br><span class="line">        BankDataBase.add(customer2);</span><br><span class="line">        BankDataBase.add(customer3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;Customer&gt; <span class="title">getBankDataBase</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BankDataBase;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setBankDataBase</span><span class="params">(ArrayList&lt;Customer&gt; bankDataBase)</span> </span>&#123;</span><br><span class="line">        BankDataBase = bankDataBase;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这个test类被证明是可以使用的 通过static对list进行初始化</span></span><br><span class="line"><span class="comment">//class Test&#123;</span></span><br><span class="line"><span class="comment">//    public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">//        Bank bank = new Bank();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println(Bank.BankDataBase.get(0).getID());</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="Customer类"><a href="#Customer类" class="headerlink" title="Customer类"></a>Customer类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.customer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line">    <span class="comment">//对于用户 应该包括以下属性</span></span><br><span class="line">    <span class="keyword">private</span> String ID;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> index;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setID</span><span class="params">(String ID)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ID = ID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIndex</span><span class="params">(<span class="keyword">double</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.index = index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">(String ID, String password, String username, <span class="keyword">double</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ID = ID;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">        <span class="keyword">this</span>.index = index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="BankSystem类"><a href="#BankSystem类" class="headerlink" title="BankSystem类"></a>BankSystem类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.bank.Bank;</span><br><span class="line"><span class="keyword">import</span> com.dwx.customer.Customer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Bank();</span><br><span class="line">        Customer customer;</span><br><span class="line">        <span class="comment">//登录程序是和其他程序分开的</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            customer = login();</span><br><span class="line">            <span class="keyword">if</span> (customer.getPassword() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;登录失败！&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;请重新登录&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;登陆成功&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;欢迎使用dwxATM&quot;</span> + customer.getUsername() + <span class="string">&quot;用户&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> order=<span class="number">0</span>;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        Order();</span><br><span class="line">        <span class="keyword">while</span> (order!=<span class="number">5</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入你要进行的操作:&quot;</span>);</span><br><span class="line">            order = scanner.nextInt();</span><br><span class="line">            <span class="keyword">switch</span> (order) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    customer = Saving(customer);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    customer = Take(customer);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    View(customer);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    customer = ChangePassword(customer);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;正在退出，请等候&quot;</span>);</span><br><span class="line">                    <span class="comment">//一个小玩笑，在退出时，编译器啥也没做，就是sleep了3秒</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException exception) &#123;</span><br><span class="line">                        exception.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;退出成功&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//登录功能的实现</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Customer <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//调用数据库 查看数据库中有没有我们想要的类</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入您的用户ID:&quot;</span>);</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String ID = scanner.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入您的用户密码:&quot;</span>);</span><br><span class="line">        String password = scanner.nextLine();</span><br><span class="line">        <span class="comment">//使用ThisCustomer来存储在数据库中找到的Customer对象</span></span><br><span class="line">        Customer ThisCustomer = <span class="keyword">new</span> Customer();</span><br><span class="line">        <span class="keyword">for</span> (Customer customer : Bank.getBankDataBase()) &#123;</span><br><span class="line">            <span class="comment">//对判断进行分层 实现区别是否数据库中存在这个对象（但是密码输入错误） 还是根本没有存在</span></span><br><span class="line">            <span class="keyword">if</span> (customer.getID().equals(ID)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (customer.getPassword().equals(password)) &#123;</span><br><span class="line">                    <span class="comment">//此种情况是登录成功 ID和Password都对</span></span><br><span class="line">                    ThisCustomer = customer;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//这种情况是存在ID，但是密码错误</span></span><br><span class="line">                    System.out.println(<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ThisCustomer;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//菜单</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Order</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;1：存钱&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;2：取钱&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;3：查看余额&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4：修改密码&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;5：退出程序&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//存钱操作的实现</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Customer <span class="title">Saving</span><span class="params">(Customer customer)</span></span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入您要存入的金额：&quot;</span>);</span><br><span class="line">        <span class="keyword">double</span> money = scanner.nextDouble();</span><br><span class="line">        <span class="comment">//先把数据库拿出来</span></span><br><span class="line">        <span class="keyword">for</span> (Customer c:Bank.getBankDataBase())&#123;</span><br><span class="line">            <span class="comment">//在数据库中遍历 查找到我们的用户 对用户进行操作 操作后及时更改暂时的customer对象并及时返回</span></span><br><span class="line">            <span class="keyword">if</span> (c==customer)&#123;</span><br><span class="line">                c.setIndex(customer.getIndex()+money);</span><br><span class="line">                customer = c;</span><br><span class="line">                System.out.println(<span class="string">&quot;存钱成功&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> customer;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//取钱操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Customer <span class="title">Take</span><span class="params">(Customer customer)</span></span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//对于取钱 与存钱不同的是 取钱需要去查看余额是否足够 对数据库的操作无异</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入您要取出的金额:&quot;</span>);</span><br><span class="line">        <span class="keyword">double</span> money = scanner.nextDouble();</span><br><span class="line">        <span class="keyword">if</span> (money&gt;customer.getIndex())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;取钱失败，余额不足&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//如果余额足够 就需要进行对数据库的操作了</span></span><br><span class="line">            <span class="comment">//对数据库进行遍历 找到我们要操作的对象</span></span><br><span class="line">            <span class="keyword">for</span> (Customer c:Bank.getBankDataBase())&#123;</span><br><span class="line">                <span class="keyword">if</span> (c==customer) &#123;</span><br><span class="line">                    c.setIndex(c.getIndex() - money);</span><br><span class="line">                    <span class="comment">//对数据库进行操作后 需要及时更改我们正在执行的Customer对象的情况并返回</span></span><br><span class="line">                    customer = c;</span><br><span class="line">                    System.out.println(<span class="string">&quot;取钱成功&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> customer;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查看余额操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">View</span><span class="params">(Customer customer)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;用户&quot;</span>+customer.getUsername()+<span class="string">&quot;您的账户余额还有&quot;</span>+customer.getIndex()+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改密码操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Customer <span class="title">ChangePassword</span><span class="params">(Customer customer)</span></span>&#123;</span><br><span class="line">        <span class="comment">//跟存钱一样 修改密码只需要对数据库进行操作 不需要任何的比较</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入新密码:&quot;</span>);</span><br><span class="line">        String password = scanner.nextLine();</span><br><span class="line">        <span class="keyword">for</span> (Customer c:Bank.getBankDataBase())&#123;</span><br><span class="line">            <span class="keyword">if</span> (c == customer)&#123;</span><br><span class="line">                c.setPassword(password);</span><br><span class="line">                customer = c;</span><br><span class="line">                System.out.println(<span class="string">&quot;修改后的密码为&quot;</span>+customer.getPassword());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> customer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>SpringBoot学习之HelloWorld</title>
    <url>/2022/04/03/SpringBoot-HelloWorld/</url>
    <content><![CDATA[<h2 id="SpringBoot学习之HelloWorld"><a href="#SpringBoot学习之HelloWorld" class="headerlink" title="SpringBoot学习之HelloWorld"></a>SpringBoot学习之HelloWorld</h2><p>老习惯，学习一门新的技术或语言都要从helloworld开始。</p>
<h2 id="手写笔记"><a href="#手写笔记" class="headerlink" title="手写笔记"></a>手写笔记</h2><p> <img src="https://s3.bmp.ovh/imgs/2022/04/03/2d2bcd7588a77d3c.jpg"> </p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/04/03/05c4f7b670c68c22.jpg"> </p>
<h2 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h2><p>==通过idea进行快速创建，学校的校园网不能连上外网，失败。==</p>
<p>==使用自己的热点成功了==</p>
<h3 id="SpringBoot-HelloWorld"><a href="#SpringBoot-HelloWorld" class="headerlink" title="SpringBoot-HelloWorld"></a>SpringBoot-HelloWorld</h3><p><strong>文件介绍</strong></p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/04/03/6a9236d2340dedb2.jpg"> </p>
<p>这三个标红的圈从上到下</p>
<ul>
<li>Application:项目的起始位置，不用进行修改</li>
<li>application.properties:配置文件，已经做了很多的默认配置</li>
<li>test:下的application，是测试程序 </li>
</ul>
<p>编写程序的时候是在Application文件的同级文件夹下编写我们的</p>
<ul>
<li>controller</li>
<li>service</li>
<li>mapper</li>
<li>pojo</li>
</ul>
<p>等等</p>
<p><strong>HelloWorld的实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">HelloWold</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>SpringBoot预科</title>
    <url>/2022/04/03/SpringBoot%E9%A2%84%E7%A7%91/</url>
    <content><![CDATA[<h1 id="SpringBoot预科"><a href="#SpringBoot预科" class="headerlink" title="SpringBoot预科"></a>SpringBoot预科</h1><p>SpringBoot是对Spring的一个再简化框架 由于学习比较紧急，因此使用笔记图片作为这篇博客的主力。</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/04/03/1393bf80f7d110f9.jpg"> </p>
]]></content>
  </entry>
  <entry>
    <title>HelloSpringMVC</title>
    <url>/2022/02/19/SpringMVCHelloSpringMVC/</url>
    <content><![CDATA[<h1 id="HelloSpringMVC"><a href="#HelloSpringMVC" class="headerlink" title="HelloSpringMVC"></a>HelloSpringMVC</h1><p> <a href="https://www.w3cschool.cn/spring_mvc_documentation_linesh_translation/spring_mvc_documentation_linesh_translation-b5ep27r7.html">Spring MVC 用DispatcherServlet处理请求_w3cschool</a> ：官方中文文档</p>
<p>初学SpringMVC，这个是一个新的概念，因此使用老方法，通过一个模型来理解和学习。</p>
<p>我们这里使用的SpringMVC使用的是Dispatcherservlet，这个东西的底层还是Servlet</p>
<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><ul>
<li>搭建一个Module</li>
<li>导入web</li>
<li>确定导入了springmvc的依赖</li>
<li>注册DispatcherServlet，配置xml</li>
<li>设置关联配置文件</li>
<li>注册control到Spring的xml中</li>
</ul>
<p> <img src="https://s3.bmp.ovh/imgs/2022/02/217dbf19fdde6682.jpg" alt="整个程序额结构"> </p>
<h3 id="搭建一个Module"><a href="#搭建一个Module" class="headerlink" title="搭建一个Module"></a>搭建一个Module</h3><p>由于我不会使用普通的Module项目添加web依赖来实现创建webapp，因此我是用传统的直接通过maven搭建web环境。</p>
<p><strong>修改web.xml配置：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>spring.xml配置</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这个xml的配置非常全，可能有点用不到，但是十分方便</p>
<h3 id="导入SpringMVC的依赖"><a href="#导入SpringMVC的依赖" class="headerlink" title="导入SpringMVC的依赖"></a>导入SpringMVC的依赖</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</span><br><span class="line">     &lt;version&gt;5.3.16&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="配置web-xml-注册DispatcherServlet"><a href="#配置web-xml-注册DispatcherServlet" class="headerlink" title="配置web.xml 注册DispatcherServlet"></a>配置web.xml 注册DispatcherServlet</h3><p><strong>一下的写法都是固定的，不需要有任何改变</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!--初测DispatcherServlet 这是我们提供的固定的接口--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Spring<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Spring<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>我们这里可以看到有一个<code>&lt;init-param&gt;&lt;/init-param&gt;</code>配置，因此我们需要去创建一个跟web.xml相配的Spring的xml1文件</strong></p>
<h3 id="创建Spring的xml配置文件"><a href="#创建Spring的xml配置文件" class="headerlink" title="创建Spring的xml配置文件"></a>创建Spring的xml配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--添加映射器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--添加处理器适配器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--添加视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这部分的程序也是固定的，不需要改变的</p>
<h3 id="编写Control类"><a href="#编写Control类" class="headerlink" title="编写Control类"></a>编写Control类</h3><p>我们这里已经使用了SpringMVC的固定接口DispatcherServlet，因此我们这里使用Spring给的另一个接口<code>Controller</code>来实现我们的servlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.control;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">mycomtrol</span> <span class="keyword">implements</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">handleRequest</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;hello SpringMVC&quot;</span>);</span><br><span class="line"></span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>程序解析：</strong></p>
<p>创建ModelAndView，通过这个产生的对象来执行我们需要执行的程序</p>
<p>modelView: </p>
<ul>
<li>addObject(“msg”,”value”):这个方法相当与原来的setAttribute（）。设置参数个前端用</li>
<li>setViewName(“name”)，相当于重定向</li>
</ul>
<p>我们可以看到，在spring.xml配置中有：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--添加视图解析器--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--前缀--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--后缀--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里的前缀可以添加到这里的<code>name</code>的前后来表示位置</p>
<h3 id="注册到Spring-xml中"><a href="#注册到Spring-xml中" class="headerlink" title="注册到Spring.xml中"></a>注册到Spring.xml中</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--注册control--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;/hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.control.mycomtrol&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>之后我们就可以通过这个/hello，来执行程序</p>
]]></content>
  </entry>
  <entry>
    <title>SSM框架的整合</title>
    <url>/2022/02/21/SpringMVCSSM%E6%A1%86%E6%9E%B6%E7%9A%84%E6%95%B4%E5%90%88/</url>
    <content><![CDATA[<h1 id="SSM框架的整合"><a href="#SSM框架的整合" class="headerlink" title="SSM框架的整合"></a>SSM框架的整合</h1><p><strong>我的学习博客：</strong> <a href="https://mp.weixin.qq.com/s/SDxqGu_il3MUCTcN1EYrng">狂神说SpringMVC05：整合SSM框架 (qq.com)</a> </p>
<p>我是根据这个博客学的</p>
<p>说是SSM框架的整合，其实还是重新创建一个项目，正好学习从0开始写一个项目的方法。</p>
<h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><ul>
<li>IDEA</li>
<li>maven 3.6（以上）</li>
<li>Tomact9 （以下）</li>
<li>MySQL 5.7（以上）</li>
</ul>
<h2 id="第一步，分析需求设计数据库"><a href="#第一步，分析需求设计数据库" class="headerlink" title="第一步，分析需求设计数据库"></a>第一步，分析需求设计数据库</h2><p>我们这里仅仅创建一个非常简单ed图书管理系统，创建一个非常简单的数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE ssmbuild;</span><br><span class="line">USE ssmbuild;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `books`(</span><br><span class="line">`bookID` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;书id&#x27;</span>,</span><br><span class="line">`bookName` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;书名&#x27;</span>,</span><br><span class="line">`bookCounts` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数量&#x27;</span>,</span><br><span class="line">`detail` <span class="type">VARCHAR</span>(<span class="number">200</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;描述&#x27;</span>,</span><br><span class="line">KEY `bookID`(`bookID`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `books`(`bookID`,`bookName`,`bookCounts`,`detail`)<span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;从入门到放弃&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;MySQL&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;从删库到跑路&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;Linux&#x27;</span>,<span class="number">5</span>,<span class="string">&#x27;从进门到进牢&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p> <img src="https://s3.bmp.ovh/imgs/2022/02/c6a8befd93036816.jpg" alt="数据库样貌"> </p>
<h2 id="第二步，创建javaweb项目"><a href="#第二步，创建javaweb项目" class="headerlink" title="第二步，创建javaweb项目"></a>第二步，创建javaweb项目</h2><p> <img src="https://s3.bmp.ovh/imgs/2022/02/acdf6ff47d83424a.jpg"> </p>
<p>修改web.xml文件中的配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="第三步，导入环境依赖"><a href="#第三步，导入环境依赖" class="headerlink" title="第三步，导入环境依赖"></a>第三步，导入环境依赖</h2><p>包括;</p>
<ul>
<li>junit</li>
<li>数据驱动和连接池</li>
<li>servlet</li>
<li>jsp</li>
<li>mybatis</li>
<li>mybatis-Spring</li>
<li>Spring的一系列包</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>有提示<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>并且顺手处理了可能存在的mybatis环境不仅如此target问题：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="第四步，链接数据库"><a href="#第四步，链接数据库" class="headerlink" title="第四步，链接数据库"></a>第四步，链接数据库</h2><p> <img src="https://s3.bmp.ovh/imgs/2022/02/a07ff9a7efeb82f7.jpg" alt="连接数据库"> </p>
<h2 id="第五步，编写包结构"><a href="#第五步，编写包结构" class="headerlink" title="第五步，编写包结构"></a>第五步，编写包结构</h2><p>我们创建一个程序，最基础的包结构有：</p>
<ul>
<li>Mapper（永久层）</li>
<li>POJO（实体类）</li>
<li>service</li>
<li>Controller（原 servlet）</li>
</ul>
<p>以及在resource下创建;</p>
<ul>
<li>mybatis-config.xml（mybatis的核心配置文件）</li>
<li>applicationContext.xml（Spring的核心配置文件）</li>
</ul>
<p>并导入他们的配置头文件</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/02/e8a1d7dcaca391e5.jpg" alt="完整的包结构"> </p>
<p><strong>mybatis-config.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>applicationContext.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第六步，mybatis关联数据库"><a href="#第六步，mybatis关联数据库" class="headerlink" title="第六步，mybatis关联数据库"></a>第六步，mybatis关联数据库</h2><p>在resource下创建db.properties文件，并且写入链接数据库所需的一切参数</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">driver</span> = <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span> = <span class="string">jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;characterEnconding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">dwx</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">123456</span></span><br></pre></td></tr></table></figure>

<p>本身是需要在mybatis中关联的，但是由于我们使用Spring整合了mybatis，这部分内容就不需要mybatis做了，mybatis只需要对别名进行处理，或者注册mapper.xml</p>
<p><strong>此时的mybatis-config.xml文件</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--联结数据库的工作交给Spring--&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--使用别名 对实体类使用别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.dwx.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注册mapper.xml--&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="第七步，编写pojo类"><a href="#第七步，编写pojo类" class="headerlink" title="第七步，编写pojo类"></a>第七步，编写pojo类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Books</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>  bookID;</span><br><span class="line">    <span class="keyword">private</span> String bookName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> bookCounts;</span><br><span class="line">    <span class="keyword">private</span> String detail;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Books</span><span class="params">(<span class="keyword">int</span> bookID, String bookName, <span class="keyword">int</span> bookCounts, String detail)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bookID = bookID;</span><br><span class="line">        <span class="keyword">this</span>.bookName = bookName;</span><br><span class="line">        <span class="keyword">this</span>.bookCounts = bookCounts;</span><br><span class="line">        <span class="keyword">this</span>.detail = detail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Books</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBookID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bookID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookID</span><span class="params">(<span class="keyword">int</span> bookID)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bookID = bookID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBookName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bookName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookName</span><span class="params">(String bookName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bookName = bookName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBookCounts</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bookCounts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookCounts</span><span class="params">(<span class="keyword">int</span> bookCounts)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bookCounts = bookCounts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDetail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> detail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDetail</span><span class="params">(String detail)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.detail = detail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Books&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;bookID=&quot;</span> + bookID +</span><br><span class="line">                <span class="string">&quot;, bookName=&#x27;&quot;</span> + bookName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, bookCounts=&quot;</span> + bookCounts +</span><br><span class="line">                <span class="string">&quot;, detail=&#x27;&quot;</span> + detail + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>此处我们没有使用注解开发，如果使用注解就要导入Lombok的·包，</p>
<p>具体过程如这篇博客： <a href="https://dwx-tx.github.io/2022/01/12/mybatis%E4%BB%8B%E7%BB%8DLombok%E6%8F%92%E4%BB%B6/">Lombok插件的使用 | dwx-tx的小天地</a> </p>
<p><strong>要求：</strong>实体类的参数的类型的名字要与数据库中的一致。</p>
<h2 id="第八步，接口实现操作"><a href="#第八步，接口实现操作" class="headerlink" title="第八步，接口实现操作"></a>第八步，接口实现操作</h2><p>在Dao层创建接口，写出预计的操作。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.Books;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.print.Book;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BooksMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//接口实现操作</span></span><br><span class="line">    <span class="comment">//增加书籍操作</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Books books)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除书籍操作：通过ID</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteBook</span><span class="params">(<span class="meta">@Param(&quot;bookID&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改图书信息</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateBook</span><span class="params">(Books books)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询书籍byID</span></span><br><span class="line">    <span class="function">Books <span class="title">queryBook</span><span class="params">(<span class="meta">@Param(&quot;bookID&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询所有的数据</span></span><br><span class="line">    <span class="function">List&lt;Books&gt; <span class="title">queryBooks</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>此处使用<code>@Param(&quot;&quot;)</code>表示以后参数可以使用别名</p>
<h2 id="第九步，编写实现Mapper"><a href="#第九步，编写实现Mapper" class="headerlink" title="第九步，编写实现Mapper"></a>第九步，编写实现Mapper</h2><p>此时就用到Mybatis了，在Mapper层下创造一个和接口同名的xml文件，并且导入Mapper配置。</p>
<p>修改<code>&lt;mapper&gt;&lt;/mapper&gt;</code>的命名空间为接口的名字</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dwx.mapper.BooksMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>编写SQL，实现sql</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dwx.mapper.BooksMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--增加书籍操作--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addBook&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">        insert into ssmbuild.books (bookName,bookCounts,detail)</span><br><span class="line">        VALUES #&#123;bookName&#125;,#&#123;bookCounts&#125;,#&#123;detai&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--删除书籍操作--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteBook&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete from ssmbuild.books</span><br><span class="line">        where bookID = #&#123;bookID&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--修改图书信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateBook&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">        update ssmbuild.books</span><br><span class="line">        set bookName = #&#123;bookName&#125;,bookCounts = #&#123;bookCounts&#125;,detail = #&#123;detail&#125;</span><br><span class="line">        where bookID = #&#123;bookID&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询书籍ByID--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBook&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">        select * from ssmbuild.books where bookID = #&#123;bookID&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询所有的书籍--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBooks&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">        select * from ssmbuild.books;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>实现的xml编写完后，要迅速到mybatis-config.xml中进行配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--联结数据库的工作交给Spring--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--使用别名 对实体类使用别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.dwx.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注册mapper.xml--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.mapper.BooksMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="第十步，编写service层（接口加实现类）"><a href="#第十步，编写service层（接口加实现类）" class="headerlink" title="第十步，编写service层（接口加实现类）"></a>第十步，编写service层（接口加实现类）</h2><p>service层的唯一作用就是链接DAO层，将数据传递到Controller层，因此，在service层中需要调用DAO层（引用这个层）</p>
<p><strong>接口</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.Books;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BooksService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//service层做得工作和Dao层差不多</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Books books)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除书籍操作：通过ID</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteBook</span><span class="params">(<span class="meta">@Param(&quot;bookID&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改图书信息</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateBook</span><span class="params">(Books books)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询书籍byID</span></span><br><span class="line">    <span class="function">Books <span class="title">queryBook</span><span class="params">(<span class="meta">@Param(&quot;bookID&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询所有的数据</span></span><br><span class="line">    <span class="function">List&lt;Books&gt; <span class="title">queryBooks</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>实现类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.mapper.BooksMapper;</span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.Books;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title">BooksService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用DAO层</span></span><br><span class="line">    <span class="keyword">private</span> BooksMapper booksMapper;</span><br><span class="line">    <span class="comment">//由于是使用mybatis，因此一定要使用set方法，因为mybatis是支持set注入的</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBooksMapper</span><span class="params">(BooksMapper booksMapper)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.booksMapper = booksMapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//此时使用这个mapper对象就能实现操作了</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Books books)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> booksMapper.addBook(books);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteBook</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> booksMapper.deleteBook(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateBook</span><span class="params">(Books books)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> booksMapper.updateBook(books);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Books <span class="title">queryBook</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> booksMapper.queryBook(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Books&gt; <span class="title">queryBooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> booksMapper.queryBooks();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第十一步，整合Spring"><a href="#第十一步，整合Spring" class="headerlink" title="第十一步，整合Spring"></a>第十一步，整合Spring</h2><p>spring能够整合每一层，并且在每一层都创建一个xml</p>
<h3 id="Spring整合DAO层"><a href="#Spring整合DAO层" class="headerlink" title="Spring整合DAO层"></a>Spring整合DAO层</h3><p>创建SpringDAO/mapper.xml并且导入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>对于这个xml要做到的功能如下：</p>
<ul>
<li><p>关联数据库配置文件</p>
</li>
<li><p>链接池</p>
</li>
<li><p>SqlSessionFactory</p>
</li>
<li><p>将DAO接口注入到Spring容器中</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--关联数据库配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:db.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--连接池--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这个c3j0数据库源有问题，我们使用我们Mybatis默认的数据源--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&amp;lt;!&amp;ndash;    这里我们使用的链接池是c3j0&amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;bean id=&quot;dataSource&quot; class=&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;driverClass&quot; value=&quot;$&#123;driver&#125;&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;password&quot; value=&quot;$&#123;password&#125;&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;user&quot; value=&quot;$&#123;username&#125;&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;jdbcUrl&quot; value=&quot;$&#123;url&#125;&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &amp;lt;!&amp;ndash;对这个连接池进行一点个性化配置&amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &amp;lt;!&amp;ndash; c3p0连接池的私有属性 &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;maxPoolSize&quot; value=&quot;30&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;minPoolSize&quot; value=&quot;10&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &amp;lt;!&amp;ndash; 关闭连接后不自动commit &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;autoCommitOnClose&quot; value=&quot;false&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &amp;lt;!&amp;ndash; 获取连接超时时间 &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;checkoutTimeout&quot; value=&quot;10000&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &amp;lt;!&amp;ndash; 当获取连接失败重试次数 &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;acquireRetryAttempts&quot; value=&quot;2&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/bean&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--整合数据库 数据源--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis的默认数据库池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useUnicode=true<span class="symbol">&amp;amp;</span>characterEnconding=utf8<span class="symbol">&amp;amp;</span>useSSL=truejdbc:mysql://localhost:3306/mybatis?useUnicode=true<span class="symbol">&amp;amp;</span>characterEnconding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--sqlSessionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--链接数据源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--绑定mybatis配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置永久层扫描包（动态的实现DAO接口可以注入到Spring容器中）--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--注入SQLSessionFactory--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置要扫描的包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.dwx.mapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Spring整合service层"><a href="#Spring整合service层" class="headerlink" title="Spring整合service层"></a>Spring整合service层</h3><p>步奏：</p>
<ul>
<li>扫描service层下的包</li>
<li>在service类上加上@Service表示被Spring托管</li>
<li>将所有的业务类注册到Spring中</li>
<li>声明式事务配置</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--扫描Service的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.dwx.service&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将我们的业务类都朱擦到Spring中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;BooksServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.service.BookServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring注入参数Mapper--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;booksMapper&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;booksMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--声明式事务配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--绑定数据源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第十二步，整合SpringMVC"><a href="#第十二步，整合SpringMVC" class="headerlink" title="第十二步，整合SpringMVC"></a>第十二步，整合SpringMVC</h2><p>SpringMVC整合步奏：</p>
<ul>
<li>将web.xml文件换成最新的</li>
<li>配置DispatchServlet</li>
<li>解决乱码</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注册DispatcherServlet及其一些配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Spring<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Spring<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--解决乱码问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>我们看这个配置，有一个<code>classpath:springmvc-servlet.xml</code></p>
<p>这里是我们Spring整合Controller层，我们去编写这个</p>
<p>它要做到的事情：</p>
<ul>
<li>注解驱动</li>
<li>扫描包</li>
<li>静态资源过滤</li>
<li>视图解析器</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span> <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--由于我们时使用的注解开发，因此需要添加配置 扫描要添加注解的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.dwx.controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--让SpringMVC不处理静态资源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这里我们使用下边这个配置代替 添加处理映射器 添加处理适配器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--编写适配视图解析器--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第十三步，将我们写的几个子xml全部导入到Spring的核心配置文件中去"><a href="#第十三步，将我们写的几个子xml全部导入到Spring的核心配置文件中去" class="headerlink" title="第十三步，将我们写的几个子xml全部导入到Spring的核心配置文件中去"></a>第十三步，将我们写的几个子xml全部导入到Spring的核心配置文件中去</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;spring-mapper.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">import</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;spring-service.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">import</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;springmvc-servlet.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">import</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>到此时我们的SSM框架就彻底整合完毕了</p>
]]></content>
  </entry>
  <entry>
    <title>SpringMVC乱码处理问题</title>
    <url>/2022/02/20/SpringMVC%E4%B9%B1%E7%A0%81%E5%A4%84%E7%90%86%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="SpringMVC乱码处理问题"><a href="#SpringMVC乱码处理问题" class="headerlink" title="SpringMVC乱码处理问题"></a>SpringMVC乱码处理问题</h1><p>在实际的开发中，如果前后后端交互时使用的编码器不同，就会出现乱码问题，集中表现为中文乱码问题。</p>
<p>解决这种问题的方法:</p>
<ul>
<li>编译一个Filter层，并且到web.xml中进行配置。</li>
<li>使用SpringMVC提供的现成的过滤器，直接到web.xml中进行配置。</li>
</ul>
<p>第一种方法是我们之前使用的方法，此时我们不再复习。</p>
<p><strong>依然通过搭建环境来处理</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">     <span class="meta">@RequestMapping(&quot;/h3&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">FilterTest</span><span class="params">(Model model,String name)</span></span>&#123;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        System.out.println(<span class="string">&quot;进入过滤器测试程序&quot;</span>);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>,name);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>此时没有加装过滤器：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">åæè½©</span><br></pre></td></tr></table></figure>

<p><strong>到xml中添加过滤器:</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>添加了过滤器后：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">dwx的小天地</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>SpringMVC使用注解开发</title>
    <url>/2022/02/19/SpringMVC%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="SpringMVC使用注解开发"><a href="#SpringMVC使用注解开发" class="headerlink" title="SpringMVC使用注解开发"></a>SpringMVC使用注解开发</h1><p>当我们经历过了Spring的学习和Mybatis学习，我们学到注解开发时就说明这个框架基本学习基础内容结束，</p>
<p>我们看一下普通SpringMVC程序的编写： <a href="https://dwx-tx.github.io/2022/02/19/SpringMVCHelloSpringMVC/">HelloSpringMVC | dwx-tx的小天地</a> </p>
<p>我们可以通过比较两者的差别来学习这个知识点</p>
<p><strong>依然采用创建项目的方法来学习</strong></p>
<h2 id="第一步-创建Module项目（webApp的）"><a href="#第一步-创建Module项目（webApp的）" class="headerlink" title="第一步 创建Module项目（webApp的）"></a>第一步 创建Module项目（webApp的）</h2><p>更换了web.xml的配置</p>
<h2 id="第二步-配置DispatcherServlet"><a href="#第二步-配置DispatcherServlet" class="headerlink" title="第二步 配置DispatcherServlet"></a>第二步 配置DispatcherServlet</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置DispatcherServlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--绑定SpringMVC配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:SpringMVC-Servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置启动级别--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="第三步-编写SpringMVC配置文件"><a href="#第三步-编写SpringMVC配置文件" class="headerlink" title="第三步 编写SpringMVC配置文件"></a>第三步 编写SpringMVC配置文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span> <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--由于我们时使用的注解开发，因此需要添加配置 扫描要添加注解的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.dwx.controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--让SpringMVC不处理静态资源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这里我们使用下边这个配置代替 添加处理映射器 添加处理适配器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--编写适配视图解析器--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>要点已经写到了注解里</p>
<h2 id="第四步-编写Controller类-使用注解"><a href="#第四步-编写Controller类-使用注解" class="headerlink" title="第四步 编写Controller类 使用注解"></a>第四步 编写Controller类 使用注解</h2><p>我们使用<code>@Controller</code>修饰一个类，表示该类继承了Controller接口</p>
<p>我们使用<code>@RequestMappering(&quot;xx&quot;)</code>修饰一个方法表示执行来自xx的请求的方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.dwx.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.ui.Model;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line">public class MyController &#123;</span><br><span class="line"></span><br><span class="line">	@RequestMapping(&quot;/hello&quot;)</span><br><span class="line">    public String helloServlet(Model model)&#123;</span><br><span class="line">        model.addAttribute(&quot;msg&quot;,&quot;hello SpringMvc-annotation&quot;);</span><br><span class="line">        return &quot;hello&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这里，我们使用model.addAttribute来实现封装数据</p>
<p>我们使用return 来实现重定向</p>
<p>这个指会到Spring.xml中加上视图的修饰一起作为重定向的地址</p>
]]></content>
  </entry>
  <entry>
    <title>SSM框架下的项目前后端的结合</title>
    <url>/2022/02/22/SpringMVC%E5%89%8D%E5%90%8E%E7%AB%AF%E7%9A%84%E7%BB%93%E5%90%88/</url>
    <content><![CDATA[<h1 id="SSM框架下的项目前后端的结合"><a href="#SSM框架下的项目前后端的结合" class="headerlink" title="SSM框架下的项目前后端的结合"></a>SSM框架下的项目前后端的结合</h1><p>对于前后端结合莫非两个步骤：</p>
<ul>
<li>编写对应的Controller层</li>
<li>编写前端</li>
</ul>
<h2 id="查询书籍功能的实现"><a href="#查询书籍功能的实现" class="headerlink" title="查询书籍功能的实现"></a>查询书籍功能的实现</h2><p><strong>编写controller层</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.dwx.controller;</span><br><span class="line"></span><br><span class="line">import com.dwx.pojo.Books;</span><br><span class="line">import com.dwx.service.BooksService;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.ui.Model;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">//此处我们使用注解开发</span><br><span class="line">@Controller</span><br><span class="line">@RequestMapping(&quot;/books&quot;)</span><br><span class="line">public class BooksController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private BooksService booksService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //对于Controller层 他的工作是调用Service层，因此将service作为参数</span><br><span class="line">    @RequestMapping(&quot;allBooks&quot;)</span><br><span class="line">    public String queryAllBooks(Model model)&#123;</span><br><span class="line">        List&lt;Books&gt; books = booksService.queryBooks();</span><br><span class="line">        model.addAttribute(&quot;books&quot;,books);</span><br><span class="line">        return &quot;books&quot;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>编写前端代码</strong></p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">2</span>/<span class="number">22</span></span><br><span class="line">  Time: <span class="number">20</span>:<span class="number">25</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;查询书籍页面&lt;/title&gt;</span><br><span class="line">    &lt;!-- 引入 Bootstrap --&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;table&gt;</span><br><span class="line">        &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;书籍编号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;书籍名称&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;书籍数目&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;书籍细节&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/thead&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">            &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;book&quot;</span>  items=<span class="string">&quot;$&#123;books&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;$&#123;book.bookID&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;book.bookName&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;book.bookCounts&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;book.detail&#125;&lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &lt;/c:forEach&gt;</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>其他的功能都是类似操作，不再进行展示</p>
]]></content>
  </entry>
  <entry>
    <title>SpringMVC回顾以前的知识</title>
    <url>/2022/02/19/SpringMVC%E5%9B%9E%E9%A1%BE%E4%BB%A5%E5%89%8D%E7%9A%84%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="SpringMVC回顾以前的知识"><a href="#SpringMVC回顾以前的知识" class="headerlink" title="SpringMVC回顾以前的知识"></a>SpringMVC回顾以前的知识</h1><p>因为SpringMVC也是一种框架，因此，如果我们学习这个框架我们就需要学习它和我们之前知识的相关性，从这个相关性出发学习这个新知识</p>
<h2 id="回顾Servlet"><a href="#回顾Servlet" class="headerlink" title="回顾Servlet"></a>回顾Servlet</h2><p>回顾servlet需要重新搭建合适的环境。</p>
<p><strong>步奏:</strong></p>
<ul>
<li>创建一个空的父项目</li>
<li>导入父项目的包</li>
<li>创建子项目</li>
<li>加上web配置</li>
<li>编写servlet类</li>
<li>注册servlet</li>
<li>配置Tomcat</li>
<li>执行Tomcat</li>
</ul>
<p><strong>父类需要的包：</strong></p>
<p><strong>junit spring-webmvc servlet-api jsp-api jstl</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--servlet的包--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>servlet</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.servlet;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String method = req.getParameter(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(method);</span><br><span class="line">        <span class="keyword">if</span> (method.equals(<span class="string">&quot;add&quot;</span>))&#123;</span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;hello.jsp&quot;</span>);</span><br><span class="line">             req.getSession().setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;正在执行增加程序&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (method.equals(<span class="string">&quot;delete&quot;</span>))&#123;</span><br><span class="line"></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;hello.jsp&quot;</span>);</span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;正在执行删除程序&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>xml</strong></p>
<p>这个xml可以取找之前笔记的或者博客的，不在这里考</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">  &lt;groupId&gt;org.example&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;SpringMVC-02&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">  &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">  &lt;name&gt;SpringMVC-02 Maven Webapp&lt;/name&gt;</span><br><span class="line">  &lt;!-- FIXME change it to the project&#x27;s website --&gt;</span><br><span class="line">  &lt;url&gt;http://www.example.com&lt;/url&gt;</span><br><span class="line"></span><br><span class="line">  &lt;properties&gt;</span><br><span class="line">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">    &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt;</span><br><span class="line">    &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt;</span><br><span class="line">  &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">  &lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;4.11&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;javax.servlet.jsp.jstl&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;javax.servlet.jsp-api&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;2.3.3&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;4.11&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--mysql依赖--&gt;</span><br><span class="line">    &lt;!-- https://mvnrepository.com/artifact/org.wisdom-framework/mysql-connector-java --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;8.0.27&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;4.11&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;4.0.1&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">  &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">  &lt;build&gt;</span><br><span class="line">    &lt;finalName&gt;SpringMVC-02&lt;/finalName&gt;</span><br><span class="line">    &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span><br><span class="line">      &lt;plugins&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.1.0&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.8.0&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;2.22.1&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.2.2&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;2.5.2&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;2.8.2&lt;/version&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">      &lt;/plugins&gt;</span><br><span class="line">    &lt;/pluginManagement&gt;</span><br><span class="line">  &lt;/build&gt;</span><br><span class="line">&lt;/project&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>对于JSON的浅薄理解</title>
    <url>/2022/02/20/SpringMVC%E5%AF%B9%E4%BA%8EJson%E7%9A%84%E6%B5%85%E8%96%84%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="对于JSON的浅薄理解"><a href="#对于JSON的浅薄理解" class="headerlink" title="对于JSON的浅薄理解"></a>对于JSON的浅薄理解</h1><p>后端如果使用java写，后端数据的类型是基本数据类型加上自己创建的应用类型</p>
<p>前端使用的数据类型，并不存在数据类型 没有特定的规定。</p>
<p>前端和后端的数据怎么正确传输？</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/02/4e34ac4996977102.jpg" alt="JSON的作用"> </p>
<p>json：</p>
<ul>
<li>是一种轻量级的数据交换格式</li>
<li>采用完全独立于编程语言的文本格式</li>
<li>JSON内有键值对的向欧盟和瑟吉欧</li>
</ul>
<p>JSON不是编程语言，是传递数据的格式，，对于JSON的使用，需要JSON的解析工具。</p>
<p>常用的JSON解析工具有两个：JackSon和FastJson</p>
<h2 id="jackSon的使用"><a href="#jackSon的使用" class="headerlink" title="jackSon的使用"></a>jackSon的使用</h2><p>这里我们依旧采用应用的方式来讲解：</p>
<p>JSON的方法经常用的就是把java转化成String然后传递给前端。</p>
<p>使用JackSon需要导入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.13.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>创建一个SpringMVC程序，过程如这篇博客： <a href="https://dwx-tx.github.io/2022/02/19/SpringMVCHelloSpringMVC/">HelloSpringMVC | dwx-tx的小天地</a> </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br></pre></td></tr></table></figure>

<p>这就能保证return 不再是重定向，而是将值返回到前端。</p>
<p>这就不难解释，我在写自己的项目的时候，能够将文件直接返回到前端。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">JackSon</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">       User user = <span class="keyword">new</span> User(<span class="string">&quot;dwx&quot;</span>, <span class="number">1900</span>, <span class="number">19</span>);</span><br><span class="line">       <span class="keyword">return</span> user.toString();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>json的基本原理就是将对象转化成一个字符串然后返回到去前端</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/h1&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">JackSon</span><span class="params">(Model model)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="string">&quot;dwx&quot;</span>, <span class="number">1900</span>, <span class="number">19</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用JSON</span></span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        String s = mapper.writeValueAsString(user);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>使用JSON，JSON不仅仅可以作用于一个对象，也能作用于LIST</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/h1&quot;)</span></span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">JackSon</span><span class="params">(Model model)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line"></span><br><span class="line">       User user = <span class="keyword">new</span> User(<span class="string">&quot;dwx&quot;</span>, <span class="number">1900</span>, <span class="number">19</span>);</span><br><span class="line">       User user1 = <span class="keyword">new</span> User(<span class="string">&quot;dwx1&quot;</span>, <span class="number">1900</span>, <span class="number">19</span>);</span><br><span class="line">       User user2 = <span class="keyword">new</span> User(<span class="string">&quot;dwx2&quot;</span>, <span class="number">1900</span>, <span class="number">19</span>);</span><br><span class="line"></span><br><span class="line">       List&lt;User&gt; UserList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       UserList.add(user);</span><br><span class="line">       UserList.add(user1);</span><br><span class="line">       UserList.add(user2);</span><br><span class="line">       <span class="comment">//使用JSON</span></span><br><span class="line">       ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">       String s = mapper.writeValueAsString(UserList);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> s;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h2 id="JSON中文乱码问题"><a href="#JSON中文乱码问题" class="headerlink" title="JSON中文乱码问题"></a>JSON中文乱码问题</h2><p>对于JSON的乱码，使用过滤器无法解决这个问题，但是JSON给出了解决方法</p>
<p><strong>使用注解解决</strong></p>
<p>在<code>@RequestMappering</code>中有一个<code>produces</code>属性，我们可以通过这个属性来实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/h1&quot;,produces = &quot;application/json;charset-utf-8&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">JackSon</span><span class="params">(Model model)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="string">&quot;党文轩&quot;</span>, <span class="number">1900</span>, <span class="number">19</span>);</span><br><span class="line">        User user1 = <span class="keyword">new</span> User(<span class="string">&quot;德行1&quot;</span>, <span class="number">1900</span>, <span class="number">19</span>);</span><br><span class="line">        User user2 = <span class="keyword">new</span> User(<span class="string">&quot;等我下&quot;</span>, <span class="number">1900</span>, <span class="number">19</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; UserList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        UserList.add(user);</span><br><span class="line">        UserList.add(user1);</span><br><span class="line">        UserList.add(user2);</span><br><span class="line">        <span class="comment">//使用JSON</span></span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        String s = mapper.writeValueAsString(UserList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里的问题在于，这个注释可能会重写很多遍，因此SpringMVC提供了在Springxml文件中配置的方法解决这个问题</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;objectMapper&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;failOnEmptyBeans&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>固定格式，不需要做任何的更改</strong></p>
<h2 id="FastJson"><a href="#FastJson" class="headerlink" title="FastJson"></a>FastJson</h2><p>FASTJSON是阿里自己的JSON编译器，但是由于他的功能和我们使用的JackSon差不多，这里我们就不讲了</p>
<p>可以参考这个博客： <a href="https://blog.csdn.net/codershamo/article/details/51994720?ops_request_misc=&request_id=&biz_id=102&utm_term=fastjson&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-2-51994720.first_rank_v2_pc_rank_v29&spm=1018.2226.3001.4187"> fastjson的基本使用方法</a> </p>
]]></content>
  </entry>
  <entry>
    <title>SpringMVC解决JSON乱码</title>
    <url>/2022/03/05/SpringMVC%E8%A7%A3%E5%86%B3JSON%E4%B9%B1%E7%A0%81/</url>
    <content><![CDATA[<h1 id="SpringMVC解决JSON乱码"><a href="#SpringMVC解决JSON乱码" class="headerlink" title="SpringMVC解决JSON乱码"></a>SpringMVC解决JSON乱码</h1><p>在前后端的交互中可能会因为两者的编码类型不同而差生不同的乱码，正常情况下的乱码</p>
<h2 id="一般情况下的乱码"><a href="#一般情况下的乱码" class="headerlink" title="一般情况下的乱码"></a>一般情况下的乱码</h2><p>普通情况下的中文乱码是生僻字加符号的形式</p>
<p>这是解决乱码的方式是在Tomact上加上<code>-Dfile.encoding=UTF-8</code>在VM option中加</p>
<p>在web.xml中加上过滤器</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="JSON乱码"><a href="#JSON乱码" class="headerlink" title="JSON乱码"></a>JSON乱码</h2><p>由于现在是前后盾分离时代，前后端的数据交互是通过JSON这种超文本形式进行的，因此JSON也可能出现中文乱码问题</p>
<p><strong>JSON乱码的特点：</strong>JSON乱码很有特点 是几个<code>????</code>组成的</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/03/81a4ae2a0d9cfb5c.jpg"> </p>
<p>JSON乱码在springMVC框架下的更改 只需要把RequestMapping修改成以下格式就行</p>
<p><code>@RequestMapping(value = &quot;enroll&quot;,produces = &quot;application/json;charset=utf-8&quot;)</code></p>
]]></content>
  </entry>
  <entry>
    <title>System类</title>
    <url>/2021/12/16/System%E7%B1%BB/</url>
    <content><![CDATA[<p><strong>System类的常用方法</strong></p>
<table>
<thead>
<tr>
<th>方法说明</th>
<th>功能描述</th>
</tr>
</thead>
<tbody><tr>
<td>static void exit(int status)</td>
<td>该方法用来终止当前正在运行的java虚拟机，其中参数static表示状态码，若状态码非0，则表示异常终止</td>
</tr>
<tr>
<td>static void gc()</td>
<td>运行垃圾回收器，并对垃圾进行回收（只是提醒虚拟机进行回收，实际不知道是否真的回收）</td>
</tr>
<tr>
<td>static native long currentTimeMillis()</td>
<td>返回以毫秒为单位的当前时间</td>
</tr>
<tr>
<td>static void arraycopy(Object src,int srcPos,Object dest,int destPos,int length)</td>
<td>从src引用的指定源数组拷贝到dest引用的数组，拷贝从指定的位置开始，到目标数组的指定位置结束</td>
</tr>
<tr>
<td>static Properties getProperties()</td>
<td>取得当前的系统属性</td>
</tr>
<tr>
<td>static String getProperty(String key)</td>
<td>获取指定键描述的系统属性</td>
</tr>
</tbody></table>
<h2 id="getProprety-方法"><a href="#getProprety-方法" class="headerlink" title="getProprety()方法"></a>getProprety()方法</h2><p>getProprety方法用于获取当前系统的全部属性，该方法会返回一个Propreties对象，其中封装了系统的所有属性，这些属性是以键值对的形式存在。</p>
<p><strong>代码示例：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package page03;</span><br><span class="line"></span><br><span class="line">import java.util.Properties;</span><br><span class="line">import java.util.Set;</span><br><span class="line"></span><br><span class="line">public class System01 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Properties pr = System.getProperties();</span><br><span class="line">        System.out.println(pr);</span><br><span class="line">        Set&lt;String&gt;propertyNames = pr.stringPropertyNames();</span><br><span class="line">        for(String key:propertyNames)&#123;</span><br><span class="line">            String value = System.getProperty(key);</span><br><span class="line">            System.out.println(key+&quot;----&gt;&quot;+value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="currentTimeMills"><a href="#currentTimeMills" class="headerlink" title="currentTimeMills()"></a>currentTimeMills()</h2><p>currentTimeMills()方法返回一个long类型的值,表示当时时间与1970年1月1日0点0分0秒之间的差，单位是毫秒，通常也将该值称作时间戳。</p>
<p>两个时间戳之差能够求出程序的运行时间</p>
<p><strong>代码实例:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class currentTimeMills01 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        long startTime = System.currentTimeMillis();</span><br><span class="line">        int  sum=0;</span><br><span class="line">        for(int i=0;i&lt;1000000000;i++)&#123;</span><br><span class="line">            sum=sum+i;</span><br><span class="line">        &#125;</span><br><span class="line">        long endTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(&quot;程序的运行时间为：&quot;+(endTime-startTime)+&quot;毫秒&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="arraycopy-Object-src-int-srcPos-Object-dest-int-destPos-int-length"><a href="#arraycopy-Object-src-int-srcPos-Object-dest-int-destPos-int-length" class="headerlink" title="arraycopy(Object src,int srcPos,Object dest,int destPos,int length)"></a>arraycopy(Object src,int srcPos,Object dest,int destPos,int length)</h2><ul>
<li>src：表示源数组</li>
<li>dest：表示目标数组</li>
<li>srcPos：表示原数组中拷贝元素的起始位置</li>
<li>destPos：表示拷贝到目标元素的起始位置</li>
<li>length：表示拷贝元素的个数</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>为banksystem增加一个用户注册操作</title>
    <url>/2021/12/16/bankSystem%E8%A1%A5%E5%85%85/</url>
    <content><![CDATA[<h2 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h2><h4 id="enroll界面"><a href="#enroll界面" class="headerlink" title="enroll界面"></a>enroll界面</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: 2021/12/7</span><br><span class="line">  Time: 22:32</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;注册&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        body&#123;background-color: #F5DEB3;&#125;</span><br><span class="line">        div&#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 200px;</span><br><span class="line">            left: 580px;</span><br><span class="line">            border-radius: inherit;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--对于祖册功能 其实就是一个表单--&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;注册界面&lt;/h1&gt;</span><br><span class="line">    &lt;form action=&quot;login&quot; method=&quot;post&quot;&gt;</span><br><span class="line">        &lt;h2&gt;请输入用户id:&lt;input type=&quot;text&quot; name=&quot;id&quot;/&gt;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;请输入密码:&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;input type=&quot;text&quot; name=&quot;password&quot;&gt;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;请输入用户姓名:&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/h2&gt;</span><br><span class="line">        &lt;input type=&quot;reset&quot; value=&quot;重置&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;input type=&quot;submit&quot; value=&quot;enroll&quot; name=&quot;method&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>enrollsuccess界面</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: 2021/11/30</span><br><span class="line">  Time: 9:41</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;注册成功&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=&quot;login.jsp&quot;&gt;&lt;h1&gt;注册成功，请点击重新登录&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>enrollError界面</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: 2021/11/30</span><br><span class="line">  Time: 9:42</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;注册失败&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=&quot;login.jsp&quot;&gt;&lt;h1&gt;注册失败，用户ID已存在，请点击重新注册&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h2><p><strong>userDao层</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">   public boolean enroll(String ID, String password, String userName) throws SQLException &#123;</span><br><span class="line">       //预编译sql 在预编译SQL前 必须判断是否已经有人使用过这个ID了 因为这个银行操作系统不可能出现相同的id</span><br><span class="line">       //先通过查询 岔开是否数据库里已经有个这个ID</span><br><span class="line">       PreparedStatement pstm = null;</span><br><span class="line">       ResultSet resultSet = null;</span><br><span class="line">       boolean flag = false;</span><br><span class="line">       //对于刚开户的用户 其余额理应是0</span><br><span class="line">       double money = 0;</span><br><span class="line">       //预编译SQL</span><br><span class="line">       String sql = &quot;SELECT * FROM bank_system WHERE ID = ?&quot;;</span><br><span class="line">       //编写这个Sql查询需要的参数</span><br><span class="line">       Object[] Params = &#123;ID&#125;;</span><br><span class="line">       //调用BaseDao层进行查询，查看查询结果</span><br><span class="line">       Connection connection ;</span><br><span class="line">       connection = BaseDao.getConnection();</span><br><span class="line">       try &#123;</span><br><span class="line">           resultSet = BaseDao.exectue(connection, pstm, resultSet, sql, Params);</span><br><span class="line">       &#125; catch (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       //如果查询结果不为空 那么说明在数据库里已经存在了这个数据 直接返回创建失败</span><br><span class="line">       if (resultSet.next()) &#123;</span><br><span class="line">           return false;</span><br><span class="line">       &#125; else &#123;</span><br><span class="line">           //如果没有ID，就继续向下执行</span><br><span class="line">           //编写创建成员的sql</span><br><span class="line">           PreparedStatement pstm1 = null;</span><br><span class="line">           Connection connection1 ;</span><br><span class="line">           connection1 = BaseDao.getConnection();</span><br><span class="line">           //预编译sql</span><br><span class="line">           String sql1 = &quot;INSERT INTO bank_system(ID,PASSWORD,username,money)\n&quot; +</span><br><span class="line">                   &quot;VALUES(?,?,?,?)&quot;;</span><br><span class="line">           Object[] params = &#123;ID, password, userName, money&#125;;</span><br><span class="line">           //调用BaseDao来操作数据</span><br><span class="line">           try &#123;</span><br><span class="line">               int flag1 = BaseDao.exectue(connection1, pstm1, sql1, params);</span><br><span class="line">               //如果返回非0 这说明创建成功</span><br><span class="line">               if (flag1 != 0) &#123;</span><br><span class="line">                   flag = true;</span><br><span class="line">               &#125; else &#123;</span><br><span class="line">                   flag = false;</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &#125; catch (Exception e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       //在使用晚资源后 及时关闭所有资源</span><br><span class="line">       try &#123;</span><br><span class="line">           BaseDao.closeResource(connection,pstm,resultSet);</span><br><span class="line">       &#125; catch (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(flag);</span><br><span class="line">       return flag;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p><strong>userService层</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">   public boolean enroll(String ID, String password, String username) &#123;</span><br><span class="line">       boolean flag = false;</span><br><span class="line">       System.out.println(&quot;执行到了service层&quot;);</span><br><span class="line">       userDaoimp userDaoimp = new userDaoimp();</span><br><span class="line">       try &#123;</span><br><span class="line">           flag = userDaoimp.enroll(ID, password, username);</span><br><span class="line">       &#125; catch (SQLException throwables) &#123;</span><br><span class="line">           throwables.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(&quot;service&quot;);</span><br><span class="line">       return flag;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p><strong>servlet层</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public void enroll(HttpServletRequest req,HttpServletResponse resp)&#123;</span><br><span class="line">        boolean flag = false;</span><br><span class="line">        String ID = req.getParameter(&quot;id&quot;);</span><br><span class="line">        String password = req.getParameter(&quot;password&quot;);</span><br><span class="line">        String username = req.getParameter(&quot;username&quot;);</span><br><span class="line">        System.out.println(ID);</span><br><span class="line">        System.out.println(password);</span><br><span class="line">        System.out.println(username);</span><br><span class="line">        userServiceImp userServiceImp = new userServiceImp();</span><br><span class="line">        flag = userServiceImp.enroll(ID,password,username);</span><br><span class="line">        if (flag)&#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                resp.sendRedirect(&quot;enrollsuccess.jsp&quot;);</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                resp.sendRedirect(&quot;enrollerror.jsp&quot;);</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;public void enroll(HttpServletRequest req,HttpServletResponse resp)&#123;</span><br><span class="line">        boolean flag = false;</span><br><span class="line">        String ID = req.getParameter(&quot;id&quot;);</span><br><span class="line">        String password = req.getParameter(&quot;password&quot;);</span><br><span class="line">        String username = req.getParameter(&quot;username&quot;);</span><br><span class="line">        System.out.println(ID);</span><br><span class="line">        System.out.println(password);</span><br><span class="line">        System.out.println(username);</span><br><span class="line">        userServiceImp userServiceImp = new userServiceImp();</span><br><span class="line">        flag = userServiceImp.enroll(ID,password,username);</span><br><span class="line">        if (flag)&#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                resp.sendRedirect(&quot;enrollsuccess.jsp&quot;);</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                resp.sendRedirect(&quot;enrollerror.jsp&quot;);</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/bankSystem/</url>
    <content><![CDATA[<hr>
<h2 id="title-java课程大作业-银行操作系统"><a href="#title-java课程大作业-银行操作系统" class="headerlink" title=" title: java课程大作业 银行操作系统"></a> title: java课程大作业 银行操作系统</h2><h2 id="使用javaweb-实现前端和数据库的交互"><a href="#使用javaweb-实现前端和数据库的交互" class="headerlink" title="使用javaweb 实现前端和数据库的交互"></a>使用javaweb 实现前端和数据库的交互</h2><h3 id="前端资源"><a href="#前端资源" class="headerlink" title="前端资源"></a>前端资源</h3><p>我自己写的前端资源是十分简单的 简约的 以HTML为主 简单的css 并没有JavaScript。使用的是.jsp</p>
<p>来实现前后端交互</p>
<h4 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h4><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">8</span>:<span class="number">59</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;login&lt;/title&gt;</span><br><span class="line">    &lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        h1&#123;align-content: center;text-align: center;&#125;</span><br><span class="line">        body&#123;background-color:wheat&#125;</span><br><span class="line">        #login&#123;</span><br><span class="line"></span><br><span class="line">            width: 280px;</span><br><span class="line">            height: auto;</span><br><span class="line">            background-color:wheat;</span><br><span class="line"></span><br><span class="line">            position: fixed;</span><br><span class="line">            top:  260px;</span><br><span class="line">            left: 600px;</span><br><span class="line"></span><br><span class="line">            border-width: 10px;</span><br><span class="line">            border-style: solid;</span><br><span class="line">            border-color:wheat;</span><br><span class="line">        &#125;</span><br><span class="line">        #reset&#123;</span><br><span class="line">            position: fixed;</span><br><span class="line">            top: 400px;</span><br><span class="line">            left: 620px;</span><br><span class="line">        &#125;</span><br><span class="line">        #login1&#123;</span><br><span class="line">            position: fixed;</span><br><span class="line">            top: 400px;</span><br><span class="line">            left: 820px;</span><br><span class="line">        &#125;</span><br><span class="line">        #title&#123;</span><br><span class="line">            position: fixed;</span><br><span class="line">            top: 180px;</span><br><span class="line">            left: 640px;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--action接的是登录的servlet--&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h1 id=<span class="string">&quot;title&quot;</span>&gt;银行系统登录&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;login&quot;</span>&gt;</span><br><span class="line">        &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;login&quot;</span>&gt;</span><br><span class="line">            &lt;h4&gt;银行卡号:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;id&quot;</span>/&gt;&lt;br/&gt;&lt;/h4&gt;</span><br><span class="line">            &lt;h4&gt;银行密码:&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span>/&gt;&lt;br/&gt;&lt;/h4&gt;</span><br><span class="line">            &lt;input id=<span class="string">&quot;login1&quot;</span> type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;login&quot;</span> name=<span class="string">&quot;method&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;input id=<span class="string">&quot;reset&quot;</span> type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>登录失败页面</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">9</span>:<span class="number">22</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;ERROR&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;login.jsp&quot;</span>&gt;&lt;h1&gt;用户名或密码错误，点击重新登录&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="操作页面"><a href="#操作页面" class="headerlink" title="操作页面"></a>操作页面</h4><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">9</span>:<span class="number">25</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;操作界面&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            background-color: #F5DEB3;</span><br><span class="line">        &#125;</span><br><span class="line">        #center&#123;</span><br><span class="line">            width: 260px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 200px;</span><br><span class="line">            left: 580px;</span><br><span class="line">            border-radius: inherit;</span><br><span class="line">        &#125;</span><br><span class="line">        .button&#123;</span><br><span class="line">            align-self: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--头部的div--&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;head&quot;</span>&gt;</span><br><span class="line">    &lt;h1 align=<span class="string">&quot;center&quot;</span>&gt;操作界面&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;login&quot;</span>&gt;</span><br><span class="line">        &lt;h2 align=<span class="string">&quot;center&quot;</span>&gt;欢迎您$&#123;username&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;in.jsp&quot;</span>&gt;&lt;input type=<span class="string">&quot;button&quot;</span>  value=<span class="string">&quot;存钱&quot;</span>&gt;&lt;/a&gt;&lt;br/&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;get.jsp&quot;</span>&gt;&lt;input type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;取钱&quot;</span>&gt;&lt;/a&gt;&lt;br/&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;view.jsp&quot;</span>&gt;&lt;input type=<span class="string">&quot;button&quot;</span>  value=<span class="string">&quot;查看余额&quot;</span>&gt;&lt;br/&gt;&lt;/a&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;changepassword.jsp&quot;</span>&gt;&lt;input type=<span class="string">&quot;button&quot;</span>  value=<span class="string">&quot;修改密码&quot;</span>&gt;&lt;br/&gt;&lt;/a&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span>  name=<span class="string">&quot;method&quot;</span> value=<span class="string">&quot;layout&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="取钱页面"><a href="#取钱页面" class="headerlink" title="取钱页面"></a>取钱页面</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: 2021/11/30</span><br><span class="line">  Time: 9:26</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;取钱操作&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            background-color: #F5DEB3;</span><br><span class="line">        &#125;</span><br><span class="line">        div&#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            background-color: #F5DEB3;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 200px;</span><br><span class="line">            left: 580px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;取款&lt;/h1&gt;</span><br><span class="line">    &lt;form method=&quot;post&quot; action=&quot;login&quot;&gt;</span><br><span class="line">        &lt;h2&gt;取钱金额:&lt;input type=&quot;text&quot; name=&quot;moneyin&quot;&gt;&lt;/h2&gt;</span><br><span class="line">        &lt;input type=&quot;reset&quot; value=&quot;重置&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;input id=&quot;click&quot; type=&quot;submit&quot; name=&quot;method&quot; value=&quot;get&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>取钱失败页面 / 取钱成功页面</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">9</span>:<span class="number">42</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;取钱失败&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;service.jsp&quot;</span>&gt;&lt;h1&gt;取钱失败，余额不足，点击跳转到操作页面&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">9</span>:<span class="number">41</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;取钱成功&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;service.jsp&quot;</span>&gt;&lt;h1&gt;取钱成功，点击跳转到操作页面&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="存钱界面"><a href="#存钱界面" class="headerlink" title="存钱界面"></a>存钱界面</h4><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">16</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;存钱操作&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            background-color: #F5DEB3;</span><br><span class="line">        &#125;</span><br><span class="line">        div&#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            background-color: #F5DEB3;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 200px;</span><br><span class="line">            left: 580px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;存款&lt;/h1&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;login&quot;</span>&gt;</span><br><span class="line">        &lt;h2&gt;存储金额:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;moneyin&quot;</span>&gt;&lt;/h2&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;moneyin&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;input id=<span class="string">&quot;click&quot;</span> type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;method&quot;</span> value=<span class="string">&quot;in&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">16</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;存钱操作&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            background-color: #F5DEB3;</span><br><span class="line">        &#125;</span><br><span class="line">        div&#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            background-color: #F5DEB3;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 200px;</span><br><span class="line">            left: 580px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;存款&lt;/h1&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;login&quot;</span>&gt;</span><br><span class="line">        &lt;h2&gt;存储金额:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;moneyin&quot;</span>&gt;&lt;/h2&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;moneyin&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;input id=<span class="string">&quot;click&quot;</span> type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;method&quot;</span> value=<span class="string">&quot;in&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>存钱成功界面/存钱失败页面</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">22</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;存钱成功&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;service.jsp&quot;</span>&gt;&lt;h1&gt;存钱成功，点击跳转到操作页面&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">23</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;存钱失败&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;service.jsp&quot;</span>&gt;&lt;h1&gt;存钱失败，点击跳转到操作页面&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="修改密码页面"><a href="#修改密码页面" class="headerlink" title="修改密码页面"></a>修改密码页面</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: 2021/11/30</span><br><span class="line">  Time: 10:45</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;修改密码&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            background-color: #FAEBD7;</span><br><span class="line">        &#125;</span><br><span class="line">        div&#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 200px;</span><br><span class="line">            left: 600px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;修改密码&lt;/h1&gt;</span><br><span class="line">    &lt;form action=&quot;login&quot; method=&quot;post&quot;&gt;</span><br><span class="line">        &lt;h3&gt;请输入旧密码:&lt;input type=&quot;text&quot; name=&quot;oldpassword&quot;&gt;&lt;/h3&gt;</span><br><span class="line">        &lt;h3&gt;请输入新密码:&lt;input type=&quot;text&quot; name=&quot;newpassword&quot;&gt;&lt;/h3&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;重置&quot;/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;input type=&quot;submit&quot; value=&quot;change&quot; name=&quot;method&quot;/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>修改密码成功页面 / 修改密码失败页面</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">52</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;修改密码成功&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;login.jsp&quot;</span>&gt;&lt;h1&gt;修改密码成功，请点击重新登陆&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">51</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;修改密码失败&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;changepassword.jsp&quot;</span>&gt;&lt;h1&gt;旧密码错误，点击重新输入&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="查看余额页面"><a href="#查看余额页面" class="headerlink" title="查看余额页面"></a>查看余额页面</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Lenovo</span><br><span class="line">  Date: 2021/11/30</span><br><span class="line">  Time: 10:11</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;查看存款&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            background-color: antiquewhite;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        div&#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 200px;</span><br><span class="line">            left: 600px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;查看存款&lt;/h1&gt;</span><br><span class="line">    &lt;form action=&quot;login&quot; method=&quot;post&quot;&gt;</span><br><span class="line">        &lt;h2&gt;客户$&#123;username&#125;，您的存款数目为$&#123;money&#125;元&lt;/h2&gt;&lt;br/&gt;</span><br><span class="line">        &lt;a href=&quot;service.jsp&quot;&gt;&lt;h4&gt;点击返回到操作页面&lt;/h4&gt;&lt;/a&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h2><h3 id="所有的依赖"><a href="#所有的依赖" class="headerlink" title="所有的依赖"></a>所有的依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>BankSystem<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>BankSystem Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql依赖--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.wisdom-framework/mysql-connector-java --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.taglibs/taglibs-standard-impl --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>taglibs-standard-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>xml-apis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xml-apis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.04<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.taglibs/taglibs-standard-impl --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>taglibs-standard-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>BankSystem<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="string"><span class="tag">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">metadata-complete</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>/login.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.dwx.servlet.customerServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="后端代码-1"><a href="#后端代码-1" class="headerlink" title="后端代码"></a>后端代码</h4><p><strong>DAO层</strong></p>
<p>basedao</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是一个最基础的Dao类 是用来和数据库进行交互的</span></span><br><span class="line"><span class="comment">//通过分析 我们需要用到的jdbc操作 包括 查 改</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取和数据库的联结</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String driver;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String username;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String password;</span><br><span class="line">    <span class="comment">//通过重定向 到db.propertries中获取到数据</span></span><br><span class="line">    <span class="comment">//定义的static参数 通过static代码块 对其进行初始化</span></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        InputStream stream = BaseDao.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load(stream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">        url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//与数据库进行链接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, username, password);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建用于改的execute</span></span><br><span class="line">    <span class="comment">//编写查询公共类</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultSet <span class="title">exectue</span><span class="params">(Connection connection, PreparedStatement prepareStatement, ResultSet resultSet, String sql, Object[] params)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            prepareStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">//不清楚这里的prepareStatement与setStatement有啥区别</span></span><br><span class="line">            <span class="comment">//prepareStream是预编译 是解决数据库泄露问题时讲过的</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                prepareStatement.setObject(i + <span class="number">1</span>, params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        resultSet = prepareStatement.executeQuery();</span><br><span class="line">        <span class="keyword">return</span> resultSet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增删改公共方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">exectue</span><span class="params">(Connection connection,PreparedStatement prepareStatement,String sql,Object[] params)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            prepareStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">//不清楚这里的prepareStatement与setStatement有啥区别</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;params.length;i++)&#123;</span><br><span class="line">                prepareStatement.setObject(i+<span class="number">1</span>,params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> updataRows = prepareStatement.executeUpdate();</span><br><span class="line">        <span class="keyword">return</span>  updataRows;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">closeResource</span><span class="params">(Connection connection,PreparedStatement preparedStatement,ResultSet resultSet)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag=<span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (resultSet!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            resultSet.close();</span><br><span class="line">            resultSet = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (preparedStatement!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            preparedStatement.close();</span><br><span class="line">            preparedStatement=<span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            connection.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>monyDao</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.dwx.dao.money;</span><br><span class="line"></span><br><span class="line">import java.sql.SQLException;</span><br><span class="line"></span><br><span class="line">public interface moneyDao &#123;</span><br><span class="line">    //对于金钱的操作有三种 产看余额 存款 取款</span><br><span class="line">    //查看余额 就是一个查询语句 返回值是int类型 money</span><br><span class="line">    //通过 ID 和 Password来获得余额</span><br><span class="line">    double getMoney(String ID,String password) throws SQLException;</span><br><span class="line">    //存取款 ID password moneyIn</span><br><span class="line">    boolean changeMoney(String ID,String password,double money,double moneyIn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>moneyDaoImp</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.dao.money;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.dao.BaseDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">moneyDaoImp</span> <span class="keyword">implements</span> <span class="title">moneyDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getMoney</span><span class="params">(String ID, String password)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//先进行数据库链接</span></span><br><span class="line">        Connection connection;</span><br><span class="line">        connection = BaseDao.getConnection();</span><br><span class="line">        <span class="keyword">double</span> money=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//写预编译sql</span></span><br><span class="line">        PreparedStatement pstm=<span class="keyword">null</span>;</span><br><span class="line">        String sql = <span class="string">&quot;SELECT money FROM bank_system WHERE ID = ? AND Password = ?&quot;</span>;</span><br><span class="line">        <span class="comment">//编写一个参数集 用来传递参数</span></span><br><span class="line">        Object[] param = &#123;ID,password&#125;;</span><br><span class="line">        ResultSet result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//编写一个resul来获得查询的返回值</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = BaseDao.exectue(connection,pstm,result,sql,param);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//得到了result</span></span><br><span class="line">        <span class="keyword">if</span> (result.next())&#123;</span><br><span class="line">            money = result.getDouble(<span class="string">&quot;money&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">changeMoney</span><span class="params">(String ID, String password,<span class="keyword">double</span> money,<span class="keyword">double</span> moneyIn)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (money+moneyIn&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">//创建连接</span></span><br><span class="line">        Connection connection;</span><br><span class="line">        connection = BaseDao.getConnection();</span><br><span class="line">        <span class="comment">//编写预编译SQL</span></span><br><span class="line">        <span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line">        PreparedStatement pstm = <span class="keyword">null</span>;</span><br><span class="line">        String sql = <span class="string">&quot;UPDATE bank_system SET money = ? WHERE ID = ? AND Password = ?&quot;</span>;</span><br><span class="line">        <span class="comment">//编写param表示参数集</span></span><br><span class="line">        <span class="comment">//这里 用money + moneyIn表示改变后的值 若moneyIn为正 则就是存储 要是负 则是取钱</span></span><br><span class="line">        Object[] param = &#123;money+moneyIn,ID,password&#125;;</span><br><span class="line">        <span class="comment">//调用Base进行改值</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            r = BaseDao.exectue(connection,pstm,sql,param);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (r!=<span class="number">0</span>)&#123;</span><br><span class="line">            flag=<span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;Dao&quot;</span>+flag);</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>userDao</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.dao.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这个抽象类 主要是对user进行操作 如 修改密码 增加用户 删除用户 等等</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">userDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//修改密码 修改密码需要用到 ID 和 old_password 进行比较后才能修改</span></span><br><span class="line">    <span class="comment">//修改密码 返回布尔类型 表示是否修改成功</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">changePassword</span><span class="params">(String ID,String oldPassword,String newPassword)</span></span>;</span><br><span class="line">    <span class="comment">//用户登录 就是去数据库查询是否有此人 如有此人 则返回username 需要获得ID，password</span></span><br><span class="line">    <span class="function">String <span class="title">login</span><span class="params">(String ID,String password)</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>userDaoImp</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.dao.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.dao.BaseDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userDaoimp</span> <span class="keyword">implements</span> <span class="title">userDao</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">changePassword</span><span class="params">(String ID, String oldPassword,String newPassword)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获得链接</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> resultSet = <span class="number">0</span>;</span><br><span class="line">        Connection connection;</span><br><span class="line">        connection = BaseDao.getConnection();</span><br><span class="line">        <span class="comment">//预编译sql</span></span><br><span class="line">        PreparedStatement pstm = <span class="keyword">null</span>;</span><br><span class="line">        String sql = <span class="string">&quot;UPDATE bank_system SET Password=? WHERE ID=? AND Password=?&quot;</span>;</span><br><span class="line">        <span class="comment">//设置sql要插入的参数</span></span><br><span class="line">        Object[] param = &#123;newPassword,ID,oldPassword&#125;;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            resultSet = BaseDao.exectue(connection,pstm,sql,param);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resultSet!=<span class="number">0</span>)&#123;</span><br><span class="line">            flag=<span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭开启的资源</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BaseDao.closeResource(connection,pstm,<span class="keyword">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String ID, String password)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        Connection connection;</span><br><span class="line">        <span class="comment">//注意 不要忘记connection</span></span><br><span class="line">        connection = BaseDao.getConnection();</span><br><span class="line">        String username=<span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//预编译一个SQL 只需要一个SELECT</span></span><br><span class="line">        PreparedStatement pstm=<span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//准备一个结果集 这个查询是要获得结果集的</span></span><br><span class="line">        String sql = <span class="string">&quot;SELECT * From bank_system WHERE ID = ? AND Password = ?&quot;</span>;</span><br><span class="line">        <span class="comment">//创建一个param参数</span></span><br><span class="line">        Object[] param = &#123;ID,password&#125;;</span><br><span class="line">        <span class="comment">//用一个result来存储查询到的结果集</span></span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            resultSet = BaseDao.exectue(connection,pstm,resultSet,sql,param);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">assert</span> resultSet != <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (resultSet.next())&#123;</span><br><span class="line">            username = resultSet.getString(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="POJO"><a href="#POJO" class="headerlink" title="POJO"></a>POJO</h4><p>映射类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"><span class="comment">//这个类是映射到数据库中bank_system这个表</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">bank_system</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创造几个对象 对应数据库中的几个参数</span></span><br><span class="line">    <span class="comment">//设置的都是私有对象 需要通过set和get获取值</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ID;</span><br><span class="line">    <span class="keyword">private</span> String Password;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> money;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setID</span><span class="params">(<span class="keyword">int</span> ID)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ID = ID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        Password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMoney</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(<span class="keyword">int</span> money)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.money = money;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h4><p><strong>userservice</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.dwx.service.user;</span><br><span class="line">//对于用户的一些操作</span><br><span class="line"></span><br><span class="line">public interface userService &#123;</span><br><span class="line"></span><br><span class="line">    //修改用户的密码 修改密码需要得到并传递给dao层 ID（int） newPasswor(String) oldPasswor(String)</span><br><span class="line">    //返回值类型为 boolen</span><br><span class="line">     boolean  changePasswordService(String ID,String oldPassword,String newPassword);</span><br><span class="line">     //登录 需要给Dao ID Password 需要返回给test username</span><br><span class="line">    String login(String ID,String passWord);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>userserviceImp</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.service.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.dao.user.userDaoimp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userServiceImp</span> <span class="keyword">implements</span> <span class="title">userService</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">boolean</span> <span class="title">changePasswordService</span><span class="params">(String ID, String oldPassword, String newPassword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag;</span><br><span class="line">        userDaoimp daoimp = <span class="keyword">new</span> userDaoimp();</span><br><span class="line">        flag = daoimp.changePassword(ID,oldPassword,newPassword);</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String ID, String passWord)</span> </span>&#123;</span><br><span class="line">        String username = <span class="keyword">null</span>;</span><br><span class="line">        userDaoimp daoimp = <span class="keyword">new</span> userDaoimp();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            username = daoimp.login(ID,passWord);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="servlet层"><a href="#servlet层" class="headerlink" title="servlet层"></a>servlet层</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.service.money.moneyServiceImp;</span><br><span class="line"><span class="keyword">import</span> com.dwx.service.user.userServiceImp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">customerServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span>&#123;</span><br><span class="line">        String method = req.getParameter(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(method);</span><br><span class="line">        <span class="keyword">switch</span> (method) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;login&quot;</span>:</span><br><span class="line">                login(req, resp);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;get&quot;</span>:</span><br><span class="line">                getmoney(req, resp);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;in&quot;</span>:</span><br><span class="line">                insertmoney(req, resp);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;layout&quot;</span>:</span><br><span class="line">                logout(req, resp);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;change&quot;</span>:</span><br><span class="line">                changepassword(req, resp);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span>&#123;</span><br><span class="line">        String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        System.out.println(id);</span><br><span class="line">        String password = req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        System.out.println(password);</span><br><span class="line">        <span class="keyword">double</span> money;</span><br><span class="line">        <span class="comment">//用得到的数据进行联结</span></span><br><span class="line">        userServiceImp userServiceImp = <span class="keyword">new</span> userServiceImp();</span><br><span class="line">        moneyServiceImp moneyServiceImp = <span class="keyword">new</span> moneyServiceImp();</span><br><span class="line">        money = moneyServiceImp.getMoney(id,password);</span><br><span class="line">        <span class="comment">//登录</span></span><br><span class="line">        String username = userServiceImp.login(id,password);</span><br><span class="line">        <span class="comment">//如果登录成功就跳转到service.jsp页面</span></span><br><span class="line">        <span class="comment">//如果登陆失败 就跳转到error.jsp页面</span></span><br><span class="line">        <span class="keyword">if</span> (username==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resp.sendRedirect(<span class="string">&quot;error.jsp&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException ignored) &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//如果联结成功 就把用户名 账号 密码 都放到session里边 以便其他的程序使用</span></span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;id&quot;</span>,id);</span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;password&quot;</span>,password);</span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;username&quot;</span>,username);</span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;money&quot;</span>,money);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resp.sendRedirect(<span class="string">&quot;service.jsp&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getmoney</span><span class="params">(HttpServletRequest req,HttpServletResponse resp)</span></span>&#123;</span><br><span class="line">        <span class="comment">//经过登录操作 已经把id,password,money等数据都存放到session里了 需要的话直接去session里拿</span></span><br><span class="line">        String id = (String) req.getSession().getAttribute(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        String password = (String) req.getSession().getAttribute(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="keyword">double</span> money = (Double) req.getSession().getAttribute(<span class="string">&quot;money&quot;</span>);</span><br><span class="line">        System.out.println(id);</span><br><span class="line">        System.out.println(password);</span><br><span class="line">        System.out.println(money);</span><br><span class="line">        <span class="comment">//从前端获取要取出的数值 再去service层进行操作</span></span><br><span class="line">        <span class="keyword">double</span> moneyin = Double.parseDouble(req.getParameter(<span class="string">&quot;moneyin&quot;</span>));</span><br><span class="line">        <span class="comment">//设置一个flag来分辨是否取钱成功</span></span><br><span class="line">        <span class="keyword">boolean</span> flag;</span><br><span class="line">        moneyServiceImp moneyServiceImp = <span class="keyword">new</span> moneyServiceImp();</span><br><span class="line">        flag = moneyServiceImp.changeMoney(id,password,money,-moneyin);</span><br><span class="line">        <span class="comment">//如果取钱成功 跳转到取钱成功页面</span></span><br><span class="line">        <span class="comment">//取钱成功 及时更改session里的money的值</span></span><br><span class="line">        req.getSession().setAttribute(<span class="string">&quot;money&quot;</span>,moneyServiceImp.getMoney(id,password));</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resp.sendRedirect(<span class="string">&quot;getSuccess.jsp&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果取钱失败 跳转到取钱失败页面</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resp.sendRedirect(<span class="string">&quot;getError.jsp&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertmoney</span><span class="params">(HttpServletRequest req,HttpServletResponse resp)</span></span>&#123;</span><br><span class="line">        <span class="comment">//与取款一样 存款需要从session里边获取数值</span></span><br><span class="line">        String id = (String) req.getSession().getAttribute(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        String password = (String) req.getSession().getAttribute(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="keyword">double</span> money = (Double) req.getSession().getAttribute(<span class="string">&quot;money&quot;</span>);</span><br><span class="line">        <span class="comment">//再拿到前端输入的需要存款的数值</span></span><br><span class="line">        <span class="keyword">double</span> moneyin = Double.parseDouble(req.getParameter(<span class="string">&quot;moneyin&quot;</span>));</span><br><span class="line">        <span class="comment">//调用service层对数据进行操作哦</span></span><br><span class="line">        moneyServiceImp moneyServiceImp = <span class="keyword">new</span> moneyServiceImp();</span><br><span class="line">        <span class="comment">//设置一个布尔值 来判断是否操作成功</span></span><br><span class="line">        <span class="keyword">boolean</span> flag;</span><br><span class="line">        flag = moneyServiceImp.changeMoney(id,password,money,moneyin);</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            <span class="comment">//如果操作成功 跳转到存款成功页面 并且更新session中money的值</span></span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;money&quot;</span>,moneyServiceImp.getMoney(id,password));</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resp.sendRedirect(<span class="string">&quot;insuccess.jsp&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//如果没有成功 则跳转到存钱失败页面</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resp.sendRedirect(<span class="string">&quot;inError.jsp&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logout</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span>&#123;</span><br><span class="line">        <span class="comment">//退出操作</span></span><br><span class="line">        <span class="comment">//退出操作的具体思路就是 将session里的id和password都换成null并且跳转到登录页面</span></span><br><span class="line">        req.getSession().setAttribute(<span class="string">&quot;id&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">        req.getSession().setAttribute(<span class="string">&quot;password&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;login.jsp&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">changepassword</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span>&#123;</span><br><span class="line">        <span class="comment">//从session里获得数据</span></span><br><span class="line">        String id = (String) req.getSession().getAttribute(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        String password = (String) req.getSession().getAttribute(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="comment">//从前端获得数据</span></span><br><span class="line">        String passwordin = req.getParameter(<span class="string">&quot;oldpassword&quot;</span>);</span><br><span class="line">        System.out.println(passwordin);</span><br><span class="line">        String newpassword = req.getParameter(<span class="string">&quot;newpassword&quot;</span>);</span><br><span class="line">        System.out.println(newpassword);</span><br><span class="line">        <span class="comment">//如果前端获取的oldpassword与实际的password不同 跳转到Error页面</span></span><br><span class="line">        <span class="comment">//如果通过了 就往下继续执行</span></span><br><span class="line">        userServiceImp userServiceImp = <span class="keyword">new</span> userServiceImp();</span><br><span class="line">        <span class="comment">//创造一个布尔值来标记是否修改成功</span></span><br><span class="line">        <span class="keyword">boolean</span> flag;</span><br><span class="line">        flag = userServiceImp.changePasswordService(id,password,newpassword);</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//如果修改成功 就跳转到成功页面</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resp.sendRedirect(<span class="string">&quot;changesuccess.jsp&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//如果没成功就送到失败页面</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resp.sendRedirect(<span class="string">&quot;changeError.jsp&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>img</title>
    <url>/2021/12/16/fistblog/</url>
    <content><![CDATA[<h1 id="重新开始"><a href="#重新开始" class="headerlink" title="重新开始"></a>重新开始</h1><p>2021/12/16 21:29<br>博客重新开始</p>
]]></content>
  </entry>
  <entry>
    <title>抖音无水印视频获取(零门槛)</title>
    <url>/2021/12/20/getDOUYIN/</url>
    <content><![CDATA[<p>抖音视频无水印获取步骤</p>
<p>并没有写任何代码</p>
<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>1.edge浏览器 开启开发者模式（能够获取网页信息）</p>
<p>2.网页运行抖音</p>
<h2 id="步奏"><a href="#步奏" class="headerlink" title="步奏"></a>步奏</h2><p>1.用网页运行抖音</p>
<p>2.点击F12捕获网页信息</p>
<p><img src="/dwx-tx.github.io/2021/12/20/getDOUYIN/%5C1.png"></p>
<p>3.点击应用程序</p>
<p>4.点击媒体 如上图所示</p>
<p>5.点击媒体中的文件</p>
<p><img src="/dwx-tx.github.io/2021/12/20/getDOUYIN/%5C2.png"></p>
<p>6.点击下载 文件就下载了</p>
<p><img src="/dwx-tx.github.io/2021/12/20/getDOUYIN/%5C3.png"></p>
]]></content>
  </entry>
  <entry>
    <title>itext生成pdf</title>
    <url>/2022/05/15/itext%E7%94%9F%E6%88%90PDF/</url>
    <content><![CDATA[<h1 id="itext生成pdf"><a href="#itext生成pdf" class="headerlink" title="itext生成pdf"></a>itext生成pdf</h1><p>最近写了一个java后端生成pdf程序，因此我在这里提供自己生成pdf的一个策略。</p>
<p><strong>使用itext生成pdf</strong></p>
<h2 id="iText的依赖"><a href="#iText的依赖" class="headerlink" title="iText的依赖"></a>iText的依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itextpdf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itextpdf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itextpdf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itext-asian<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这两程序是都需要的，特别是第二个依赖，是itext能够使用字体的重要的依赖</p>
<h2 id="代码实践"><a href="#代码实践" class="headerlink" title="代码实践"></a>代码实践</h2><p><strong>学习参考</strong></p>
<p> <a href="https://www.docin.com/p-1415601116.html">iText中文帮助文档 - 豆丁网 (docin.com)</a> </p>
<p><strong>生成pdf的代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.g_hld1;</span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.g_hld2;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.text.*;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.text.Font;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.text.Rectangle;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.text.pdf.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是一个生成pdf的工具类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">pdfUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String,Object&gt; <span class="title">setPDF</span><span class="params">(String E,String I,String S,String N,String TT,String F,String J,String P,String csrul,String personalityProfile,String personalityDescription,String field,String careerStudent,String career)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream stream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="comment">//创建一个新的文档</span></span><br><span class="line">        <span class="comment">//创建一个空的文档并且设置文档的大小</span></span><br><span class="line">        Document document = <span class="keyword">new</span> Document(PageSize.A4);</span><br><span class="line"></span><br><span class="line">        PdfWriter.getInstance(document, stream);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//打开文档 准备添加数据</span></span><br><span class="line">        document.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加数据</span></span><br><span class="line">        <span class="comment">//创建字体 基本字体 字体需要不同定制都是以这个基础字体为基础的</span></span><br><span class="line">        BaseFont baseFont = BaseFont.createFont(<span class="string">&quot;STSongStd-Light&quot;</span>, <span class="string">&quot;UniGB-UCS2-H&quot;</span>, BaseFont.EMBEDDED);</span><br><span class="line">        <span class="comment">//固定格式部分</span></span><br><span class="line">        <span class="comment">//主标题</span></span><br><span class="line">        String T = <span class="string">&quot;MBTI职业性格测试报告&quot;</span>;</span><br><span class="line">        Paragraph Title = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        Title.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">23</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="comment">//居中</span></span><br><span class="line">        Title.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">        Title.add(T);</span><br><span class="line"></span><br><span class="line">        Title.setSpacingAfter(<span class="number">25</span>);</span><br><span class="line">        Title.setSpacingBefore(<span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//副标题</span></span><br><span class="line">        String t = <span class="string">&quot;你的性格类型是:&quot;</span>+csrul;</span><br><span class="line">        Paragraph title = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        title.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">12</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="comment">//居中</span></span><br><span class="line">        title.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">        title.add(t);</span><br><span class="line">        title.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        title.setSpacingBefore(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加百分比部分</span></span><br><span class="line">        String TT1 = E+<span class="string">&quot;%   外向(E) ---- 内向(I)  &quot;</span>+I+<span class="string">&quot;%&quot;</span>;</span><br><span class="line">        String TT2 = S+<span class="string">&quot;%   感觉(S) ---- 直觉(N)  &quot;</span>+N+<span class="string">&quot;%&quot;</span>;</span><br><span class="line">        String TT3 = TT+<span class="string">&quot;%   思考(T) ---- 感情(F)  &quot;</span>+F+<span class="string">&quot;%&quot;</span>;</span><br><span class="line">        String TT4 = J+<span class="string">&quot;%   判断(J) ---- 知觉(P)  &quot;</span>+P+<span class="string">&quot;%&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Paragraph tt1 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        tt1.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        tt1.add(TT1);</span><br><span class="line">        tt1.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">        Paragraph tt2 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        tt2.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        tt2.add(TT2);</span><br><span class="line">        tt2.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">        Paragraph tt3 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        tt3.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        tt3.add(TT3);</span><br><span class="line">        tt3.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">        Paragraph tt4 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        tt4.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        tt4.add(TT4);</span><br><span class="line">        tt4.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//第一部分</span></span><br><span class="line">        String t1 = <span class="string">&quot;一、性格特点&quot;</span>;</span><br><span class="line">        Paragraph T1 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T1.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">15</span>,<span class="number">0</span>));</span><br><span class="line">        T1.add(t1);</span><br><span class="line">        T1.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        T1.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第二部分</span></span><br><span class="line"></span><br><span class="line">        String t2 = <span class="string">&quot;1.概要&quot;</span>;</span><br><span class="line">        Paragraph T2 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T2.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">13</span>,<span class="number">0</span>));</span><br><span class="line">        T2.add(t2);</span><br><span class="line">        T2.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        T2.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第三部分</span></span><br><span class="line">        String t3 = <span class="string">&quot;2.描述&quot;</span>;</span><br><span class="line">        Paragraph T3 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T3.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">13</span>,<span class="number">0</span>));</span><br><span class="line">        T3.add(t3);</span><br><span class="line">        T3.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        T3.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第四部分</span></span><br><span class="line">        String t4 = <span class="string">&quot;二、适合领域&quot;</span>;</span><br><span class="line">        Paragraph T4 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T4.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">15</span>,<span class="number">0</span>));</span><br><span class="line">        T4.add(t4);</span><br><span class="line">        T4.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        T4.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        String t45 = <span class="string">&quot;三、适合职业&quot;</span>;</span><br><span class="line">        Paragraph T45 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T45.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">15</span>,<span class="number">0</span>));</span><br><span class="line">        T45.add(t45);</span><br><span class="line">        T45.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        T45.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//第五部分</span></span><br><span class="line">        String t5 = <span class="string">&quot;1.学生&quot;</span>;</span><br><span class="line">        Paragraph T5 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T5.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">13</span>,<span class="number">0</span>));</span><br><span class="line">        T5.add(t5);</span><br><span class="line"></span><br><span class="line">        T5.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        T5.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第六部分</span></span><br><span class="line">        String t6 = <span class="string">&quot;2.职场&quot;</span>;</span><br><span class="line">        Paragraph T6 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T6.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">13</span>,<span class="number">0</span>));</span><br><span class="line">        T6.add(t6);</span><br><span class="line"></span><br><span class="line">        T6.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        T6.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//第七部分</span></span><br><span class="line">        String t7 = <span class="string">&quot;四、用户须知&quot;</span>;</span><br><span class="line">        Paragraph T7 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T7.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">15</span>,<span class="number">0</span>));</span><br><span class="line">        T7.add(t7);</span><br><span class="line"></span><br><span class="line">        T7.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        T7.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//第八部分</span></span><br><span class="line">        String p6 = <span class="string">&quot;《性格分析报告》展示的是你的性格倾向，而不是你的知识、技能、经验。\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;MBTI提供的性格类型描述仅供测试者确定自己的性格类型之用，性格类型没有好坏，只有不同。每一种性格特征都有其价值和优点，也有缺点和需要注意的地方。清楚地了解自己的性格优劣势，有利于更好地发挥自己的特长，而尽可能的在为人处事中避免自己性格中的劣势，更好地和他人相处，更好地作重要的决策。\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&quot;</span>;</span><br><span class="line">        Paragraph P6 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P6.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        P6.add(p6);</span><br><span class="line">        P6.setLeading(<span class="number">15.5f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//尾缀一</span></span><br><span class="line">        String l1 = <span class="string">&quot;[性格无好坏，人生各不同]&quot;</span>;</span><br><span class="line">        Paragraph L1 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        L1.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        L1.setSpacingBefore(<span class="number">50</span>);</span><br><span class="line">        <span class="comment">//设置居中</span></span><br><span class="line">        L1.setAlignment(Element.ALIGN_RIGHT);</span><br><span class="line">        L1.add(l1);</span><br><span class="line">        <span class="comment">//尾缀二</span></span><br><span class="line">        String l2 = <span class="string">&quot;留心智愿&quot;</span>;</span><br><span class="line">        Paragraph L2 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        L2.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="comment">//设置居中</span></span><br><span class="line">        L2.setAlignment(Element.ALIGN_RIGHT);</span><br><span class="line">        L2.add(l2);</span><br><span class="line">        <span class="comment">//最后的时间</span></span><br><span class="line"></span><br><span class="line">        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(<span class="string">&quot;uuuu/MM/dd&quot;</span>);</span><br><span class="line">        LocalDate localDate = LocalDate.now();</span><br><span class="line">        <span class="keyword">int</span> year = localDate.getYear();</span><br><span class="line">        <span class="keyword">int</span> monthValue = localDate.getMonthValue();</span><br><span class="line">        <span class="keyword">int</span> dayOfMonth = localDate.getDayOfMonth();</span><br><span class="line">        System.out.println(year);</span><br><span class="line">        System.out.println(monthValue );</span><br><span class="line">        System.out.println(dayOfMonth);</span><br><span class="line"></span><br><span class="line">        String data = year+<span class="string">&quot;年&quot;</span>+monthValue+<span class="string">&quot;月&quot;</span>+dayOfMonth+<span class="string">&quot;日&quot;</span>;</span><br><span class="line">        Paragraph Data = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        Data.setAlignment(Element.ALIGN_RIGHT);</span><br><span class="line">        Data.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        Data.add(data);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//五个移动的数据</span></span><br><span class="line">        String p1 = personalityProfile;</span><br><span class="line">        String p2 = personalityDescription;</span><br><span class="line">        String p3 = field;</span><br><span class="line">        String p4 = careerStudent;</span><br><span class="line">        String p5 = career;</span><br><span class="line"></span><br><span class="line">        Paragraph P1 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P1.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        P1.add(p1);</span><br><span class="line"></span><br><span class="line">        Paragraph P2 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P2.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        P2.add(p2);</span><br><span class="line"></span><br><span class="line">        Paragraph P3 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P3.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        P3.add(p3);</span><br><span class="line"></span><br><span class="line">        Paragraph P4 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P4.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        P4.add(p4);</span><br><span class="line"></span><br><span class="line">        Paragraph P5 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P5.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        P5.add(p5);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将元素添加进去</span></span><br><span class="line">        document.add(Title);</span><br><span class="line">        document.add(title);</span><br><span class="line">        document.add(tt1);</span><br><span class="line">        document.add(tt2);</span><br><span class="line">        document.add(tt3);</span><br><span class="line">        document.add(tt4);</span><br><span class="line">        document.add(T1);</span><br><span class="line">        document.add(T2);</span><br><span class="line">        document.add(P1);</span><br><span class="line">        document.add(T3);</span><br><span class="line">        document.add(P2);</span><br><span class="line">        document.add(T4);</span><br><span class="line">        document.add(P3);</span><br><span class="line">        document.add(T45);</span><br><span class="line">        document.add(T5);</span><br><span class="line">        document.add(P4);</span><br><span class="line">        document.add(T6);</span><br><span class="line">        document.add(P5);</span><br><span class="line">        document.add(T7);</span><br><span class="line">        document.add(P6);</span><br><span class="line">        document.add(L1);</span><br><span class="line">        document.add(L2);</span><br><span class="line">        document.add(Data);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭文档</span></span><br><span class="line">        document.close();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">&quot;document&quot;</span>,document);</span><br><span class="line">        map.put(<span class="string">&quot;stream&quot;</span>,stream);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String,Object&gt; <span class="title">setHldPDF</span><span class="params">(String R, String C, String E, String S, String A, String I, String d1, String d2, String d3, g_hld1 n1, g_hld1  n2, g_hld1  n3, g_hld2 d)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ByteArrayOutputStream stream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="comment">//创建一个新的文档</span></span><br><span class="line">        <span class="comment">//创建一个空的文档并且设置文档的大小</span></span><br><span class="line">        Document document = <span class="keyword">new</span> Document(PageSize.A4);</span><br><span class="line"></span><br><span class="line">        PdfWriter.getInstance(document, stream);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//打开文档 准备添加数据</span></span><br><span class="line">        document.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加数据</span></span><br><span class="line">        <span class="comment">//创建字体 基本字体 字体需要不同定制都是以这个基础字体为基础的</span></span><br><span class="line">        BaseFont baseFont = BaseFont.createFont(<span class="string">&quot;STSongStd-Light&quot;</span>, <span class="string">&quot;UniGB-UCS2-H&quot;</span>, BaseFont.EMBEDDED);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建标题</span></span><br><span class="line">        String title = <span class="string">&quot;霍兰德职业兴趣测试\n&quot;</span>+<span class="string">&quot;深度分析报告&quot;</span>;</span><br><span class="line">        Paragraph Title = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        Title.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">20</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="comment">//设置居中</span></span><br><span class="line">        Title.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">        Title.setLeading((<span class="keyword">float</span>) (<span class="number">15.5f</span>*<span class="number">1.5</span>));</span><br><span class="line">        Title.add(title);</span><br><span class="line">        Title.setSpacingAfter(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建文档中固定的部分</span></span><br><span class="line">        String t1 = <span class="string">&quot;测试结果       &quot;</span>+d.getAll_type();</span><br><span class="line">        Paragraph T1 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T1.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">15</span>));</span><br><span class="line">        T1.add(t1);</span><br><span class="line">        T1.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line">        T1.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        String t2 = <span class="string">&quot;维度分析&quot;</span>;</span><br><span class="line">        Paragraph T2 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T2.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">15</span>));</span><br><span class="line">        T2.add(t2);</span><br><span class="line">        T2.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">        T2.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line">        T2.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String t3 = <span class="string">&quot;职业匹配&quot;</span>;</span><br><span class="line">        Paragraph T3  = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T3.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">15</span>));</span><br><span class="line">        <span class="comment">//设置居中</span></span><br><span class="line">        T3.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">        T3.add(t3);</span><br><span class="line">        T3.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line">        T3.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置可以活动的部分</span></span><br><span class="line">        String p6 = d.getAll_career();</span><br><span class="line">        Paragraph P6 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P6.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>));</span><br><span class="line">        P6.add(p6);</span><br><span class="line"></span><br><span class="line">        String p1 = <span class="string">&quot;现实型R  ----  &quot;</span>+R+<span class="string">&quot;%&quot;</span>+<span class="string">&quot;\n&quot;</span></span><br><span class="line">                +<span class="string">&quot;传统型C  ----  &quot;</span>+C+<span class="string">&quot;%&quot;</span>+<span class="string">&quot;\n&quot;</span></span><br><span class="line">                +<span class="string">&quot;企业型E  ----  &quot;</span>+E+<span class="string">&quot;%&quot;</span>+<span class="string">&quot;\n&quot;</span></span><br><span class="line">                +<span class="string">&quot;社会型S  ----  &quot;</span>+S+<span class="string">&quot;%&quot;</span>+<span class="string">&quot;\n&quot;</span></span><br><span class="line">                +<span class="string">&quot;艺术型A  ----  &quot;</span>+A+<span class="string">&quot;%&quot;</span>+<span class="string">&quot;\n&quot;</span></span><br><span class="line">                +<span class="string">&quot;研究型I  ----  &quot;</span>+I+<span class="string">&quot;%&quot;</span>+<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        Paragraph P1 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P1.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">13</span>));</span><br><span class="line">        P1.add(p1);</span><br><span class="line">        P1.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">        P1.setLeading((<span class="keyword">float</span>) (<span class="number">15.5f</span>*<span class="number">1.5</span>));</span><br><span class="line"></span><br><span class="line">        P1.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line">        P1.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        String t4 = d1;</span><br><span class="line">        <span class="keyword">switch</span> (t4)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;R现实型&quot;</span>: t4 = <span class="string">&quot;R&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;C&quot;</span>: t4 = <span class="string">&quot;C&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;E&quot;</span>: t4 = <span class="string">&quot;E&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;S&quot;</span>: t4 = <span class="string">&quot;S&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;A&quot;</span>: t4 = <span class="string">&quot;A&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;I&quot;</span>: t4 = <span class="string">&quot;I&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Paragraph T4 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T4.add(t4);</span><br><span class="line">        T4.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">15</span>));</span><br><span class="line">        String p3 = n1.getPersonality()+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;\n&quot;</span>+n1.getCareer();</span><br><span class="line">        Paragraph P3 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P3.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>));</span><br><span class="line">        P3.add(p3);</span><br><span class="line">        P3.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        P3.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String t5 = d2;</span><br><span class="line">        <span class="keyword">switch</span> (t5)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;R现实型&quot;</span>: t4 = <span class="string">&quot;R&quot;</span>+<span class="string">&quot;现实性&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;C&quot;</span>: t4 = <span class="string">&quot;C&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;E&quot;</span>: t4 = <span class="string">&quot;E&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;S&quot;</span>: t4 = <span class="string">&quot;S&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;A&quot;</span>: t4 = <span class="string">&quot;A&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;I&quot;</span>: t4 = <span class="string">&quot;I&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Paragraph T5 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T5.add(t5);</span><br><span class="line">        T5.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">15</span>));</span><br><span class="line">        String p4 = n2.getPersonality()+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;\n&quot;</span>+n2.getCareer();</span><br><span class="line">        Paragraph P4 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P4.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>));</span><br><span class="line">        P4.add(p4);</span><br><span class="line">        P4.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        P4.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String t6 = d3;</span><br><span class="line">        <span class="keyword">switch</span> (t6)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;R现实型&quot;</span>: t4 = <span class="string">&quot;R&quot;</span>+<span class="string">&quot;现实性&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;C&quot;</span>: t4 = <span class="string">&quot;C&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;E&quot;</span>: t4 = <span class="string">&quot;E&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;S&quot;</span>: t4 = <span class="string">&quot;S&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;A&quot;</span>: t4 = <span class="string">&quot;A&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;I&quot;</span>: t4 = <span class="string">&quot;I&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Paragraph T6 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        T6.add(t6);</span><br><span class="line">        T6.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">15</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String p5 = n3.getPersonality()+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;\n&quot;</span>+n3.getCareer();</span><br><span class="line">        Paragraph P5 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        P5.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>));</span><br><span class="line">        P5.add(p5);</span><br><span class="line">        P5.setSpacingAfter(<span class="number">10</span>);</span><br><span class="line">        P5.setSpacingBefore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//尾缀一</span></span><br><span class="line">        String l1 = <span class="string">&quot;[兴趣无好坏，人生各不同]&quot;</span>;</span><br><span class="line">        Paragraph L1 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        L1.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        L1.setSpacingBefore(<span class="number">50</span>);</span><br><span class="line">        <span class="comment">//设置居中</span></span><br><span class="line">        L1.setAlignment(Element.ALIGN_RIGHT);</span><br><span class="line">        L1.add(l1);</span><br><span class="line">        <span class="comment">//尾缀二</span></span><br><span class="line">        String l2 = <span class="string">&quot;留心智愿&quot;</span>;</span><br><span class="line">        Paragraph L2 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        L2.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="comment">//设置居中</span></span><br><span class="line">        L2.setAlignment(Element.ALIGN_RIGHT);</span><br><span class="line">        L2.add(l2);</span><br><span class="line">        <span class="comment">//最后的时间</span></span><br><span class="line"></span><br><span class="line">        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(<span class="string">&quot;uuuu/MM/dd&quot;</span>);</span><br><span class="line">        LocalDate localDate = LocalDate.now();</span><br><span class="line">        <span class="keyword">int</span> year = localDate.getYear();</span><br><span class="line">        <span class="keyword">int</span> monthValue = localDate.getMonthValue();</span><br><span class="line">        <span class="keyword">int</span> dayOfMonth = localDate.getDayOfMonth();</span><br><span class="line">        System.out.println(year);</span><br><span class="line">        System.out.println(monthValue );</span><br><span class="line">        System.out.println(dayOfMonth);</span><br><span class="line"></span><br><span class="line">        String data = year+<span class="string">&quot;年&quot;</span>+monthValue+<span class="string">&quot;月&quot;</span>+dayOfMonth+<span class="string">&quot;日&quot;</span>;</span><br><span class="line">        Paragraph Data = <span class="keyword">new</span> Paragraph();</span><br><span class="line">        Data.setAlignment(Element.ALIGN_RIGHT);</span><br><span class="line">        Data.setFont(<span class="keyword">new</span> Font(baseFont,<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">        Data.add(data);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将片段加到文档中</span></span><br><span class="line">        document.add(Title);</span><br><span class="line">        document.add(P1);</span><br><span class="line">        document.add(T1);</span><br><span class="line"></span><br><span class="line">        document.add(T2);</span><br><span class="line">        document.add(T4);</span><br><span class="line">        document.add(P3);</span><br><span class="line"></span><br><span class="line">        document.add(T5);</span><br><span class="line">        document.add(P4);</span><br><span class="line"></span><br><span class="line">        document.add(T6);</span><br><span class="line">        document.add(P5);</span><br><span class="line"></span><br><span class="line">        document.add(T3);</span><br><span class="line">        document.add(P6);</span><br><span class="line"></span><br><span class="line">        document.add(L1);</span><br><span class="line">        document.add(L2);</span><br><span class="line">        document.add(Data);</span><br><span class="line"></span><br><span class="line">        document.close();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">&quot;document&quot;</span>,document);</span><br><span class="line">        map.put(<span class="string">&quot;stream&quot;</span>,stream);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>将pdf写到网页的代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.g_hld1;</span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.g_hld2;</span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.g_report;</span><br><span class="line"><span class="keyword">import</span> com.dwx.service.hld1Service;</span><br><span class="line"><span class="keyword">import</span> com.dwx.service.hld2Service;</span><br><span class="line"><span class="keyword">import</span> com.dwx.service.reportService;</span><br><span class="line"><span class="keyword">import</span> com.dwx.utils.pdfUtils;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.text.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReportController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//嗲用service层</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> reportService reportService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用hld1的service和hld2的service</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> hld1Service hld1Service;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> hld2Service hld2Service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getPDF&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPdf</span><span class="params">(String E,String I,String S,String N,String T,String F,String J,String P,String csrul,HttpServletResponse resp)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//设置下载pdf程序</span></span><br><span class="line">        System.out.println(csrul);</span><br><span class="line">        g_report report = reportService.getReport(csrul);</span><br><span class="line">        System.out.println(report);</span><br><span class="line"></span><br><span class="line">        System.out.println(E);</span><br><span class="line">        System.out.println(I);</span><br><span class="line">        System.out.println(S);</span><br><span class="line">        System.out.println(N);</span><br><span class="line">        System.out.println(T);</span><br><span class="line">        System.out.println(F);</span><br><span class="line">        System.out.println(J);</span><br><span class="line">        System.out.println(P);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//首先创建一个输出流</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得我们生成的pdf文档</span></span><br><span class="line">        pdfUtils utils = <span class="keyword">new</span> pdfUtils();</span><br><span class="line">        String profile = report.getPersonalityProfile();</span><br><span class="line">        String description = report.getPersonalityDescription();</span><br><span class="line">        String career = report.getCareer();</span><br><span class="line">        String student = report.getCareerStudent();</span><br><span class="line">        String field = report.getField();</span><br><span class="line">        Map&lt;String, Object&gt; map = utils.setPDF(E,I,S,N,T,F,J,P,csrul, profile,description,field,student,career );</span><br><span class="line"></span><br><span class="line">        Document document = (Document) map.get(<span class="string">&quot;document&quot;</span>);</span><br><span class="line">        ByteArrayOutputStream  stream = (ByteArrayOutputStream) map.get(<span class="string">&quot;stream&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//转化成流 直接输出</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment; filename=&quot;</span> + <span class="keyword">new</span> String((csrul + <span class="string">&quot;.pdf&quot;</span>).getBytes(), StandardCharsets.ISO_8859_1));</span><br><span class="line">        resp.setContentLength(stream.size());</span><br><span class="line"></span><br><span class="line">        ServletOutputStream streamOut = resp.getOutputStream();</span><br><span class="line"></span><br><span class="line">        stream.writeTo(streamOut);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getHldPDF&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHldPDF</span><span class="params">(String R,String C,String E,String S,String A,String I,String d1,String d2,String d3,String dimension,HttpServletResponse resp)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (d1)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;R&quot;</span>: d1 = <span class="string">&quot;R现实型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;C&quot;</span>: d1 = <span class="string">&quot;C传统型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;E&quot;</span>: d1 = <span class="string">&quot;E管理型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;S&quot;</span>: d1 = <span class="string">&quot;S社会型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;A&quot;</span>: d1 = <span class="string">&quot;A艺术型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;I&quot;</span>: d1 = <span class="string">&quot;I研究型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (d2)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;R&quot;</span>: d2 = <span class="string">&quot;R现实型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;C&quot;</span>: d2 = <span class="string">&quot;C传统型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;E&quot;</span>: d2 = <span class="string">&quot;E管理型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;S&quot;</span>: d2 = <span class="string">&quot;S社会型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;A&quot;</span>: d2 = <span class="string">&quot;A艺术型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;I&quot;</span>: d2 = <span class="string">&quot;I研究型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (d3)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;R&quot;</span>: d3 = <span class="string">&quot;R现实型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;C&quot;</span>: d3 = <span class="string">&quot;C传统型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;E&quot;</span>: d3 = <span class="string">&quot;E管理型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;S&quot;</span>: d3 = <span class="string">&quot;S社会型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;A&quot;</span>: d3 = <span class="string">&quot;A艺术型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;I&quot;</span>: d3 = <span class="string">&quot;I研究型&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//通过service进行分别的查询</span></span><br><span class="line">        g_hld1 hld1 = hld1Service.getHld1(d1);</span><br><span class="line">        System.out.println(hld1);</span><br><span class="line">        g_hld1 hld11 = hld1Service.getHld1(d2);</span><br><span class="line">        System.out.println(hld11);</span><br><span class="line">        g_hld1 hld12 = hld1Service.getHld1(d3);</span><br><span class="line">        System.out.println(hld12);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查询hld2的数据</span></span><br><span class="line">        g_hld2 hld2 = hld2Service.getHld2(dimension);</span><br><span class="line">        System.out.println(hld2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        pdfUtils utils = <span class="keyword">new</span> pdfUtils();</span><br><span class="line">        Map&lt;String, Object&gt; map = utils.setHldPDF(R, C, E, S, A, I, d1, d2, d3, hld1, hld11, hld12, hld2);</span><br><span class="line"></span><br><span class="line">        Document document = (Document) map.get(<span class="string">&quot;document&quot;</span>);</span><br><span class="line">        ByteArrayOutputStream  stream = (ByteArrayOutputStream) map.get(<span class="string">&quot;stream&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//转化成流 直接输出</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment; filename=&quot;</span> + <span class="keyword">new</span> String((dimension + <span class="string">&quot;.pdf&quot;</span>).getBytes(), StandardCharsets.ISO_8859_1));</span><br><span class="line">        resp.setContentLength(stream.size());</span><br><span class="line"></span><br><span class="line">        ServletOutputStream streamOut = resp.getOutputStream();</span><br><span class="line"></span><br><span class="line">        stream.writeTo(streamOut);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="代码的细小但重要的代码"><a href="#代码的细小但重要的代码" class="headerlink" title="代码的细小但重要的代码"></a>代码的细小但重要的代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">ByteArrayOutputStream stream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line"><span class="comment">//创建一个新的文档</span></span><br><span class="line"><span class="comment">//创建一个空的文档并且设置文档的大小</span></span><br><span class="line">Document document = <span class="keyword">new</span> Document(PageSize.A4);</span><br><span class="line"></span><br><span class="line">PdfWriter.getInstance(document, stream);</span><br></pre></td></tr></table></figure>

<p>注意这里有个stream流，将pdf转化成流</p>
<p>在这个程序流是在写到网页的时候所需要的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Document document = (Document) map.get(<span class="string">&quot;document&quot;</span>);</span><br><span class="line">       ByteArrayOutputStream  stream = (ByteArrayOutputStream) map.get(<span class="string">&quot;stream&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="comment">//转化成流 直接输出</span></span><br><span class="line">       resp.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment; filename=&quot;</span> + <span class="keyword">new</span> String((dimension + <span class="string">&quot;.pdf&quot;</span>).getBytes(), StandardCharsets.ISO_8859_1));</span><br><span class="line">       resp.setContentLength(stream.size());</span><br><span class="line"></span><br><span class="line">       ServletOutputStream streamOut = resp.getOutputStream();</span><br><span class="line"></span><br><span class="line">       stream.writeTo(streamOut);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这里就拿到了util方法生成的流和文档 将这个流直接通过springMVC中的HttpService直接将我们的流写到网页上生成文档。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/java.%E6%9E%84%E9%80%A0%E5%99%A8/</url>
    <content><![CDATA[<h1 id="java构造器详解"><a href="#java构造器详解" class="headerlink" title="java构造器详解"></a>java构造器详解</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>  类的构造器也称为构造方法，是在进行创建对象的时候必须要调用的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> way;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//一个类及时什么也不写，他也会存在一个方法</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="comment">//构造器第一个功能:实例化一些初始值</span></span><br><span class="line">    <span class="comment">//使用new关键字，必须使用构造器</span></span><br><span class="line">    <span class="comment">//无参构造</span></span><br><span class="line">    <span class="comment">//Alt + insert可以直接生成构造器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造,一旦使用有参构造，就必须显示定义无参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">way03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//用new关键词声明了一个person对象</span></span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">&quot;XXX&quot;</span>);</span><br><span class="line">        System.out.println(person.name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="构造器的特点"><a href="#构造器的特点" class="headerlink" title="构造器的特点"></a>构造器的特点</h2><ul>
<li>构造器的名字必须和类的名字相同</li>
<li>构造器必须没有返回类型，也不能写void</li>
<li>使用new关键字，必须使用构造器</li>
<li>一个类及时什么也不写，他也会存在一个方法</li>
</ul>
<p><strong>注释</strong>：可以通过java.class文件可以发现其中有一个方法</p>
<h2 id="构造器的作用"><a href="#构造器的作用" class="headerlink" title="构造器的作用"></a>构造器的作用</h2><ul>
<li>构造器第一个功能:实例化一些初始值</li>
<li>使用new关键字，必须使用构造器</li>
</ul>
<h2 id="构造器的方便构造"><a href="#构造器的方便构造" class="headerlink" title="构造器的方便构造"></a>构造器的方便构造</h2><p><strong>Alt + insert可以直接生成构造器</strong></p>
<p><img src="/dwx-tx.github.io/2021/12/16/java.%E6%9E%84%E9%80%A0%E5%99%A8/截屏\构造器01.png"></p>
<p><img src="/dwx-tx.github.io/2021/12/16/java.%E6%9E%84%E9%80%A0%E5%99%A8/截屏\构造器02.png"></p>
]]></content>
  </entry>
  <entry>
    <title>get文件form多重文件夹</title>
    <url>/2021/12/16/getImg/</url>
    <content><![CDATA[<h1 id="图片抽取程序"><a href="#图片抽取程序" class="headerlink" title="图片抽取程序"></a>图片抽取程序</h1><h2 id="最基础的文件读写"><a href="#最基础的文件读写" class="headerlink" title="最基础的文件读写"></a>最基础的文件读写</h2><p><strong>最基础的文件读写是通过IO流来实现的，格式比较固定，只能实现文件到文件的程序处理</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.dwx.getImage;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">//这是一个简单的文件读写 只能实现文件到文件</span><br><span class="line">public class getImage &#123;</span><br><span class="line">    //获得文件是一个递归函数</span><br><span class="line">    public void getImage(File fileIn,File fileOut) throws IOException &#123;</span><br><span class="line">        //对于这个方法需要两个变量 一个是目标文件fileIn 一个是终点文件fileOut</span><br><span class="line">        //在java中 文件的存储方式是集合(list)</span><br><span class="line">        //通过InputStream来存储源文件 通过OutputStream来表示目标地址</span><br><span class="line">        FileInputStream fi = null;</span><br><span class="line">        FileOutputStream fo = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            //为目标文件创建成一个流</span><br><span class="line">           fi = new FileInputStream(fileIn);</span><br><span class="line">           fo = new FileOutputStream(fileOut);</span><br><span class="line">           //创造一个数组来存取这个文件</span><br><span class="line">            byte[] buffer = new byte[1024];</span><br><span class="line">            int len;</span><br><span class="line">            while ((len = fi.read(buffer))!=-1)&#123;</span><br><span class="line">                fo.write(buffer,0,len);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            //对于用完的资源要及时关闭</span><br><span class="line">            try &#123;</span><br><span class="line">                fi.close();</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="实现对文件的遍历"><a href="#实现对文件的遍历" class="headerlink" title="实现对文件的遍历"></a>实现对文件的遍历</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.dwx.getImage;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">//这个类我们来测试一下从文件夹中得到文件，并指定输出到我们想到的位置</span><br><span class="line">public class getImageDemo02 &#123;</span><br><span class="line">    //这个方法已经实现了对文件的遍历</span><br><span class="line">    public void getImage(File fileIn,File fileOut)&#123;</span><br><span class="line">        //我们要知道 文件类型可能是文件，也可能是文件夹</span><br><span class="line">        //这里我们来判断是否是一个文件夹</span><br><span class="line">        //通过 fileIn.listFiles就能把一个文件夹转化成list</span><br><span class="line">        //通过递归来实现对整个文件夹的遍历</span><br><span class="line">//        System.out.println(fileIn.isDirectory());</span><br><span class="line">//        for (File f : fileIn.listFiles())&#123;</span><br><span class="line">//            System.out.println(f);</span><br><span class="line">//        &#125;</span><br><span class="line">        //对于文件遍历 若是文件夹 就在进入下一次 如果是文件 return</span><br><span class="line">        if (fileIn.isDirectory())&#123;</span><br><span class="line">            for(File fi:fileIn.listFiles())&#123;</span><br><span class="line">                System.out.println(fi);</span><br><span class="line">                getImage(fi,fileOut);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //如果不是就直接返回</span><br><span class="line">        else&#123;</span><br><span class="line">            //System.out.println(fileIn.getAbsolutePath());</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        getImageDemo02 getImageDemo02 = new getImageDemo02();</span><br><span class="line">        File fi = new File(&quot;E:/get&quot;);</span><br><span class="line">        File fo = new File(&quot;E:/out&quot;);</span><br><span class="line">        getImageDemo02.getImage(fi,fo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="对完整的实现文件遍历并且下载的实现"><a href="#对完整的实现文件遍历并且下载的实现" class="headerlink" title="对完整的实现文件遍历并且下载的实现"></a>对完整的实现文件遍历并且下载的实现</h2><h3 id="程序作用"><a href="#程序作用" class="headerlink" title="程序作用"></a>程序作用</h3><p>在得到一个多重文件夹时，提取文件夹中的文件会十分麻烦，因此，我编写了一个程序。程序能够遍历整个文件夹中的文件，并且把文件复制到我们的目标文件夹。</p>
<h3 id="程序的基本思想"><a href="#程序的基本思想" class="headerlink" title="程序的基本思想"></a>程序的基本思想</h3><p>编写程序时的基础思想为：如果读入的是一个文件夹，就操作文件夹中的元素（文件通过file.listFiles( )将文件转换成list，通过for循环进行遍历）。如果读入的是一个文件，就copy这个文件到目标文件夹</p>
<h3 id="程序的技术支持"><a href="#程序的技术支持" class="headerlink" title="程序的技术支持"></a>程序的技术支持</h3><ul>
<li>I/O流 IO流的使用把文件读为一个流 对流的处理会比较简单</li>
<li>递归的使用：程序的基本思想是递归的，因此，使用递归思想写程序更加方便，且易于理解</li>
<li>文件名的获得：file.getName()就能获得文件的文件名 + 目标文件夹名 就能创造出一个新的文件 通过流对其进行操作</li>
</ul>
<h3 id="copy方法的实现"><a href="#copy方法的实现" class="headerlink" title="copy方法的实现"></a>copy方法的实现</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.dwx.getImage;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">//这是一个简单的文件读写 只能实现文件到文件</span><br><span class="line">public class getImage &#123;</span><br><span class="line">    //获得文件是一个递归函数</span><br><span class="line">    public void getImage(File fileIn,File fileOut) throws IOException &#123;</span><br><span class="line">        //对于这个方法需要两个变量 一个是目标文件fileIn 一个是终点文件fileOut</span><br><span class="line">        //在java中 文件的存储方式是集合(list)</span><br><span class="line">        //通过InputStream来存储源文件 通过OutputStream来表示目标地址</span><br><span class="line">        FileInputStream fi = null;</span><br><span class="line">        FileOutputStream fo = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            //为目标文件创建成一个流</span><br><span class="line">           fi = new FileInputStream(fileIn);</span><br><span class="line">           fo = new FileOutputStream(fileOut);</span><br><span class="line">           //创造一个数组来存取这个文件</span><br><span class="line">            byte[] buffer = new byte[1024];</span><br><span class="line">            int len;</span><br><span class="line">            while ((len = fi.read(buffer))!=-1)&#123;</span><br><span class="line">                fo.write(buffer,0,len);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            //对于用完的资源要及时关闭</span><br><span class="line">            try &#123;</span><br><span class="line">                fi.close();</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="遍历-递归-方法的实现"><a href="#遍历-递归-方法的实现" class="headerlink" title="遍历(递归)方法的实现"></a>遍历(递归)方法的实现</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.dwx.getImage;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">//这个类我们来测试一下从文件夹中得到文件，并指定输出到我们想到的位置</span><br><span class="line">public class getImageDemo02 &#123;</span><br><span class="line">    //这个方法已经实现了对文件的遍历</span><br><span class="line">    public void getImage(File fileIn,File fileOut)&#123;</span><br><span class="line">        //我们要知道 文件类型可能是文件，也可能是文件夹</span><br><span class="line">        //这里我们来判断是否是一个文件夹</span><br><span class="line">        //通过 fileIn.listFiles就能把一个文件夹转化成list</span><br><span class="line">        //通过递归来实现对整个文件夹的遍历</span><br><span class="line">//        System.out.println(fileIn.isDirectory());</span><br><span class="line">//        for (File f : fileIn.listFiles())&#123;</span><br><span class="line">//            System.out.println(f);</span><br><span class="line">//        &#125;</span><br><span class="line">        //对于文件遍历 若是文件夹 就在进入下一次 如果是文件 return</span><br><span class="line">        if (fileIn.isDirectory())&#123;</span><br><span class="line">            for(File fi:fileIn.listFiles())&#123;</span><br><span class="line">                getImage(fi,fileOut);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //如果不是就直接返回</span><br><span class="line">        else&#123;</span><br><span class="line">            getImage getImage = new getImage();</span><br><span class="line">            System.out.println(fileIn);</span><br><span class="line">            System.out.println(&quot;文件名字为&quot;+fileIn.getName());</span><br><span class="line">            File file = new File(fileOut+&quot;\\&quot;+ fileIn.getName());</span><br><span class="line">            System.out.println(&quot;写到了&quot;+file.getName());</span><br><span class="line">            try &#123;</span><br><span class="line">                getImage.getImage(fileIn,file);</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//    public static void main(String[] args) &#123;</span><br><span class="line">//        getImageDemo02 getImageDemo02 = new getImageDemo02();</span><br><span class="line">//        File fi = new File(&quot;E:/get&quot;);</span><br><span class="line">//        File fo = new File(&quot;E:/out&quot;);</span><br><span class="line">//        getImageDemo02.getImage(fi,fo);</span><br><span class="line">//    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="主方法-main-方法"><a href="#主方法-main-方法" class="headerlink" title="主方法(main)方法"></a>主方法(main)方法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.getImage.getImageDemo02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        getImage getImage = new getImage();</span></span><br><span class="line"><span class="comment">//        File fi = new File(&quot;E:\\get\\1.jpg&quot;);</span></span><br><span class="line"><span class="comment">//        File fo = new File(&quot;E:\\out\\1.jpg&quot;);</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            getImage.getImage(fi,fo);</span></span><br><span class="line"><span class="comment">//        &#125; catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">//            e.printStackTrace();</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        String fileInName;</span><br><span class="line">        String fileOutName;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入源文件夹:&quot;</span>);</span><br><span class="line">        fileInName = scanner.nextLine();</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入目标文件夹:&quot;</span>);</span><br><span class="line">        fileOutName = scanner.nextLine();</span><br><span class="line">        File fileIn = <span class="keyword">new</span> File(fileInName);</span><br><span class="line">        File fileOut = <span class="keyword">new</span> File(fileOutName);</span><br><span class="line">        getImageDemo02 getImageDemo02 = <span class="keyword">new</span> getImageDemo02();</span><br><span class="line">        getImageDemo02.getImage(fileIn,fileOut);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="未来-已来"><a href="#未来-已来" class="headerlink" title="未来(已来)"></a>未来(已来)</h2><p>对于这个程序还有很多能够完善的</p>
<h3 id="加上下载时间"><a href="#加上下载时间" class="headerlink" title="加上下载时间"></a>加上下载时间</h3><p><strong>已经加上了各个图片的下载时间 时间是以毫秒为单位的</strong></p>
<h3 id="特定文件类型的获取"><a href="#特定文件类型的获取" class="headerlink" title="特定文件类型的获取"></a>特定文件类型的获取</h3><p><strong>我给出的解决方案：增加一个过滤器，当查询到文件后，让文件后缀跟过滤器比较，比较成功就进行操作</strong></p>
<p><strong>已经实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是一个过滤器，用来特殊过滤文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="comment">//对于一个过滤器，他有的属性就是文件后缀名</span></span><br><span class="line">    String  FileLastName;</span><br><span class="line">    <span class="comment">//在类被加载时就对这个属性进行初始化</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Filter</span><span class="params">(String fileLastName)</span> </span>&#123;</span><br><span class="line">        FileLastName = fileLastName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//过滤器的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">FileFilter</span><span class="params">(File fileIn)</span></span>&#123;</span><br><span class="line">        <span class="comment">//立一个布尔类型的标记 来判断是否是合适的后缀文件</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">//如果输入的是all 则操作所有的类型</span></span><br><span class="line">        <span class="keyword">if</span> (FileLastName.equals(<span class="string">&quot;all&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取文件的名字</span></span><br><span class="line">        String fileInName = fileIn.getName();</span><br><span class="line">        <span class="comment">//获取文件名字的后缀</span></span><br><span class="line">        <span class="comment">//字符串以.切割 然后存放到String数组中</span></span><br><span class="line">        String[] fileLastName = fileInName.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">        <span class="comment">//通过这种方式 保证了获取到的一定是文件的后缀</span></span><br><span class="line">        <span class="keyword">int</span> length = fileLastName.length;</span><br><span class="line">        <span class="keyword">if</span> (fileLastName[length-<span class="number">1</span>].equals(FileLastName))&#123;</span><br><span class="line">            flag = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">//        Filter filter = new Filter(&quot;jpg&quot;);</span></span><br><span class="line"><span class="comment">//        filter.FileFilter(new File(&quot;E:\\get\\1.jpg&quot;));</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="解决程序健壮性问题"><a href="#解决程序健壮性问题" class="headerlink" title="解决程序健壮性问题"></a>解决程序健壮性问题</h2><h3 id="目标文件重名问题"><a href="#目标文件重名问题" class="headerlink" title="目标文件重名问题"></a>目标文件重名问题</h3><p><strong>在原程序中 目标文件重名后是会被重写的，这不符合实际应用中的情况，因此需要进行判断是否目标文件会重名</strong></p>
<p>我给出的解决方案是：在增加一个filter来过滤是否文件重名</p>
<p><img src="/dwx-tx.github.io/2021/12/16/getImg/Users\Lenovo\AppData\Roaming\Typora\typora-user-images\1639579595262.png"></p>
<p>已经较初级得解决了文件重名问题 即判断是否重名，对重名的文件重新命名</p>
<p>加入的过滤器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SameFileFilter</span> </span>&#123;</span><br><span class="line">    <span class="comment">//在实际的文件书写过程中 可能会存在</span></span><br><span class="line">    <span class="comment">//实际是对目标文件进行遍历</span></span><br><span class="line">    <span class="comment">//问题在于 这个目标文件是会一直改变的 不知道能否成功</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">SameFileFilter</span><span class="params">(File fileOut,File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (File f : fileOut.listFiles())&#123;</span><br><span class="line">            <span class="keyword">if</span> (f.equals(file))&#123;</span><br><span class="line">                <span class="comment">//如果在类表中找到该文件 将flag改为true</span></span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SameFileFilter fileFilter = <span class="keyword">new</span> SameFileFilter();</span><br><span class="line">        <span class="keyword">boolean</span> b = fileFilter.SameFileFilter(<span class="keyword">new</span> File(<span class="string">&quot;E:/out&quot;</span>), <span class="keyword">new</span> File(<span class="string">&quot;E:/out/1.jpg&quot;</span>));</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>发生改变的程序</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.getImage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.filter.Filter;</span><br><span class="line"><span class="keyword">import</span> com.dwx.filter.SameFileFilter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这个类我们来测试一下从文件夹中得到文件，并指定输出到我们想到的位置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">getImageDemo02</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这个方法已经实现了对文件的遍历</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getImage</span><span class="params">(File fileIn, File fileOut,String fileLastName)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//我们要知道 文件类型可能是文件，也可能是文件夹</span></span><br><span class="line">        <span class="comment">//这里我们来判断是否是一个文件夹</span></span><br><span class="line">        <span class="comment">//通过 fileIn.listFiles就能把一个文件夹转化成list</span></span><br><span class="line">        <span class="comment">//通过递归来实现对整个文件夹的遍历</span></span><br><span class="line"><span class="comment">//        System.out.println(fileIn.isDirectory());</span></span><br><span class="line"><span class="comment">//        for (File f : fileIn.listFiles())&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(f);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="comment">//对于文件遍历 若是文件夹 就在进入下一次 如果是文件 return</span></span><br><span class="line">        <span class="keyword">if</span> (fileIn.isDirectory()) &#123;</span><br><span class="line">            <span class="keyword">for</span> (File fi : Objects.requireNonNull(fileIn.listFiles())) &#123;</span><br><span class="line">                getImage(fi, fileOut,fileLastName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果不是就直接返回</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            Filter filter = <span class="keyword">new</span> Filter(fileLastName);</span><br><span class="line">            <span class="keyword">if</span> (filter.FileFilter(fileIn)) &#123;</span><br><span class="line">                getImage getImage = <span class="keyword">new</span> getImage();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">//用目标文件夹＋源文件名就组成了目标文件名（全路径）</span></span><br><span class="line">                File file = <span class="keyword">new</span> File(fileOut + <span class="string">&quot;\\&quot;</span> + fileIn.getName());</span><br><span class="line"></span><br><span class="line">                <span class="comment">//插入一个过滤同名文件的过滤器</span></span><br><span class="line">                SameFileFilter sameFileFilter = <span class="keyword">new</span> SameFileFilter();</span><br><span class="line">                <span class="comment">//如果这个if成立 就说明有重名文件 就把文件名在加个(00)</span></span><br><span class="line">                <span class="keyword">if</span>(sameFileFilter.SameFileFilter(fileOut, file))&#123;</span><br><span class="line">                    file = <span class="keyword">new</span> File(fileOut+<span class="string">&quot;\\&quot;</span>+<span class="string">&quot;(same)&quot;</span>+fileIn.getName());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//如果条件不成立 文件名就不会发生改变</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    getImage.MygetImage(fileIn, file);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>java实现微信信息定时发送</title>
    <url>/2022/11/06/java%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E4%BF%A1%E6%81%AF%E5%8F%91%E9%80%81/</url>
    <content><![CDATA[<h1 id="java实现微信信息定时发送"><a href="#java实现微信信息定时发送" class="headerlink" title="java实现微信信息定时发送"></a>java实现微信信息定时发送</h1><p><strong>今天遇到一个问题，需要在凌晨0点发送信息，但是怕之前想好的信息遗忘，因此希望编写一个java程序来实现程序按时发送</strong></p>
<p>分析可得，整个程序可以分为三个问题：</p>
<ul>
<li>java调用微信发送信息</li>
<li>创建一个信息池，来存储要发送的信息</li>
<li>设置时间，发送信息</li>
</ul>
<h2 id="java调用微信给特定对象发送信息"><a href="#java调用微信给特定对象发送信息" class="headerlink" title="java调用微信给特定对象发送信息"></a>java调用微信给特定对象发送信息</h2><p><strong>参考blog：</strong></p>
<p><a href="https://blog.csdn.net/baidu_39265156/article/details/109698987">(188条消息) Java实现微信每天定时发送消息，指定好友 – 柚子真好吃_我是小金毛的博客-CSDN博客_java微信给指定好友发消息</a></p>
<p><a href="https://blog.csdn.net/weixin_42601136/article/details/121498263">(188条消息) 使用Java实现发送微信消息（附源码）_此程序在手再也不怕对象跟你闹了_Willing卡卡的博客-CSDN博客_java发送微信消息</a></p>
<p>分析blog的 robot类很重要</p>
<p><a href="https://blog.csdn.net/qq_38901340/article/details/99225140">(188条消息) Java Robot类使用指南_Javee-Y的博客-CSDN博客_robot类</a></p>
<p>因此 ，java调用电脑上的程序是通过robot对象来实现的。</p>
<p><strong>robot类略解</strong></p>
<p><a href="https://blog.csdn.net/m0_37671741/article/details/102975016">(188条消息) Java中Robot类详解_MardenSSS的博客-CSDN博客_robot类</a></p>
<p><strong>具体思路</strong></p>
<p>通过java的robot( )类来模拟人的操作</p>
<ul>
<li>使用java的robot( )类来模拟人的操作</li>
<li>使用win的快捷键来操作微信</li>
<li>使用robot来执行win的快捷键来实现对微信的操作</li>
</ul>
<h3 id="打开微信"><a href="#打开微信" class="headerlink" title="打开微信"></a>打开微信</h3><p><strong>程序前提：需要首先登录微信</strong></p>
<p><strong>win快捷键</strong></p>
<p><code>alt + ctrl +w</code></p>
<p><strong>java代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">robot = <span class="keyword">new</span> Robot();</span><br><span class="line">         <span class="comment">//用robot模拟 alt+win+w 直接调用微信</span></span><br><span class="line">         robot.keyPress(KeyEvent.VK_CONTROL);</span><br><span class="line">         robot.keyPress(KeyEvent.VK_ALT);</span><br><span class="line">         robot.keyPress(KeyEvent.VK_W);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="延迟操作"><a href="#延迟操作" class="headerlink" title="延迟操作"></a>延迟操作</h3><p>java操作微信没有延迟，但是微信的打开和操作有延迟，为了避免发生冲突，需要在每次完成玩一个程序后执行一个延迟操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">robot.delay(1000);</span><br></pre></td></tr></table></figure>

<p>单位为毫秒</p>
<h3 id="按键释放操作"><a href="#按键释放操作" class="headerlink" title="按键释放操作"></a>按键释放操作</h3><p>必须释放按压，按压操作并不会随着程序的结束而结束</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//释放Ctrl按键，像Ctrl，退格键，删除键这样的功能性按键，在按下后一定要释放</span></span><br><span class="line">robot.keyRelease(KeyEvent.VK_CONTROL);</span><br><span class="line">robot.keyRelease(KeyEvent.VK_ALT);</span><br><span class="line">robot.keyRelease(KeyEvent.VK_W);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>不释放的话 会影响程序之后的电脑操作</p>
<h3 id="搜索好友"><a href="#搜索好友" class="headerlink" title="搜索好友"></a>搜索好友</h3><p><strong>快捷键</strong></p>
<p><code>Ctrl +F</code></p>
<p><strong>java代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Ctrl + F 搜索指定好友</span></span><br><span class="line">robot.keyPress(KeyEvent.VK_CONTROL);</span><br><span class="line">robot.keyPress(KeyEvent.VK_F);</span><br></pre></td></tr></table></figure>

<h3 id="进去"><a href="#进去" class="headerlink" title="进去"></a>进去</h3><p><strong>enter</strong></p>
<p>实现输入</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//按下输入 enter</span></span><br><span class="line">         robot.keyPress(KeyEvent.VK_ENTER);</span><br><span class="line">         <span class="comment">//释放</span></span><br><span class="line">         robot.keyRelease(KeyEvent.VK_ENTER);</span><br><span class="line">         robot.delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<h3 id="信息输入"><a href="#信息输入" class="headerlink" title="信息输入"></a>信息输入</h3><p>类似搜索程序</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">String msg = <span class="string">&quot;该信息为测试程序，不用回复&quot;</span>;</span><br><span class="line">tText = <span class="keyword">new</span> StringSelection(msg);</span><br><span class="line">clip.setContents(tText,<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下两行按下了ctrl+v，完成粘贴功能</span></span><br><span class="line">robot.keyPress(KeyEvent.VK_CONTROL);</span><br><span class="line">robot.keyPress(KeyEvent.VK_V);</span><br><span class="line"></span><br><span class="line"><span class="comment">//释放</span></span><br><span class="line">robot.keyRelease(KeyEvent.VK_CONTROL);</span><br><span class="line">robot.keyRelease(KeyEvent.VK_V);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">robot.delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//按下输入 enter</span></span><br><span class="line">robot.keyPress(KeyEvent.VK_ENTER);</span><br><span class="line"><span class="comment">//释放</span></span><br><span class="line">robot.keyRelease(KeyEvent.VK_ENTER);</span><br><span class="line">robot.delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<h3 id="完整的操作程序"><a href="#完整的操作程序" class="headerlink" title="完整的操作程序"></a>完整的操作程序</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.datatransfer.Clipboard;</span><br><span class="line"><span class="keyword">import</span> java.awt.datatransfer.StringSelection;</span><br><span class="line"><span class="keyword">import</span> java.awt.datatransfer.Transferable;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;程序开始执行&quot;</span>);</span><br><span class="line">        Robot robot = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建robot对象</span></span><br><span class="line">            robot = <span class="keyword">new</span> Robot();</span><br><span class="line">            <span class="comment">//用robot模拟 alt+win+w 直接调用微信</span></span><br><span class="line">            robot.keyPress(KeyEvent.VK_CONTROL);</span><br><span class="line">            robot.keyPress(KeyEvent.VK_ALT);</span><br><span class="line">            robot.keyPress(KeyEvent.VK_W);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//释放Ctrl按键，像Ctrl，退格键，删除键这样的功能性按键，在按下后一定要释放</span></span><br><span class="line">            robot.keyRelease(KeyEvent.VK_CONTROL);</span><br><span class="line">            robot.keyRelease(KeyEvent.VK_ALT);</span><br><span class="line">            robot.keyRelease(KeyEvent.VK_W);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//执行一个延迟</span></span><br><span class="line">            robot.delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Ctrl + F 搜索指定好友</span></span><br><span class="line">            robot.keyPress(KeyEvent.VK_CONTROL);</span><br><span class="line">            robot.keyPress(KeyEvent.VK_F);</span><br><span class="line">            <span class="comment">//释放按键</span></span><br><span class="line">            robot.keyRelease(KeyEvent.VK_CONTROL);</span><br><span class="line">            robot.keyRelease(KeyEvent.VK_F);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//将信息放到粘贴板上 并且发送</span></span><br><span class="line">            Clipboard clip = Toolkit.getDefaultToolkit().getSystemClipboard();</span><br><span class="line">            Transferable tText = <span class="keyword">new</span> StringSelection(<span class="string">&quot;聂八一&quot;</span>);</span><br><span class="line">            clip.setContents(tText, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 以下两行按下了ctrl+v，完成粘贴功能</span></span><br><span class="line">            robot.keyPress(KeyEvent.VK_CONTROL);</span><br><span class="line">            robot.keyPress(KeyEvent.VK_V);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//释放</span></span><br><span class="line">            robot.keyRelease(KeyEvent.VK_CONTROL);</span><br><span class="line">            robot.keyRelease(KeyEvent.VK_V);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            robot.delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//按下输入 enter</span></span><br><span class="line">            robot.keyPress(KeyEvent.VK_ENTER);</span><br><span class="line">            <span class="comment">//释放</span></span><br><span class="line">            robot.keyRelease(KeyEvent.VK_ENTER);</span><br><span class="line">            robot.delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//可以输入信息了</span></span><br><span class="line">            <span class="comment">//按照先放到剪切板 后赋值 后enter实现输入</span></span><br><span class="line"></span><br><span class="line">            String msg = <span class="string">&quot;该信息为测试程序，不用回复&quot;</span>;</span><br><span class="line">            tText = <span class="keyword">new</span> StringSelection(msg);</span><br><span class="line">            clip.setContents(tText,<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 以下两行按下了ctrl+v，完成粘贴功能</span></span><br><span class="line">            robot.keyPress(KeyEvent.VK_CONTROL);</span><br><span class="line">            robot.keyPress(KeyEvent.VK_V);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//释放</span></span><br><span class="line">            robot.keyRelease(KeyEvent.VK_CONTROL);</span><br><span class="line">            robot.keyRelease(KeyEvent.VK_V);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            robot.delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//按下输入 enter</span></span><br><span class="line">            robot.keyPress(KeyEvent.VK_ENTER);</span><br><span class="line">            <span class="comment">//释放</span></span><br><span class="line">            robot.keyRelease(KeyEvent.VK_ENTER);</span><br><span class="line">            robot.delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (AWTException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;程序执行结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>总结：</strong>无论是昵称还是取得称号都是可以的</p>
<h2 id="定时技术"><a href="#定时技术" class="headerlink" title="定时技术"></a>定时技术</h2><p><strong>分析可得逻辑</strong></p>
<ul>
<li>先设置一个预定的对象</li>
<li>通过java里的system对象来获得系统时间（当时的时间）</li>
</ul>
<p><strong>获得当前时间方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss:SSS&quot;</span>);</span><br><span class="line">String time = df.format(System.currentTimeMillis());</span><br><span class="line">System.out.println(<span class="string">&quot;现在时间是:&quot;</span> + time);</span><br></pre></td></tr></table></figure>

<p><strong>java设置时间格式</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//设置时间</span></span><br><span class="line">      <span class="keyword">int</span> year = <span class="number">2022</span>;</span><br><span class="line">      <span class="keyword">int</span> month = <span class="number">11</span>;</span><br><span class="line">      String day = <span class="string">&quot;06&quot;</span>;</span><br><span class="line">      <span class="keyword">int</span> hour = <span class="number">20</span>;</span><br><span class="line">      <span class="keyword">int</span> min = <span class="number">40</span>;</span><br><span class="line">      String today = year+<span class="string">&quot;-&quot;</span>+month+<span class="string">&quot;-&quot;</span>+day+<span class="string">&quot; &quot;</span>+hour+<span class="string">&quot;:&quot;</span>+min;</span><br><span class="line">      System.out.println(<span class="string">&quot;目标时间:&quot;</span>+today);</span><br><span class="line">      <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">          time = df.format(System.currentTimeMillis());</span><br><span class="line">          time2 = df1.format(System.currentTimeMillis());</span><br><span class="line">          <span class="comment">//沉睡疫苗</span></span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">              sleep(<span class="number">1000</span>);</span><br><span class="line">          &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">              <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">          &#125;</span><br><span class="line">          System.out.println(time2);</span><br><span class="line">          <span class="keyword">if</span> (time.equals(today))&#123;</span><br><span class="line">              System.out.println(<span class="string">&quot;到时候了&quot;</span>);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<p><strong>TimeUtil</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前时间</span></span><br><span class="line">    <span class="keyword">private</span> String timeNow = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">//目标时间</span></span><br><span class="line">    <span class="keyword">private</span> String targetTime = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置目标时间</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">setTargetTime</span><span class="params">(String year, String month, String day, String hour, String min)</span> </span>&#123;</span><br><span class="line">        targetTime = year + <span class="string">&quot;-&quot;</span> + month + <span class="string">&quot;-&quot;</span> + day + <span class="string">&quot; &quot;</span> + hour + <span class="string">&quot;:&quot;</span> + min;</span><br><span class="line">        System.out.println(<span class="string">&quot;目标时间为：&quot;</span> + targetTime);</span><br><span class="line">        <span class="keyword">return</span> targetTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得时钟 直到秒</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getClockToSecond</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> l = System.currentTimeMillis();</span><br><span class="line">        SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        String time = df.format(l);</span><br><span class="line">        System.out.println(time);</span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得时钟 直到分钟</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getClockToMin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> l = System.currentTimeMillis();</span><br><span class="line">        SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>);</span><br><span class="line">        timeNow = df.format(l);</span><br><span class="line">        System.out.println(timeNow);</span><br><span class="line">        <span class="keyword">return</span> timeNow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>两个程序执行结束</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.utils.RobotUtil;</span><br><span class="line"><span class="keyword">import</span> com.dwx.utils.TimeUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Thread.sleep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        RobotUtil robotUtil = <span class="keyword">new</span> RobotUtil();</span><br><span class="line">        String  msg1 = robotUtil.getFriendWin(<span class="string">&quot;文件传输助手&quot;</span>);</span><br><span class="line">        System.out.println(msg1);</span><br><span class="line">        String s = robotUtil.sendMsg(<span class="string">&quot;定时发送数据程序测试&quot;</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置时间</span></span><br><span class="line">        TimeUtil timeUtil = <span class="keyword">new</span> TimeUtil();</span><br><span class="line">        String t1 = timeUtil.setTargetTime(<span class="string">&quot;2022&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;06&quot;</span>, <span class="string">&quot;21&quot;</span>, <span class="string">&quot;13&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">//沉睡一秒</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;sleep出错:&quot;</span>+e);</span><br><span class="line">            &#125;</span><br><span class="line">            timeUtil.getClockToSecond();</span><br><span class="line">            String t2 = timeUtil.getClockToMin();</span><br><span class="line">            <span class="keyword">if</span> (t1.equals(t2))&#123;</span><br><span class="line">                <span class="comment">//时间正确 执行信息发送</span></span><br><span class="line">                robotUtil.getFriendWin(<span class="string">&quot;文件传输助手&quot;</span>);</span><br><span class="line">                robotUtil.sendMsg(<span class="string">&quot;时间到 执行程序&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>程序前提：</strong></p>
<ul>
<li>微信登录</li>
<li>微信窗口隐藏</li>
</ul>
<h2 id="信息池"><a href="#信息池" class="headerlink" title="信息池"></a>信息池</h2><ul>
<li>用String[ ]即可</li>
<li>或者使用txt文件也行</li>
</ul>
<h3 id="使用String-做信息池"><a href="#使用String-做信息池" class="headerlink" title="使用String[ ]做信息池"></a>使用String[ ]做信息池</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String[] msg = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>实战</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.utils.RobotUtil;</span><br><span class="line"><span class="keyword">import</span> com.dwx.utils.TimeUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Thread.sleep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        RobotUtil robotUtil = <span class="keyword">new</span> RobotUtil();</span><br><span class="line">        <span class="comment">//设置时间</span></span><br><span class="line">        TimeUtil timeUtil = <span class="keyword">new</span> TimeUtil();</span><br><span class="line">        String t1 = timeUtil.setTargetTime(<span class="string">&quot;2022&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;06&quot;</span>, <span class="string">&quot;21&quot;</span>, <span class="string">&quot;35&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">//沉睡一秒</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;sleep出错:&quot;</span>+e);</span><br><span class="line">            &#125;</span><br><span class="line">            timeUtil.getClockToSecond();</span><br><span class="line">            String t2 = timeUtil.getClockToMin();</span><br><span class="line">            <span class="keyword">if</span> (t1.equals(t2))&#123;</span><br><span class="line">                <span class="comment">//时间正确 执行信息发送</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//信息池</span></span><br><span class="line">        String[] msg = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">                <span class="string">&quot;信息一&quot;</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">        robotUtil.getFriendWin(<span class="string">&quot;文件传输助手&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (String s : msg) &#123;</span><br><span class="line">            robotUtil.sendMsg(s+i++);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>结果</strong></p>
<p><a href="https://imgse.com/i/xjYK4s"><img src="https://s1.ax1x.com/2022/11/06/xjYK4s.png" alt="xjYK4s.png"></a></p>
<h3 id="使用txt文件当做信息池"><a href="#使用txt文件当做信息池" class="headerlink" title="使用txt文件当做信息池"></a>使用txt文件当做信息池</h3><p><strong>原理</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//文件读写</span></span><br><span class="line">       String fileUrl = <span class="string">&quot;E:\\java\\wechatTest\\src\\main\\resources\\msg.txt&quot;</span>;</span><br><span class="line">       File file = <span class="keyword">new</span> File(fileUrl);</span><br><span class="line">       BufferedReader bufferedReader = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           bufferedReader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(file));</span><br><span class="line"></span><br><span class="line">           String s = bufferedReader.readLine();</span><br><span class="line">           <span class="keyword">while</span> (<span class="keyword">null</span> != s)&#123;</span><br><span class="line">               System.out.println(s);</span><br><span class="line">               s = bufferedReader.readLine();</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">           System.out.println(e);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">           System.out.println(e);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p><strong>实战</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.utils.FileUtil;</span><br><span class="line"><span class="keyword">import</span> com.dwx.utils.RobotUtil;</span><br><span class="line"><span class="keyword">import</span> com.dwx.utils.TimeUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Thread.sleep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        RobotUtil robotUtil = <span class="keyword">new</span> RobotUtil();</span><br><span class="line">        <span class="comment">//设置时间</span></span><br><span class="line">        TimeUtil timeUtil = <span class="keyword">new</span> TimeUtil();</span><br><span class="line">        String t1 = timeUtil.setTargetTime(<span class="string">&quot;2022&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;06&quot;</span>, <span class="string">&quot;21&quot;</span>, <span class="string">&quot;57&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">//沉睡一秒</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;sleep出错:&quot;</span>+e);</span><br><span class="line">            &#125;</span><br><span class="line">            timeUtil.getClockToSecond();</span><br><span class="line">            String t2 = timeUtil.getClockToMin();</span><br><span class="line">            <span class="keyword">if</span> (t1.equals(t2))&#123;</span><br><span class="line">                <span class="comment">//时间正确 执行信息发送</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//信息池</span></span><br><span class="line">        FileUtil fileUtil = <span class="keyword">new</span> FileUtil();</span><br><span class="line">        List&lt;String&gt; msgByFile = fileUtil.getMsgByFile();</span><br><span class="line"></span><br><span class="line">        robotUtil.getFriendWin(<span class="string">&quot;文件传输助手&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String s : msgByFile) &#123;</span><br><span class="line">            robotUtil.sendMsg(s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>效果</strong></p>
<p><a href="https://imgse.com/i/xjYQCn"><img src="https://s1.ax1x.com/2022/11/06/xjYQCn.png" alt="xjYQCn.png"></a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/java%E6%96%B9%E6%B3%95%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="Java方法详解"><a href="#Java方法详解" class="headerlink" title="Java方法详解"></a>Java方法详解</h1><h2 id="什么是方法"><a href="#什么是方法" class="headerlink" title="什么是方法"></a>什么是方法</h2><p>这边我以System.out.println();为例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println();<span class="comment">/*调用System类中的out对象中的println方法*/</span></span><br><span class="line"><span class="comment">/*类*/</span><span class="comment">/*对象*/</span><span class="comment">/*方法*/</span></span><br><span class="line"><span class="comment">//整体的使用方法的原理就是，调用类中的对象中的方法</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Java方法的大致内容"><a href="#Java方法的大致内容" class="headerlink" title="Java方法的大致内容"></a>Java方法的大致内容</h3><p><strong>Java方法是语句的集合，它们在一起执行一个功能</strong></p>
<ul>
<li>方法是解决一类问题的步奏和有序组合</li>
<li>方法包含于类或对象中</li>
<li>方法在程序中被创建，在其他地方被调用</li>
</ul>
<h3 id="设计方法的原则"><a href="#设计方法的原则" class="headerlink" title="设计方法的原则"></a>设计方法的原则</h3><p>方法的本意是功能快，就是实现某个功能的语句块的集合。我们设计方法的时候应当保持方法的原子性，即<strong>一个方法只用于实现一个功能</strong>，这样有利于我们的后期拓展</p>
<h3 id="方法的命名规则"><a href="#方法的命名规则" class="headerlink" title="方法的命名规则"></a>方法的命名规则</h3><p>方法的命名规则基本上和变量的命名规则相同，<strong>高级要求</strong>需要首字母小写的驼峰原则</p>
<h3 id="自定义方法的实例"><a href="#自定义方法的实例" class="headerlink" title="自定义方法的实例"></a>自定义方法的实例</h3><p>这里我会以add方法作为实例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> method;<span class="comment">//包名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">method01</span> </span>&#123;<span class="comment">// 类名</span></span><br><span class="line">    <span class="comment">//main方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//我们自己定义的方法是写在类里边，方法外边的</span></span><br><span class="line">    <span class="comment">//void 和C语言一样，表示没有返回值, int 有返回值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>为了使自己定义的方法能够被合理的调用，我们使用<strong>public</strong>和<strong>static</strong>等修饰符来对方法进行修饰</p>
<h2 id="方法的定义"><a href="#方法的定义" class="headerlink" title="方法的定义"></a>方法的定义</h2><p>   java的方法类似于其它语言的函数，是一段用来完成特定功能的代码片段，一般情况下，定义一个方法包含如下语法：</p>
<h3 id="方法一般包含一个方法头和一个方法ti"><a href="#方法一般包含一个方法头和一个方法ti" class="headerlink" title="方法一般包含一个方法头和一个方法ti"></a>方法一般包含一个方法头和一个方法ti</h3><ul>
<li>修饰符：修饰符是可选的，可以根据自己对方法的要求选择合适的修饰符，修饰符的作用就是告诉编译器这个方法是用来作什么的</li>
<li>返回值类型：方法可能会有返回值。returnValueType是方法返回值的数据类型。有些方法执行所需的操作不需要返回值，这时候returValueType是关键字void</li>
<li>方法名：是方法的实际名称，方法名和参数表共同构成方法签名</li>
<li>参数类型：参数像是一个占位符。当方法被调用时，传递值给参数。这个值被称为实参或变量。参数列表是指方法的参数类型、顺序、参数个数、参数是可运的。方法可以不包括任何参数<ul>
<li>形式参数：在方法被调用时用于接收外界的输入数据</li>
<li>实参：调用方法时实际传递给方法的数据</li>
</ul>
</li>
<li>方法体：方法体包含具体的语句，定义函数的功能</li>
</ul>
<h3 id="方法的格式为"><a href="#方法的格式为" class="headerlink" title="方法的格式为"></a>方法的格式为</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">修饰符  返回值类型   方法名（参数类型 参数）&#123;</span><br><span class="line">    ..........</span><br><span class="line">        方法体</span><br><span class="line">    ..........</span><br><span class="line">     <span class="keyword">return</span> 返回值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><p>调用方法：对象名.方法名（实参列表）</p>
<p><strong>注意</strong>：java只有按值传递</p>
<p>java支持两种调用方法的方式：</p>
<ul>
<li><p>对于有返回值的方法，使用方法就当做是一个数值</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> lagger = max(a,b);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>对于没有返回值的方法，一般调用是为了输出一段语句</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">compare</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入两个整数:&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">            a = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">            b = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> max = max(a, b);</span><br><span class="line">        System.out.println(max);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; b)&#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a==b)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;相等&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//这里的return 0说明return不仅可以返回值，亦可以作为方法结束符</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>













]]></content>
  </entry>
  <entry>
    <title>for循环</title>
    <url>/2021/12/16/java%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><p>while循环格式如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(表达式)&#123;</span><br><span class="line">    &lt;语句块&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对于while循环必须注意一下几点：</p>
<ul>
<li>只要表达式的布尔值为true，循环就会一直持续下去</li>
<li>但大多数情况下我们并不需要一直循环，也需要停止，就需要设计循环破坏条件</li>
<li>一定要避免出现死循环</li>
</ul>
<h2 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do-while循环"></a>do-while循环</h2><p>do-while循环格式如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    &lt;语句块&gt;；</span><br><span class="line">&#125;<span class="keyword">while</span>(表达式)</span><br></pre></td></tr></table></figure>

<p>do-while和while一样，使用的方式也一样。</p>
<p>就是由于该程序把while移动到后边来，所以程序会先进行一次，再去判断表达式是否为true，是否继续执行</p>
<h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><p>for循环的格式如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(表达式<span class="number">1</span>；判断式；表达式<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">    语句块；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>进入for循环，会先执行表达式1，其实是条件，然后进行判断，如果结果为真，进行执行语句块，然后进行表达式2，再次判断，就这样，一直到判断式为假为止。</p>
<p>括号中的（；；）是断不可以丢的。</p>
<p>其运用要点和C语言一样，不在过分赘述。</p>
<h2 id="关键字break和continue"><a href="#关键字break和continue" class="headerlink" title="关键字break和continue"></a>关键字break和continue</h2><p>和C语言中break和continue关键字的作用一样</p>
<p>continue：结束本次循环，仍在循环结构中</p>
<p>break：结束整个循环，跳出循环结构</p>
<p>而且，两者只能结束一层的循环，如果要对多层循环进行操作需要多次使用</p>
]]></content>
  </entry>
  <entry>
    <title>java流程结构</title>
    <url>/2021/12/16/java%E6%B5%81%E7%A8%8B%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h2><p>顺序结构是java的基本结构，除非特别指明，否则会按照从上到下的顺序依次执行代码。</p>
<p><img src="/dwx-tx.github.io/2021/12/16/java%E6%B5%81%E7%A8%8B%E7%BB%93%E6%9E%84/截屏\顺序结构01.png"></p>
<p><img src="/dwx-tx.github.io/2021/12/16/java%E6%B5%81%E7%A8%8B%E7%BB%93%E6%9E%84/截屏\顺序结构02.png"></p>
<h2 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h2><h3 id="if选择结构"><a href="#if选择结构" class="headerlink" title="if选择结构"></a>if选择结构</h3><h4 id="if单选择结构"><a href="#if单选择结构" class="headerlink" title="if单选择结构"></a>if单选择结构</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式)&#123;</span><br><span class="line">    语句块；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>和C语言中的if选择结构一样，当布尔值表达式的结果为True时，输出语句块，否则跳过语句块，执行if（）后边的程序。</p>
<h4 id="if双选择结构"><a href="#if双选择结构" class="headerlink" title="if双选择结构"></a>if双选择结构</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式)&#123;</span><br><span class="line">    语句块<span class="number">1</span>；</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    语句块<span class="number">2</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当布尔表达式的结果为true时，输出语句块1;否则将执行语句块2。</p>
<h3 id="if三选择结构"><a href="#if三选择结构" class="headerlink" title="if三选择结构"></a>if三选择结构</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式<span class="number">1</span>)&#123;</span><br><span class="line">    语句块<span class="number">1</span>；</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(布尔表达式<span class="number">2</span>)&#123;</span><br><span class="line">    语句块<span class="number">2</span>；</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(布尔表达式<span class="number">3</span>)&#123;</span><br><span class="line">    语句块<span class="number">3</span>；</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    语句块<span class="number">4</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编译器会从上到下依次读取布尔表达式，谁的表达式结果为true，则执行该表达式对应的语句块，执行结束后就会跳出该结构，即使下边的布尔表达式理论上也可以为真，也不会表达。</p>
<p><strong>注意</strong>：在else-else if-else结构中，至少有一个else*语句，切else语句在结构的最后一句。如果某个else if检查语句为true，程序直接跳出结构，不会再继续执行，</p>
<h3 id="switch选择结构"><a href="#switch选择结构" class="headerlink" title="switch选择结构"></a>switch选择结构</h3><p>switch-case语句判断一个变量与一系类值中的某个值是否相等，每个值称为一个分支.</p>
<p><strong>switch语句中的变量类型可以是</strong>：</p>
<ul>
<li>byte，short,int 或者char</li>
<li>String从java SE 7也可以使用</li>
<li>case标签必须为字符串常量或字面量</li>
</ul>
<p>switch-case语句格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        &lt;语句&gt;;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        &lt;语句&gt;;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        &lt;语句&gt;;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>：    #可选可不选</span><br><span class="line">        &lt;语句&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当表达式与某个value相同时，执行其对应的语句，然后借助break跳出循环，不然就会继续向下执行，知道找到break或者default为止。</p>
]]></content>
  </entry>
  <entry>
    <title>稀疏数组</title>
    <url>/2021/12/16/java%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h1 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h1><h2 id="稀疏数组的使用范围"><a href="#稀疏数组的使用范围" class="headerlink" title="稀疏数组的使用范围"></a>稀疏数组的使用范围</h2><p>当一个数组中大部分元素为0或者为同一值的数组时，可以使用稀疏数组来保存该数组</p>
<h2 id="稀疏数组的处理方式"><a href="#稀疏数组的处理方式" class="headerlink" title="稀疏数组的处理方式"></a>稀疏数组的处理方式</h2><ul>
<li>记录数组有几行几列，有多少个不同值</li>
<li>把具有不同值得数组和行列值记录在一个小规模的数组中从而来降低数组规模</li>
</ul>
<p><strong>代码实例：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">arry02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> [][] array1;</span><br><span class="line">        array1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>] ;</span><br><span class="line">        array1[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        array1[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;打印原始数组&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> [] ints :array1) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> anInt : ints)&#123;</span><br><span class="line">                System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//转换为稀疏数组保存</span></span><br><span class="line">        <span class="comment">//获取有效值的个数</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(array1[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> [][] array2;</span><br><span class="line">        array2 = <span class="keyword">new</span> <span class="keyword">int</span> [sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//遍历二维数组，将非0值定义在稀疏数组中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array1[i].length; j++) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (array1[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">                    count++;</span><br><span class="line">                    array2[count][<span class="number">0</span>] = i;</span><br><span class="line">                    array2[count][<span class="number">1</span>] = j;</span><br><span class="line">                    array2[count][<span class="number">2</span>] = array1[i][j] ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//稀疏数组的输出</span></span><br><span class="line">        System.out.println(<span class="string">&quot;稀疏数组的输出&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array2.length; i++) &#123;</span><br><span class="line">            System.out.println(array2[i][<span class="number">0</span>]+<span class="string">&quot;\t&quot;</span></span><br><span class="line">                    +array2[i][<span class="number">1</span>]+<span class="string">&quot;\t&quot;</span></span><br><span class="line">                    +array2[i][<span class="number">2</span>]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//稀疏数组的还原</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=======================================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;稀疏数组的还原&quot;</span>);</span><br><span class="line">        <span class="comment">//1.读取稀疏数组的值</span></span><br><span class="line">        <span class="keyword">int</span> [][] array3;</span><br><span class="line">        <span class="comment">//这是在还原，通过稀疏数组array2[0][0]代表还原后的行数,array2[0][1]代表还原后的列数</span></span><br><span class="line">        array3 = <span class="keyword">new</span> <span class="keyword">int</span> [array2[<span class="number">0</span>][<span class="number">0</span>]][array2[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="comment">//2.给其中的元素还原值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; array2.length; i++) &#123;</span><br><span class="line">            array3[array2[i][<span class="number">0</span>]][array2[i][<span class="number">1</span>]] = array2[i][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.打印</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> [] ints : array3) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt: ints) &#123;</span><br><span class="line">                System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>输出结果:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">打印原始数组</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">1</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">2</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line">稀疏数组的输出</span><br><span class="line"><span class="number">11</span>	<span class="number">11</span>	<span class="number">2</span>	</span><br><span class="line"><span class="number">1</span>	<span class="number">2</span>	<span class="number">1</span>	</span><br><span class="line"><span class="number">2</span>	<span class="number">3</span>	<span class="number">2</span>	</span><br><span class="line">=======================================</span><br><span class="line">稀疏数组的还原</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">1</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">2</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>







]]></content>
  </entry>
  <entry>
    <title>类与对象</title>
    <url>/2021/12/16/java%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<p>类（class）和对象（object）是面向对象程序设计方法中的最核心概念</p>
<h2 id="类的基本概念"><a href="#类的基本概念" class="headerlink" title="类的基本概念"></a>类的基本概念</h2><p> <strong>类</strong>：是对某一类事物的描述，是抽象的、概念上的定义；</p>
<p><strong>对象</strong>：是实际存在的属该类事物的具体个体，因而被称为实例</p>
<p><strong>方法</strong>：封装在类中的函数，在java语言中函数被称为方法</p>
<h2 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h2><p>定义类，实际上是定义类的属性与方法，在使用类之前，必需先定义它，然后才可利用定义的类来声明相应的变量，并创建对象。</p>
<h3 id="类的一般结构："><a href="#类的一般结构：" class="headerlink" title="类的一般结构："></a>类的一般结构：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[类修饰符] <span class="class"><span class="keyword">class</span> 类名称</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    [修饰符] 数据类型 成员变量名称；</span><br><span class="line">        .....</span><br><span class="line">    [修饰符] 返回值的数据类型 方法名(参数<span class="number">1</span> ，参数<span class="number">2</span>， ....， 参数n)</span><br><span class="line">    &#123;</span><br><span class="line">        语句序列;</span><br><span class="line">        <span class="keyword">return</span> [表达式];</span><br><span class="line">    &#125;</span><br><span class="line">    ..........</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>方括号[]中的修饰符是可选项，它是一组<strong>限定</strong>类，成员变量和成员方法是否可以被程序里的其他部分访问的调用的控制符。其中，类标识符可以分为<strong>公共访问控制符</strong>、<strong>抽象类说明符</strong>、<strong>最终类说明符</strong>和<strong>缺省访问控制符</strong>四种。</p>
<table>
<thead>
<tr>
<th>修饰符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>public</td>
<td>将一个类声明为公共类，它可以被任何对象访问</td>
</tr>
<tr>
<td>abstract</td>
<td>将一个类声明为抽象类，没有实现方法，需要子类提供方法的实现，所以不能创建该类的实例</td>
</tr>
<tr>
<td>final</td>
<td>将一个类声明为最终类，即非继承类，表示它不能被其他类所继承</td>
</tr>
<tr>
<td>缺省</td>
<td>缺省修饰符时，则表示只有在相同包中的对象才能使用这样的类</td>
</tr>
</tbody></table>
<p>一个类可以有多个修饰符，但abstract和final相互对立，所以不能同时应用在一个类的定义中</p>
<h3 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h3><p>/<em>因为我自己有些C语言基础，所以在理解java语言元素时爱用C语言中的相似元素来类比</em>/</p>
<p><strong>成员变量就好像C语言中的全局变量</strong></p>
<p>格式如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[修饰符] 变量类型 变量名[ = 初值]</span><br></pre></td></tr></table></figure>

<p>成员变量的修饰符有<strong>访问控制符</strong>、<strong>静态修饰符</strong>、<strong>最终修饰符</strong>、<strong>过渡修饰符</strong>、<strong>易失修饰符</strong>等</p>
<table>
<thead>
<tr>
<th>修饰符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>public</td>
<td>公共访问控制符。指定该变量为为公共的，它可以被任何对象的方法访问</td>
</tr>
<tr>
<td>private</td>
<td>私有访问控制符。指定该变量只允许知己的类的方法访问，其他任何类(包括子类)中的方法均不能访问此变量</td>
</tr>
<tr>
<td>protected</td>
<td>保护访问控制符。指定该变量只可以被它自己的类及其子类或同一包中的其他类访问</td>
</tr>
<tr>
<td>缺省</td>
<td>缺省访问控制符时，则表示在同一个包中的类可以访问此成员变量，而其他包中的类不能访问该成员变量</td>
</tr>
<tr>
<td>final</td>
<td>最终修饰符。指定此变量的值不能改变</td>
</tr>
<tr>
<td>static</td>
<td>静态修饰符。指定该变变量被所有对象共享，即所有的实例都可以使用该对象</td>
</tr>
<tr>
<td>transient</td>
<td>过度修饰符。指定该变量是一个系统保留、暂无特别作用的临时性变量</td>
</tr>
<tr>
<td>volatile</td>
<td>易失修饰符。指定该变量可以同时被几个线成控制和修改</td>
</tr>
</tbody></table>
<p><strong>修饰符的要求</strong>：除了访问控制修饰符有多个以外，其他的修饰符只有一个。一个成员变量可以被两个以上的修饰符同时修饰。</p>
<h3 id="成员方法"><a href="#成员方法" class="headerlink" title="成员方法"></a>成员方法</h3><p><strong>声明方法的语法格式如下：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[修饰符] 返回值的数据类型 方法名(参数<span class="number">1</span>，参数<span class="number">2</span>，...，参数n)</span><br><span class="line">&#123;</span><br><span class="line">    语句序列；</span><br><span class="line">    <span class="keyword">return</span> [表达式]；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果不需要传递参数到方法中，只需要将方法名后的圆括号写出即可，不必填入任何内容，另外，若方法没有返回值，则返回值的数据类型应该是void，且return语句可以省略。</p>
<table>
<thead>
<tr>
<th>修饰符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>public</td>
<td>公共访问控制符。指定该方法为公共的，它可以被任何对象的方法访问</td>
</tr>
<tr>
<td>private</td>
<td>私有访问控制符。指定该方法只允许自己类的方法访问，其他任何类（包括子类）中的方法均不能访问此方法</td>
</tr>
<tr>
<td>protected</td>
<td>保护访问控制符。指定该方法只可以被它的类及其子类或同一包中的其他类访问</td>
</tr>
<tr>
<td>缺省</td>
<td>缺省访问控制符时，则表示在同一个包中的类可以访问此成员方法，而其他包中的类不能访问该成员方法</td>
</tr>
<tr>
<td>final</td>
<td>最终修饰符。指定该方法不能被覆盖</td>
</tr>
<tr>
<td>static</td>
<td>静态修饰符。指定不需要实例化一个对象就可以调用的方法</td>
</tr>
<tr>
<td>abstract</td>
<td>抽象修饰符。指定该方法只声明方法头，而没有方法体，抽象方法需在子类中被实现</td>
</tr>
<tr>
<td>synchronized</td>
<td>同步修饰符。在多线程程序中，该修饰符用于对同步资源加锁，以防止其他线程访问，运行结束后解锁</td>
</tr>
<tr>
<td>native</td>
<td>本地修饰符。指定此方法的方法体是用其他语言（如C语言）在程序外编写的</td>
</tr>
</tbody></table>
<h3 id="成员变量与局部变量的区别"><a href="#成员变量与局部变量的区别" class="headerlink" title="成员变量与局部变量的区别"></a>成员变量与局部变量的区别</h3><p>类额成员变量和方法中的局部变量，其区别和C语言中全局变量和局部变量的区别是一样的。</p>
<h2 id="对象的建立与使用"><a href="#对象的建立与使用" class="headerlink" title="对象的建立与使用"></a>对象的建立与使用</h2><p>一个对象的生命周期为：创建-&gt;使用-&gt;销毁</p>
<h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><p>创建步奏只需要两步：</p>
<ol>
<li>声明指向“由类所创建的对象”的变量</li>
<li>利用new运算符创建新的对象，并指派给前面所创建的变量</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Scanner scanner;</span><br><span class="line">scanner = <span class="keyword">new</span> Scanner;</span><br></pre></td></tr></table></figure>



<h3 id="对象的使用"><a href="#对象的使用" class="headerlink" title="对象的使用"></a>对象的使用</h3><p>  创建对象后，就可以对对象的成员进行访问，通过对象来引用对象成员的格式：</p>
<p>  <strong>对象名 . 对象成员</strong></p>
<p>eg：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> way;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cylinder</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> radius;</span><br><span class="line">    <span class="keyword">int</span> height;</span><br><span class="line">    <span class="keyword">double</span> pi = <span class="number">3.14</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">area</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;底面积=&quot;</span>+ pi*radius*radius);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">volume</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (pi *radius *radius)* height;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">way01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Cylinder volu;</span><br><span class="line">        volu = <span class="keyword">new</span> Cylinder();</span><br><span class="line">        volu.radius = <span class="number">2.8</span>;</span><br><span class="line">        volu.height = <span class="number">5</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;底圆半径 = &quot;</span>+volu.radius);</span><br><span class="line">        System.out.println(<span class="string">&quot;圆柱的高 = &quot;</span>+volu.height);</span><br><span class="line">        System.out.print(<span class="string">&quot;圆柱&quot;</span>);</span><br><span class="line">        volu.area();</span><br><span class="line">        System.out.println(<span class="string">&quot;圆柱体积 = &quot;</span> +volu.volume());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>eg2：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> way;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">long</span> number;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">people</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;学生姓名:%s  性别:%c  年龄:%d  学号:%d&quot;</span>.formatted(name,sex,age,number));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">way02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        student std;</span><br><span class="line">        std = <span class="keyword">new</span> student();</span><br><span class="line">        std.name =<span class="string">&quot;dasd&quot;</span>;</span><br><span class="line">        std.age = <span class="number">19</span>;</span><br><span class="line">        std.number = <span class="number">202545131L</span>;</span><br><span class="line">        std.sex = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">        std.people();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>由上边的两个例子可以看成，在主方法main()内如果需要访问类的成员，是通过格式</p>
<p>对象名.成员名 </p>
<p>进行的。</p>
]]></content>
  </entry>
  <entry>
    <title>MATLAB作图</title>
    <url>/2022/03/16/matlab%E4%BD%9C%E5%9B%BE/</url>
    <content><![CDATA[<h1 id="MATLAB作图"><a href="#MATLAB作图" class="headerlink" title="MATLAB作图"></a>MATLAB作图</h1><h2 id="二维图形"><a href="#二维图形" class="headerlink" title="二维图形"></a>二维图形</h2><p><strong>曲线图</strong></p>
<ul>
<li>plot(X,Y,S)</li>
<li>plot(X,Y)</li>
<li>plot(X,Y1,S1,X,Y2,S2,…,X,Yn,Sn)</li>
</ul>
<p><strong>元素分析</strong>：</p>
<ul>
<li>X，Y是向量，分别表示点集的横坐标和纵坐标</li>
<li>命令plot(X,Y,S)描绘该点集所表示的曲线</li>
<li>S是表示线的类型</li>
</ul>
<p><strong>S元素的取值：</strong></p>
<table>
<thead>
<tr>
<th>取值</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>y</td>
<td>黄色</td>
</tr>
<tr>
<td>m</td>
<td>洋红</td>
</tr>
<tr>
<td>c</td>
<td>蓝绿色</td>
</tr>
<tr>
<td>r</td>
<td>红色</td>
</tr>
<tr>
<td>.</td>
<td>点</td>
</tr>
<tr>
<td>o</td>
<td>圈</td>
</tr>
<tr>
<td>x</td>
<td>叉</td>
</tr>
<tr>
<td>+</td>
<td>十字</td>
</tr>
<tr>
<td>-</td>
<td>实线</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>取值</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>：</td>
<td>短虚线</td>
</tr>
<tr>
<td>-.</td>
<td>长短线</td>
</tr>
<tr>
<td>–</td>
<td>长虚线</td>
</tr>
</tbody></table>
<p><strong>符号函数（显函数、隐函数、参数函数）画图</strong></p>
<p>符号函数画图可以通过命令”ezplot”或”fplot”来实现</p>
<p><strong>ezplot的调用格式</strong></p>
<table>
<thead>
<tr>
<th>表示方式</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>ezplot(f)</td>
<td>表示默认区间[-2π，2π]上绘制f = f(x)的函数</td>
</tr>
<tr>
<td>ezplot(f,[ a, b])</td>
<td>表示在[a,b]上绘制显函数f = f(x)的图形</td>
</tr>
<tr>
<td>ezplot(f,[xmin,xmax,ymin,ymax])</td>
<td>表示在区间[xmin,xmax]和[ymin,ymax]上绘制隐函数f(x,y)=0的图像</td>
</tr>
<tr>
<td>ezplot(fun,lims)</td>
<td>表示在区间[tmin,tmax]上绘制参数方程x = x(t),y = y(t)的图形</td>
</tr>
</tbody></table>
<p><strong>fplot(fun,lims)表示描绘字符串fun指定的函数在lims = [xmin,xmax]的图形</strong></p>
<p><strong>要求</strong>：</p>
<ul>
<li>fun必须是M文件的函数名或是独立变量为X的字符串，此字符串被送入函数eval</li>
<li>函数fun(x)必须对向量中的每个元素x返回一行向量</li>
</ul>
<p><strong>极坐标图</strong></p>
<p>命令ploar(theta, rho, s)表示用角度theta(弧度表示)和级半径rho作极坐标图，用S指定线型</p>
<h2 id="三维图形"><a href="#三维图形" class="headerlink" title="三维图形"></a>三维图形</h2><p><strong>三维曲线</strong></p>
<ul>
<li>一条曲线 plot3(x,y,z,S)</li>
<li>多条曲线plot3(X,Y,Z,S),这里的X，Y，Z都是mxn矩阵对应的每一列表示一条曲线</li>
</ul>
<p><strong>空间曲线：</strong></p>
<ul>
<li>surf(X,Y,Z)</li>
<li>mesh(X,Y,Z)</li>
</ul>
<h2 id="处理图形"><a href="#处理图形" class="headerlink" title="处理图形"></a>处理图形</h2><p><strong>在图形上加格栅、图例、标注</strong></p>
<ul>
<li>grid on, grid off  grid on表示在当前图上加上格栅，命令grid off表示删除格栅</li>
<li>hh = xlabel(‘string’) 在当前图形的x轴上加上图例string</li>
<li>hh = ylable(‘string’) 在当前图形的y轴上加上图例string</li>
<li>hh = zlable(‘string’) 在当前图形的z轴上加上图例string</li>
<li>hh = title(‘string’) 在当前图形的顶端加上图例string</li>
</ul>
<p><strong>定制坐标</strong></p>
<ul>
<li>axis([XMIN XMAX YMIN YMAX ZMIN ZMAX])</li>
<li>axis auto</li>
</ul>
<p>命令axis([XMIN XMAX YMIN YMAX ZMIN ZMAX])定制图像坐标XMIN XMAX YMIN YMAX ZMIN ZMAX分别为x，y，z的最小值和最大值</p>
<p>命令axis auto将坐标轴返回到自动缺省值</p>
<p><strong>图像保持</strong></p>
<ul>
<li>hold on，hold off</li>
<li>H = figure</li>
<li>figure(H)</li>
</ul>
<p>命令 H= =figure创建图像并返回图形的句柄</p>
<p>命令figure(H)新建H窗口,激活图形H使其可见，并把它至于其他图形上方</p>
<p><strong>图区控制</strong></p>
<ul>
<li>H = subplot(mrows, ncols, thisPlot)</li>
<li>subplot(mrows, nclos, thisPlot)</li>
<li>subplot(1,1,1)</li>
</ul>
<p>命令H = subplot(mrows, ncols, thisPlot)划分整个作图区域为mrows * ncols，并激活第thisPlot块</p>
<p>命令subplot(mrows, nclos, thisPlot)激活已划分为mrows * ncols块的屏幕中的第thisPlot块</p>
<p>命令subplot(1,1,1)返回分割状态</p>
<p><strong>缩放图形</strong></p>
<ul>
<li>zoom on</li>
<li>zoom off</li>
</ul>
<p><strong>散点图</strong></p>
<ul>
<li><p>二维散点图: scatter(X,Y,S,C)</p>
<p>scatter(X,Y,S,C)在向量X和Y的指定位置显示彩色圈，X和Y必须大小相同</p>
</li>
<li><p>三维散点图: scatter3(X,Y,Z,S,C)</p>
<p>scatter3(X,Y,Z,S,C)在向量X，Y和Z指定的位置上显示彩色圆圈，向量X，Y的Z的大小必须相同</p>
</li>
</ul>
<p><strong>等值线图</strong></p>
<ul>
<li><p>平面等值线图: contour(x,y,z,n)</p>
<p>表示绘制n个等值线的二维等值线图</p>
</li>
<li><p>空间等值线图：contour3(x,y,z,n)</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>matlab入门</title>
    <url>/2022/03/16/matlab%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="matlab入门"><a href="#matlab入门" class="headerlink" title="matlab入门"></a>matlab入门</h1><h2 id="变量与函数"><a href="#变量与函数" class="headerlink" title="变量与函数"></a>变量与函数</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p><strong>matlab中变量的命名规则是：</strong></p>
<ul>
<li>变量名必须是不含空格的单个词；</li>
<li>变量名区分大小写；</li>
<li>变量名最多不超过19个字符；</li>
<li>变量名必须是字母打头，后边可以是任意字母、数字或下划线，变量名中不允许出现标点符号</li>
</ul>
<p>MATLAB还有几个特殊变量</p>
<table>
<thead>
<tr>
<th>特殊变量</th>
<th>取值</th>
</tr>
</thead>
<tbody><tr>
<td>ans</td>
<td>用于结果的缺省变量名</td>
</tr>
<tr>
<td>pi</td>
<td>圆周率</td>
</tr>
<tr>
<td>eps</td>
<td>计算机的最小数，和1相加就产生了一个比1大的数</td>
</tr>
<tr>
<td>flops</td>
<td>浮点运算数</td>
</tr>
<tr>
<td>inf</td>
<td>无穷大</td>
</tr>
<tr>
<td>NaN</td>
<td>不定量</td>
</tr>
<tr>
<td>i,j</td>
<td>i = j =根号下-1</td>
</tr>
<tr>
<td>realmin</td>
<td>最小可用的正实数</td>
</tr>
<tr>
<td>realmax</td>
<td>最大可用的负实数</td>
</tr>
</tbody></table>
<h3 id="数学运算符号及标点符号"><a href="#数学运算符号及标点符号" class="headerlink" title="数学运算符号及标点符号"></a>数学运算符号及标点符号</h3><p><strong>数学运算符号表</strong></p>
<table>
<thead>
<tr>
<th>符号</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>加法运算，适用于两个数或两个同阶矩阵相加</td>
</tr>
<tr>
<td>-</td>
<td>减法运算</td>
</tr>
<tr>
<td>*</td>
<td>乘法运算</td>
</tr>
<tr>
<td>.*</td>
<td>点乘运算</td>
</tr>
<tr>
<td>./</td>
<td>点除运算</td>
</tr>
<tr>
<td>^</td>
<td>乘幂运算</td>
</tr>
<tr>
<td>\</td>
<td>反斜线表示左除</td>
</tr>
</tbody></table>
<p><strong>MATLAB中标点符号的含义：</strong></p>
<ul>
<li>MATLAB的每条命令后，若为逗号或无标点符号，则显示命令的结果；若为分号，这禁止显示结果。</li>
<li>“%”后面所有的文字为注释</li>
<li>“…”表示续行</li>
</ul>
<h3 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h3><p><strong>常用基本函数</strong></p>
<table>
<thead>
<tr>
<th>函数</th>
<th>名称</th>
</tr>
</thead>
<tbody><tr>
<td>sin</td>
<td>正弦函数</td>
</tr>
<tr>
<td>cos</td>
<td>余弦函数</td>
</tr>
<tr>
<td>tan</td>
<td>正切函数</td>
</tr>
<tr>
<td>abs</td>
<td>绝对值(模)</td>
</tr>
<tr>
<td>min</td>
<td>最小值</td>
</tr>
<tr>
<td>sqrt</td>
<td>开平方</td>
</tr>
<tr>
<td>log</td>
<td>自然对数</td>
</tr>
<tr>
<td>sign</td>
<td>符号函数</td>
</tr>
<tr>
<td>asin</td>
<td>反正弦函数</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>函数</th>
<th>名称</th>
</tr>
</thead>
<tbody><tr>
<td>acos</td>
<td>反余弦函数</td>
</tr>
<tr>
<td>atan</td>
<td>反正弦函数</td>
</tr>
<tr>
<td>max</td>
<td>最大值</td>
</tr>
<tr>
<td>sum</td>
<td>元素的总和</td>
</tr>
<tr>
<td>exp</td>
<td>以e为底的指数</td>
</tr>
<tr>
<td>log10</td>
<td>以10为底的对数</td>
</tr>
<tr>
<td>fix</td>
<td>取整</td>
</tr>
</tbody></table>
<h3 id="函数M文件"><a href="#函数M文件" class="headerlink" title="函数M文件"></a>函数M文件</h3><p><strong>MATLAB定义新函数，必须编写函数M文件</strong></p>
<p>函数M文件是文件后缀为m的文件，这类文件的第一行必须是以一特殊字符function开始，格式为：</p>
<p><strong>function 因变量名 = 函数名(自变量名)</strong></p>
<p><strong>函数M文件的文件名必须与函数名完全一致</strong></p>
<h2 id="数组与矩阵"><a href="#数组与矩阵" class="headerlink" title="数组与矩阵"></a>数组与矩阵</h2><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p><strong>数组的建立：</strong></p>
<table>
<thead>
<tr>
<th>方法</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>x = [ a b c d e f ]</td>
<td>创建包含指定元素的行向量</td>
</tr>
<tr>
<td>x = first : last</td>
<td>创建从first开始，加1计数，到last结束的行向量</td>
</tr>
<tr>
<td>x =first : increment : last</td>
<td>创建从first开始，加increment计数，到last结束的行向量</td>
</tr>
<tr>
<td>linspace( first , last , n )</td>
<td>创建从first开始，到last结束。有n个元素的行向量</td>
</tr>
</tbody></table>
<p><strong>数组元素的访问：</strong></p>
<p>为了访问数组元素（分量），可对数组元素进行编扯</p>
<p>（1）访问一个元素：数组元素可以用下标访问，如x（i）表示数组x的第i个元素</p>
<p>（2）访问一块元素：访问矩阵的某些元素或子块.x(a : b : c)表示访问数组x的从第a个元素开始，以步长为b到第c个元素（但不超过c），b可以为负数，b缺省时为1</p>
<p>（3）直接使用元素编址序号.x([ a b c d ])表示提取数组x的第a，b，c，d个元素构成一个新的数组[x(a) x(b) x(c) x(d)].</p>
<p><strong>数组的方向：</strong></p>
<p><strong>数组的运算：</strong></p>
<p>（1）标量-数组运算</p>
<p>数组对标量的加、减、乘、除、乘方是数组的每个元素对该标量施加相应的加、减、乘、除、乘方运算</p>
<p>（2）数组-数组运算</p>
<p>当两个数组有相同维数时，加、减、乘、除、幂运算可按元素对元素方式进行，不同大小或维数的数组是不能进行运算的</p>
<h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><p><strong>矩阵的建立</strong></p>
<p><strong>逗号或空格用于分隔某一行的元素，分号用于区分不同的行</strong></p>
<p><strong>MATLAB提供了几个建立特殊矩阵的命令：</strong></p>
<table>
<thead>
<tr>
<th>命令</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>a = []</td>
<td>产生一个空矩阵，当对一项操作无结果是=时，返回空矩阵，空矩阵的大小为0</td>
</tr>
<tr>
<td>b = zeros(m,n)</td>
<td>产生一个m行n列的零矩阵</td>
</tr>
<tr>
<td>c = ones(m,n)</td>
<td>产生一个m行n列的元素全为1的矩阵</td>
</tr>
<tr>
<td>d = eye(m,n)</td>
<td>产生一个m行n列的单位矩阵</td>
</tr>
</tbody></table>
<p><strong>矩阵中元素的操作：</strong></p>
<ul>
<li>矩阵A的第r行：A（r，：）；</li>
<li>矩阵A的第r列:A(:,r);</li>
<li>依次提取矩阵A的每一列，将A拉伸为一个列向量：A(:);</li>
<li>取矩阵A的第i1<del>i2行、第j1</del>j2列，构成新矩阵：A(i1:i2,j1:j2);</li>
<li>以逆序列提取矩阵A的第i1~i2列，构成新矩阵：A(i2 : -1 :i1,:);</li>
<li>以逆序列提取矩阵A的第j1~j2列，构成新矩阵: A(:,j2: -1 :j1);</li>
<li>删除A的第i1~i2行，构成新的矩阵：A(i1:i2,:)=[];</li>
<li>删除A的第j1~j2列，构成新的矩阵：A(:,j1:j2)=[];</li>
<li>将矩阵A和B拼接成新矩阵:[ A B ]或[ A ; B ].</li>
</ul>
<p><strong>矩阵中的运算</strong>:</p>
<ul>
<li>标量-矩阵运算:与标量-数组运算类似.</li>
<li>矩阵-矩阵运算:矩阵的元素对元素的运算，与数组的数组-数组运算类似</li>
</ul>
<p><strong>线性代数中定义矩阵运算的命令如下：</strong></p>
<ul>
<li><p>矩阵加法:A + B;</p>
</li>
<li><p>矩阵乘法: A * B;</p>
</li>
<li><p>方阵的行列式：det(A);</p>
</li>
<li><p>方阵的逆：inv(A);</p>
</li>
<li><p>方阵的特征值与特征向量:[ V, D] = eig( A )</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>矩阵运算</title>
    <url>/2022/03/16/matlab%E7%9F%A9%E9%98%B5%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="矩阵运算"><a href="#矩阵运算" class="headerlink" title="矩阵运算"></a>矩阵运算</h1><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><h3 id="矩阵的建立"><a href="#矩阵的建立" class="headerlink" title="矩阵的建立"></a>矩阵的建立</h3><p>矩阵对的建立一般采用直接创建法</p>
<p><strong>注意：</strong></p>
<ul>
<li>输入矩阵时要以“[ ]”为其标识符号，矩阵的所有元素必须都在括号内。</li>
<li>矩阵同行元素之间由空格（个数不限）或逗号分隔，行与行之间用分号或者回车键分隔</li>
<li>矩阵的大小不需要预先定义</li>
<li>矩阵元素可以是运算表达式</li>
<li>若“[ ]”中无元素，表示空矩阵</li>
<li>如果不想显示中间结果，可以用”;”结束</li>
<li>MATLAB允许方括号里还有方括号</li>
</ul>
<h2 id="矩阵的生成"><a href="#矩阵的生成" class="headerlink" title="矩阵的生成"></a>矩阵的生成</h2><p>矩阵的生成两种方式：1.自己手打2.引入文件中的矩阵</p>
<p><strong>引入文件中矩阵的方法</strong>：通过load 文件名.格式 可以创建矩阵</p>
<p><strong>注意：这里的文件一定要在MATLAB运行文件中，要不然识别不了</strong></p>
<h2 id="几种创建特殊矩阵的方法"><a href="#几种创建特殊矩阵的方法" class="headerlink" title="几种创建特殊矩阵的方法"></a>几种创建特殊矩阵的方法</h2><table>
<thead>
<tr>
<th>函数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>eye(n)</td>
<td>创建nxn单位矩阵</td>
</tr>
<tr>
<td>eye(m,n)</td>
<td>创建mxn的单位矩阵</td>
</tr>
<tr>
<td>eye(size(A))</td>
<td>创建与A维度相同的单位阵</td>
</tr>
<tr>
<td>ones(n)</td>
<td>创建nxn全1矩阵</td>
</tr>
<tr>
<td>ones(m,n)</td>
<td>创建mxn全1矩阵</td>
</tr>
<tr>
<td>zeros(m,n)</td>
<td>创建mxn全0矩阵</td>
</tr>
<tr>
<td>zeros(size(A))</td>
<td>创建与A维度相同全0矩阵</td>
</tr>
<tr>
<td>rand(m)</td>
<td>在[0,1]区间内创建一个nxn均匀分布的随机矩阵</td>
</tr>
<tr>
<td>rand(mxn)</td>
<td>在[0,1]区间内创建一个mxn均匀分布的随机矩阵</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>函数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>rand(size(A))</td>
<td>在[0,1]区间内创建一个与A维度相同的均匀分布的随机矩阵</td>
</tr>
<tr>
<td>compan(P)</td>
<td>创建系数向量是P的多项式的伴随矩阵</td>
</tr>
<tr>
<td>diag(V)</td>
<td>创建一个以V中元素为主对角线的矩阵</td>
</tr>
<tr>
<td>hilb(n)</td>
<td>创建一个nxn的Hilbet矩阵</td>
</tr>
<tr>
<td>magic（n）</td>
<td>生成n阶魔方矩阵</td>
</tr>
<tr>
<td>sparse(A)</td>
<td>将矩阵A转化为系数矩阵</td>
</tr>
</tbody></table>
<h3 id="矩阵元素的运算"><a href="#矩阵元素的运算" class="headerlink" title="矩阵元素的运算"></a>矩阵元素的运算</h3><p><strong>矩阵元素的修改</strong></p>
<table>
<thead>
<tr>
<th>命令名</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>D=[A;B C]</td>
<td>A为原矩阵，B、C中包含要扩充的元素，D为扩充后的矩阵</td>
</tr>
<tr>
<td>A(m,:)=[]</td>
<td>删除A的第m行</td>
</tr>
<tr>
<td>A(:,n)=[]</td>
<td>删除A的第n列</td>
</tr>
<tr>
<td>A(m,n) = a;A(m,:)=[a,b,…,n];A(:,n)=[a,b,c,…,n]</td>
<td>对A的第m行n列的元素赋值；对A的第m行赋值;对A的第n列赋值</td>
</tr>
</tbody></table>
<p><strong>矩阵的变维</strong></p>
<p>矩阵变维可以使用变维符号”:”,也可以使用reshape函数</p>
<p><strong>reshape(X,m,n)：</strong>表示将已知的矩阵X变成m行n列的矩阵</p>
<p><strong>矩阵的变向</strong></p>
<table>
<thead>
<tr>
<th>命令名</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>rot(90)</td>
<td>将A逆时针方向旋转90°</td>
</tr>
<tr>
<td>rot(90,k)</td>
<td>将A逆时针方向旋转90°*k</td>
</tr>
<tr>
<td>fliplr(X)</td>
<td>将X左右翻转</td>
</tr>
<tr>
<td>flipud(X)</td>
<td>将X上下翻转</td>
</tr>
<tr>
<td>flipdim(X,dim)</td>
<td>dim=1时，对行翻转‘当dim=2时，对列翻转</td>
</tr>
</tbody></table>
<p><strong>矩阵的抽取</strong></p>
<table>
<thead>
<tr>
<th>命令名</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>diag(X,k)</td>
<td>抽取矩阵X的第k条对角线上的元素向量。当k=0时是主对角线；当k&gt;0抽取主对角线上边的；当k&lt;0时抽取主对角线下边的</td>
</tr>
<tr>
<td>diag(X)</td>
<td>抽取主对角线</td>
</tr>
<tr>
<td>diag(v,k)</td>
<td>使v为所得矩阵第k条对角线上的元素向量</td>
</tr>
<tr>
<td>diag(v)</td>
<td>是v为所得矩阵主对角线上的元素向量</td>
</tr>
<tr>
<td>tril(X)</td>
<td>提取矩阵X的主下三角部分</td>
</tr>
<tr>
<td>tril(X,k)</td>
<td>提取矩阵X的第k条对角线下面的部分（包括第k条对角线）</td>
</tr>
<tr>
<td>triu(X)</td>
<td>提取矩阵X的主上三角部分</td>
</tr>
<tr>
<td>triu(X,k)</td>
<td>提取矩阵X的第k条对角线上面的部分（包括第k条对角线）</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>matlab程序设计</title>
    <url>/2022/03/16/matlab%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="matlab程序设计"><a href="#matlab程序设计" class="headerlink" title="matlab程序设计"></a>matlab程序设计</h1><p>matlab的关系操作符和逻辑操作符与C语言的一致，就不再做笔记</p>
<h2 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h2><p><strong>for 循环</strong></p>
<p><strong>一般形式</strong>:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> x=array</span><br><span class="line">	&#123;commands&#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><strong>while循环</strong>：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (expression)</span><br><span class="line">	&#123;commands&#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><strong>if-else-end结构:</strong></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (expression)</span><br><span class="line">	&#123;commands&#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>线性规划</title>
    <url>/2022/03/16/matlab%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<h1 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h1><p>​    线性规划一般的形式是：</p>
<p>minx z = f(x) (1)</p>
<p>s. t. gi(x)&lt;=0 (i=1,2,…,m) （2）</p>
<p>（1）和(2)一起构成的是<strong>约束优化</strong></p>
<p>只有式(1)就是<strong>无约束优化</strong></p>
<p>f(x)是<strong>目标函数</strong></p>
<p>gi(x)&lt;=0是<strong>约束条件</strong></p>
<h2 id="线性规划模型"><a href="#线性规划模型" class="headerlink" title="线性规划模型"></a>线性规划模型</h2><p>建立线性规划模型有三个基本步奏:</p>
<p>第一步,找出待定的位置变量，并用符号表示他们</p>
<p>第二步，找出问题中所有的限制或约束，写出未知变量的线性方程或线性不等式</p>
<p>第三步，找到模型的目标或判据，写成决策变量的线性函数，以便求其最大值或最小值</p>
<h2 id="线性规划实例及编程求解"><a href="#线性规划实例及编程求解" class="headerlink" title="线性规划实例及编程求解"></a>线性规划实例及编程求解</h2><p>实际建模中，常用的解法：</p>
<ul>
<li>图解法</li>
<li>LINGO软件包求解</li>
<li>Excel中的规划求解</li>
<li>MATLAB软件包求解</li>
</ul>
<h3 id="用MATLAB优化工具箱解线性规划"><a href="#用MATLAB优化工具箱解线性规划" class="headerlink" title="用MATLAB优化工具箱解线性规划"></a>用MATLAB优化工具箱解线性规划</h3><p>MATLAB软件求解线下规划的命令如下：</p>
<ul>
<li><p>x = linprog(c,A,b)</p>
<p>用于求解模型</p>
<pre><code>                 min z = cx
</code></pre>
<p>​                    s.t. Ax &lt;= b</p>
</li>
<li><p>x = linprog(c,A,b,Aeq,beq)</p>
<p>用于求解模式</p>
<p>​                    min z = cx</p>
<p>​                    s.t.Ax &lt;= b</p>
<p>​                        Aeq.x=beq</p>
<p>若没有约束条件Ax&lt;=b,则另A =[],b =[]</p>
</li>
<li><p>x = linprog(c,A,b,Aeq,beq,vlb,vub)</p>
<p>用于求解模型</p>
<p>​            min z = cx</p>
<p>​            s.t. Ax &lt;= b</p>
<p>​                Aeq.x = beq</p>
<p>​                vlb&lt;=x&lt;=vub</p>
<p>没有等式约束Aeq.x=beq,则令Aeq=[],beq=[]</p>
</li>
<li><p>x = linprog(c,A,b,Aeq,beq,vlb,vub,x0)</p>
<p>也用于求解模型3，其中x0表示初始点</p>
</li>
<li><p>[x,fval] = linprog(…)</p>
<p>返回最优解x及x处的目标</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Lombok插件的使用</title>
    <url>/2022/01/12/mybatis%E4%BB%8B%E7%BB%8DLombok%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="Lombok插件的使用"><a href="#Lombok插件的使用" class="headerlink" title="Lombok插件的使用"></a>Lombok插件的使用</h1><p>Lombok插件能够方便pojo类的编写（实体类的编写）</p>
<p>使用Lombok插件的使用可以代替（get/set方法、构造器、toString、hashcode等的编写）</p>
<h2 id="Lombok插件的安装"><a href="#Lombok插件的安装" class="headerlink" title="Lombok插件的安装"></a>Lombok插件的安装</h2><p><strong>安装步骤：</strong></p>
<ol>
<li><p>在IDEA中安装<code>Lombok</code>插件:(Setting-&gt;plugins-&gt;insert…)</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/9413303106c2d550.jpg" alt="插件安装位置"> </p>
</li>
<li><p>导入Lombok的Jar包（project Lombok）[删除<code>&lt;scope&gt;&lt;/scope&gt;</code>]</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>使用Lombok</p>
</li>
</ol>
<h3 id="使用Lombok"><a href="#使用Lombok" class="headerlink" title="使用Lombok"></a>使用Lombok</h3><p>在以前 我们都是使用<code>Alt+Ins</code>来方便编写<code>get\set方法等等</code></p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/dd3102b4a930d7cc.jpg" alt="以前的实体类"> </p>
<p>但现在 我们仅仅使用<code>@注解</code>就能完成这个工作</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建与数据库映射的类</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> <img src="https://s3.bmp.ovh/imgs/2022/01/d81f21803cb7e162.jpg" alt="现在的编写方法"> </p>
<p><strong>注解的解释：</strong></p>
<ul>
<li><code>@Data：</code>代替get/set方法、无参构造、toString、hashcode、equals</li>
<li><code>@AllArgsConstructor：</code>代替有钱构造</li>
<li><code>@NoArgsConstructor：</code>代替无参构造</li>
</ul>
<p>这个插件还有很多的注解 但是最重要的只有以上三个</p>
]]></content>
  </entry>
  <entry>
    <title>mybatis使用注解开发</title>
    <url>/2022/01/12/mybatis%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="mybatis使用注解开发"><a href="#mybatis使用注解开发" class="headerlink" title="mybatis使用注解开发"></a>mybatis使用注解开发</h1><p>在对接口就行实现时，我们既可以使用xml文件进行配置，也可以使用注解也进行配置。</p>
<p>使用注解进行配置，操作简单，但是功能也简单，复杂的操作还得使用xml配置来实现</p>
<h2 id="使用注解实现查询"><a href="#使用注解实现查询" class="headerlink" title="使用注解实现查询"></a>使用注解实现查询</h2><p><del>使用注解实现查询的底层逻辑是反射</del></p>
<p>使用注解进行查询与使用xml进行配置除了没有实现的mapper.xml文件外其他的都一致</p>
<p>**文件结构： **</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/16961c88f4f87838.jpg" alt="文件结构"> </p>
<p><strong>少了StudentMapper,xml文件</strong></p>
<p><strong>接口代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试使用注解来实现查询</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from mybatis.student&quot;)</span></span><br><span class="line">    <span class="function">List&lt;student&gt; <span class="title">getStudentList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>此时的接口直接在抽象方法上使用注解<code>@Select</code>并且在<code>()</code>里编写SQL语句</p>
<p><strong>核心配置文件代码：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.mapper.StudentMapper&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>虽然没有了xml，但是还是需要进行配置，这里使用的参数是<code>class</code>自然对应我们接口类的全路径</p>
<p><strong>测试代码：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getStudentList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">        SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">        StudentMapper mapper = sqlSession.getMapper(StudentMapper.class);</span><br><span class="line">        List&lt;student&gt; studentList = mapper.getStudentList();</span><br><span class="line">        <span class="keyword">for</span> (student student : studentList) &#123;</span><br><span class="line">            System.out.println(student.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>测试代码和使用xml时一模一样 没有任何改变。</p>
<h2 id="自动提交事务"><a href="#自动提交事务" class="headerlink" title="自动提交事务"></a>自动提交事务</h2><p>之前我们使用的方法提交事务的方法是手动提交事务：</p>
<p><strong>until文件中的代码:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">sqlSessionFactory.openSession();</span><br></pre></td></tr></table></figure>

<p><strong>测试类中的代码：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InsertStudnet</span><span class="params">()</span></span>&#123;</span><br><span class="line">      MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">      SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">      <span class="comment">//获得了sqlSession就需要进行联结获得mapper</span></span><br><span class="line">      UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">      <span class="comment">//通过mapper对象来进行操作</span></span><br><span class="line">      mapper.InsertStudent(<span class="keyword">new</span> student(<span class="number">4</span>,<span class="string">&quot;王五&quot;</span>,<span class="string">&quot;123456&quot;</span>));</span><br><span class="line">      <span class="comment">//对于需要对数据库进行改动的如：“增删改” 都系要提交事务</span></span><br><span class="line">      sqlSession.commit();<span class="comment">//此代码就是提交事务</span></span><br><span class="line">      <span class="comment">//关闭sqlsession</span></span><br><span class="line">      sqlSession.close();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>但是现在 我们在开始SQLsession时就直接设置自动提交事务</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">sqlsessionFactory.openSession(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure>

<p>此时就不需要<code>sqlsession.commit()</code>,每一条语句都会自动提交 但是如果sql出错还是会提交 会出现错误</p>
<h2 id="使用注解实现有参查询"><a href="#使用注解实现有参查询" class="headerlink" title="使用注解实现有参查询"></a>使用注解实现有参查询</h2><p>实现基础：<code>@Param(&quot;名字&quot;)</code>注解的使用</p>
<p>在参数前使用<code>@Param(&quot;名字&quot;)</code>这个注解，然后在<code>@Select(“sql”)</code>中使用<code>#&#123;&quot;名字&quot;&#125;</code>来获取参数。</p>
<p><strong>接口代码：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试使用注解实现有参查询</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from mybatis.student where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function">student <span class="title">getStudentByID</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>有几个参数就在几个参数前加<code>@Param(&quot;名字&quot;)</code></p>
<h2 id="使用注解实现增加"><a href="#使用注解实现增加" class="headerlink" title="使用注解实现增加"></a>使用注解实现增加</h2><p><strong>接口代码:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试使用注解实现增加</span></span><br><span class="line">   <span class="meta">@Insert(&quot;insert into mybatis.student (id,name,password) values(#&#123;id&#125;,#&#123;name&#125;,#&#123;password&#125;)&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">InsertStudent</span><span class="params">(student student)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>我们这里的参数是<code>student</code>，是我创建的实体类 也就是引用类，引用类是不需要添加<code>@Params(&quot;名字&quot;)</code>的，直接使用即可。通过<code>#&#123;&quot;参数名&quot;&#125;</code>就直接获取了应用参数内部包含的参数。</p>
<p> 而且此时我们已经设置了自动提交事务，就不用在写<code>sqlsession.commit()</code>了。</p>
<h2 id="使用注解实现删除"><a href="#使用注解实现删除" class="headerlink" title="使用注解实现删除"></a>使用注解实现删除</h2><p><strong>接口代码：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试使用注解实现删除</span></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from mybatis.student where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">DeleteStudentById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure>



<h2 id="使用注解实现修改"><a href="#使用注解实现修改" class="headerlink" title="使用注解实现修改"></a>使用注解实现修改</h2><p><strong>接口代码:</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//测试使用注解实现修改</span><br><span class="line">  @Update(&quot;Update mybatis.student  set name = #&#123;name&#125;,password = #&#123;password&#125; where id = #&#123;id&#125;&quot;)</span><br><span class="line">  int UpdateStudentById(@Param(&quot;id&quot;) int id,@Param(&quot;name&quot;) String name,@Param(&quot;password&quot;) String password);</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>修改sql的书写，有几个参数就在几个参数前加<code>@Param(&quot;名字&quot;)</code></p>
<h2 id="Param-quot-名字-quot-使用的注意事项"><a href="#Param-quot-名字-quot-使用的注意事项" class="headerlink" title="@Param(&quot;名字&quot;)使用的注意事项"></a><code>@Param(&quot;名字&quot;)</code>使用的注意事项</h2><ul>
<li>有几个参数就在几个参数前加<code>@Param(&quot;名字&quot;)</code></li>
<li>基本数据类型以及String加注解，自己创造的实体类（引用数据类型）不用加注解</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>mybatis实现分页</title>
    <url>/2022/01/12/mybatis%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5/</url>
    <content><![CDATA[<h1 id="mybatis实现分页"><a href="#mybatis实现分页" class="headerlink" title="mybatis实现分页"></a>mybatis实现分页</h1><p><strong>分页的意义：</strong>分页的意义在于减少了数据的处理量</p>
<p>分页可以通过一下的方式实现：</p>
<ul>
<li>sql中的<code>limit</code>实现分页</li>
<li>在java代码中使用RowBounds实现分页</li>
</ul>
<h2 id="limit实现分页"><a href="#limit实现分页" class="headerlink" title="limit实现分页"></a>limit实现分页</h2><p><strong>核心SQL语法：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表格名 limit startIndex,pageSize</span><br></pre></td></tr></table></figure>

<p><strong>元素分析：</strong></p>
<ul>
<li>startIndex： 指的是重哪个数据开始查询(默认是从0开始的)</li>
<li>pagesize： 指纸张的大小，可以查询到几个元素</li>
</ul>
<p><strong>回顾mybatis实现一个操作需要的步奏：</strong></p>
<ul>
<li>编写接口</li>
<li>编写Mapper.xml（主要写sql）</li>
<li>编写测试方法</li>
</ul>
<p><strong>接口代码:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">List&lt;student&gt; <span class="title">getStudentListByLimit</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br></pre></td></tr></table></figure>

<p>这里使用的万能的map作为参数</p>
<p><strong>Mapper.xml代码:</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentListByLimit&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">       select * from mybatis.student limit #&#123;startIndex&#125;,#&#123;pageSize&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>有参数的查询必须要规定参数的类型</p>
<p>这里使用的resultMap（结果集映射）作为返回</p>
<p><strong>实现方法代码:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getStudentListByLimitTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">       MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">       SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">       StudentMapper mapper = sqlSession.getMapper(StudentMapper.class);</span><br><span class="line">       Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">       map.put(<span class="string">&quot;startIndex&quot;</span>,<span class="number">1</span>);</span><br><span class="line">       map.put(<span class="string">&quot;pageSize&quot;</span>,<span class="number">2</span>);</span><br><span class="line">       List&lt;student&gt; studentListByLimit = mapper.getStudentListByLimit(map);</span><br><span class="line">       <span class="keyword">for</span> (student student : studentListByLimit) &#123;</span><br><span class="line">           System.out.println(student.toString());</span><br><span class="line">       &#125;</span><br><span class="line">       sqlSession.close();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>固定格式</p>
<h2 id="RowBounds实现分页"><a href="#RowBounds实现分页" class="headerlink" title="RowBounds实现分页"></a>RowBounds实现分页</h2><p><strong>这是更加服了java面向对象特点的方法，没有在sql进行操作，在测试类中进行操作</strong></p>
<p><del>这种方法已经过时</del></p>
<p>操作步奏：</p>
<ul>
<li><p>接口</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">List<span class="tag">&lt;<span class="name">student</span>&gt;</span> getStudentByRowBounds();</span><br></pre></td></tr></table></figure></li>
<li><p>Mapper.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentByRowBounds&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentMap&quot;</span>&gt;</span></span><br><span class="line">       select * from mybatis.student</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getStudentByRowBounds</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">        SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">        <span class="comment">//其特点就是在sqlsession中直接进行select</span></span><br><span class="line">        <span class="comment">//第三个参数是RowBounds 因此需要创建</span></span><br><span class="line">        <span class="comment">//第一个参数是起始数，第二个参数是页面大小</span></span><br><span class="line">        RowBounds rowBounds = <span class="keyword">new</span> RowBounds(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">        List&lt;student&gt; students = sqlSession.selectList(<span class="string">&quot;com.dwx.mapper.StudentMapper.getStudentByRowBounds&quot;</span>, <span class="keyword">null</span>, rowBounds);</span><br><span class="line">        <span class="keyword">for</span> (student student : students) &#123;</span><br><span class="line">            System.out.println(student.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>selectList()方法有三个参数</p>
<p>第一个参数是我们执行这个方法的全路径，第二个数据一般是null，第三个数据是rowBounds</p>
<p><strong>注意：</strong>我们这里并没有使用mapper，而是使用selectList，这种方法是已经放弃了的</p>
]]></content>
  </entry>
  <entry>
    <title>mybatis实现复杂查询</title>
    <url>/2022/01/13/mybatis%E5%AE%9E%E7%8E%B0%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="mybatis实现复杂查询"><a href="#mybatis实现复杂查询" class="headerlink" title="mybatis实现复杂查询"></a>mybatis实现复杂查询</h1><h2 id="实现复杂查询的环境配置"><a href="#实现复杂查询的环境配置" class="headerlink" title="实现复杂查询的环境配置"></a>实现复杂查询的环境配置</h2><p>我们需要准备的东西：</p>
<ul>
<li>两个带有相联结的数据库表格（以student和teacher为例）</li>
<li>创建一个带有日志的使用lambok插件的优化配置后的java项目</li>
</ul>
<h3 id="两个数据库表格的准备"><a href="#两个数据库表格的准备" class="headerlink" title="两个数据库表格的准备"></a>两个数据库表格的准备</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `teacher` (</span><br><span class="line">  `id` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher(`id`, `name`) <span class="keyword">VALUES</span> (<span class="number">1</span>, 秦老师); </span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student` (</span><br><span class="line">  `id` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `fktid` (`tid`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `fktid` <span class="keyword">FOREIGN</span> KEY (`tid`) <span class="keyword">REFERENCES</span> `teacher` (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8<span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`id`, `name`, `tid`) <span class="keyword">VALUES</span> (<span class="number">1</span>, 小明, <span class="number">1</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`id`, `name`, `tid`) <span class="keyword">VALUES</span> (<span class="number">2</span>, 小红, <span class="number">1</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`id`, `name`, `tid`) <span class="keyword">VALUES</span> (<span class="number">3</span>, 小张, <span class="number">1</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`id`, `name`, `tid`) <span class="keyword">VALUES</span> (<span class="number">4</span>, 小李, <span class="number">1</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`id`, `name`, `tid`) <span class="keyword">VALUES</span> (<span class="number">5</span>, 小王, <span class="number">1</span>);</span><br></pre></td></tr></table></figure>

<p><strong>在执行sql时注意：</strong>不能直接执行玩全部的sql，因为可能在执行插入操作前，还没有将表格建好。</p>
<h3 id="java项目的准备"><a href="#java项目的准备" class="headerlink" title="java项目的准备"></a>java项目的准备</h3><ul>
<li><p>导入lambok包（直接放到父项目的xml中，这样每个子项目都能直接使用了）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>设置日志（在子项目的核心配置文件中设置最简单的日志）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--这里设置了一个最基础的日志--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>编写剩余的java程序（pojo，until等）</p>
</li>
</ul>
<p><strong>需要注意的点在于：</strong></p>
<ul>
<li><p>这一次我么使用了两个实体类，因此为了体现分离的原则，我们把Mapper.xml创建到resource文件夹下，但是要求<strong>1.mapper.xml也有相同的包结构 2.mapper.xml与其对应的抽象类同名</strong></p>
<p><img src="/dwx-tx.github.io/2022/01/13/mybatis%E5%AE%9E%E7%8E%B0%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2/截屏\mybatis复杂查询环境配置01.jpg" alt="文件位置关系"></p>
</li>
<li><p>创建好的每一个xml都需要在核心配置文件中进行配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/dwx/mapper/TeacherMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/dwx/mapper/StudentMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>解释上述为何要相同的包结构：</strong>因为在生成target文件时，由于两者有相同的包结构 就会被当成是在一个包下，这就符合了我们之前要求的<code>xml文件与接口类在同一包下且同名</code>的要求</p>
<p><img src="/dwx-tx.github.io/2022/01/13/mybatis%E5%AE%9E%E7%8E%B0%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2/截屏\mybatis复杂查询环境配置02.jpg" alt="target文件结构"></p>
<h2 id="处理多对一问题"><a href="#处理多对一问题" class="headerlink" title="处理多对一问题"></a>处理多对一问题</h2><p>处理多对一问题即：从多个表中查寻相关联的数据。</p>
<p>处理方法在MySQL中有两种：</p>
<ul>
<li>子查询</li>
<li>联表查询</li>
</ul>
<p>因此在java程序中也出现两种方法：</p>
<ul>
<li>按照查询嵌套处理</li>
<li>按照结果嵌套处理</li>
</ul>
<h3 id="按照查询嵌套处理"><a href="#按照查询嵌套处理" class="headerlink" title="按照查询嵌套处理"></a>按照查询嵌套处理</h3><p><strong>按照查询嵌套处理的逻辑等同于mysql中的子查询</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--第一种使用子查询 基本原理 在查询到tid后再查询tname--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudent_Teacher&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;studentTeacherMap&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.student1</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;studentTeacherMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--对于基本属性直接进行映射即可--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--但是对于引用参数 需要使用assocation来操作--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这里是嵌套一个方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getTeacher&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.teacher where id = #&#123;tid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意点：</strong></p>
<ul>
<li>对于<code>&lt;resultmap&gt;</code>,如果是基本类型，直接使用映射即可</li>
<li>如果是引用类型使用<code>&lt;association&gt;</code></li>
<li>如果是集合类型则使用<code>&lt;collection&gt;</code></li>
</ul>
<p>原理就是在每一次查询到tid时到teacher表中查询teacher的名字</p>
<p><strong>用SQL表现为：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> student1.`id`,student1.`name` ,(<span class="keyword">SELECT</span> teacher.`name` <span class="keyword">WHERE</span> teacher.`id` <span class="operator">=</span> student1.`tid`) <span class="keyword">AS</span> teachername</span><br><span class="line"><span class="keyword">FROM</span> student1,teacher</span><br></pre></td></tr></table></figure>

<h3 id="按照结果嵌套处理"><a href="#按照结果嵌套处理" class="headerlink" title="按照结果嵌套处理"></a>按照结果嵌套处理</h3><p><strong>使用这种方法进行处理相当于sql中的联表查询</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用联表查询--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudent_Teacher2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;studentTeachermap&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--下边是使用链表查询的sql--&gt;</span></span><br><span class="line">       select s.id sid,s.name sname,t.name tname</span><br><span class="line">       from student1 s,teacher t</span><br><span class="line">       where s.tid = t.id</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--西边是链表查询的resultmap--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;studentTeachermap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<ul>
<li>这里我们使用了大量的别名 因此在映射时，数据库一边的参数用别名表示</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> s.id sid,s.name sname,t.name tname</span><br><span class="line">        <span class="keyword">FROM</span> student1 s,teacher t</span><br><span class="line">        <span class="keyword">WHERE</span> s.tid <span class="operator">=</span> t.id</span><br></pre></td></tr></table></figure>

<h2 id="处理一对多问题"><a href="#处理一对多问题" class="headerlink" title="处理一对多问题"></a>处理一对多问题</h2><p><strong>环境准备：</strong>一对多，一个老师对应多个学生，因此老师的参数有一个是一个一student为类型的集合</p>
<p>而学生参数变为和数据库中参数一样。</p>
<p><strong>student类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//编写Student实体类</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//这里是一个联表 在java代码中 直接把链表的参数放进去</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>teacher类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//编写Teacher的实体类</span></span><br><span class="line"><span class="comment">//这里直接使用注解来完成实体类的完善</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Student&gt; studentList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>此时由于teacher类中使用了<code>List&lt;Student&gt;</code>因此在SQLresultmap中有所改变</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dwx.mapper.TeacherMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;teacherMap&quot;</span>&gt;</span></span><br><span class="line">        select s.id sid,s.name sname,t.name tname,t.id tid</span><br><span class="line">        from mybatis.teacher t, mybatis.student1 s</span><br><span class="line">        where s.tid = t.id</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;teacherMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;studentList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;stid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>使用<code>&lt;collection property=&quot;java中的属性&quot; foType=&quot;list的类型&quot;&gt;&lt;/collection&gt;</code>这样来给<code>List集合</code>做映射。</p>
]]></content>
  </entry>
  <entry>
    <title>mybatis日志工厂</title>
    <url>/2022/01/11/mybatis%E6%97%A5%E5%BF%97%E5%B7%A5%E5%8E%82/</url>
    <content><![CDATA[<h1 id="mybatis日志工厂"><a href="#mybatis日志工厂" class="headerlink" title="mybatis日志工厂"></a>mybatis日志工厂</h1><p>如果一个数据库操作出现了一个异常，我们需要进行排除。日志就是最好的助手。</p>
<p>在以前，我们在程序拍错时使用的是<code>sout</code>获得<code>debug</code></p>
<p>现在，我们就能够使用日志来进行排错了</p>
<p> <a href="https://mybatis.net.cn/logging.html">日志_MyBatis中文网</a> </p>
<p>日志我们只需要了解两种：<code>STDOUT_LOGGING</code>和 <code>LOG4J</code></p>
<h2 id="STDOUT-LOGGING的使用"><a href="#STDOUT-LOGGING的使用" class="headerlink" title="STDOUT_LOGGING的使用"></a>STDOUT_LOGGING的使用</h2><p> STDOUT_LOGGING 的使用十分方便 只需要在核心配置文件（mybatis-config.xml）中配置settings就行</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>配置完就可以直接进行测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Logging initialized using <span class="string">&#x27;class org.apache.ibatis.logging.stdout.StdOutImpl&#x27;</span> adapter.</span><br><span class="line">Class not found: org.jboss.vfs.VFS</span><br><span class="line">JBoss <span class="number">6</span> VFS API is not available in <span class="keyword">this</span> environment.</span><br><span class="line">Class not found: org.jboss.vfs.VirtualFile</span><br><span class="line">VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in <span class="keyword">this</span> environment.</span><br><span class="line">Using VFS adapter org.apache.ibatis.io.DefaultVFS</span><br><span class="line">Find JAR URL: file:/E:/java/MyBatisStudy/Mybatis03/target/classes/com/dwx/pojo</span><br><span class="line">Not a JAR: file:/E:/java/MyBatisStudy/Mybatis03/target/classes/com/dwx/pojo</span><br><span class="line">Reader entry: student.class</span><br><span class="line">Listing file:/E:/java/MyBatisStudy/Mybatis03/target/classes/com/dwx/pojo</span><br><span class="line">Find JAR URL: file:/E:/java/MyBatisStudy/Mybatis03/target/classes/com/dwx/pojo/student.class</span><br><span class="line">Not a JAR: file:/E:/java/MyBatisStudy/Mybatis03/target/classes/com/dwx/pojo/student.class</span><br><span class="line">Reader entry: ����   &lt; :</span><br><span class="line">Checking to see <span class="keyword">if</span> <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">dwx</span>.<span class="title">pojo</span>.<span class="title">student</span> <span class="title">matches</span> <span class="title">criteria</span> [<span class="title">is</span> <span class="title">assignable</span> <span class="title">to</span> <span class="title">Object</span>]</span></span><br><span class="line"><span class="class"><span class="title">PooledDataSource</span> <span class="title">forcefully</span> <span class="title">closed</span>/<span class="title">removed</span> <span class="title">all</span> <span class="title">connections</span>.</span></span><br><span class="line"><span class="class"><span class="title">PooledDataSource</span> <span class="title">forcefully</span> <span class="title">closed</span>/<span class="title">removed</span> <span class="title">all</span> <span class="title">connections</span>.</span></span><br><span class="line"><span class="class"><span class="title">PooledDataSource</span> <span class="title">forcefully</span> <span class="title">closed</span>/<span class="title">removed</span> <span class="title">all</span> <span class="title">connections</span>.</span></span><br><span class="line"><span class="class"><span class="title">PooledDataSource</span> <span class="title">forcefully</span> <span class="title">closed</span>/<span class="title">removed</span> <span class="title">all</span> <span class="title">connections</span>.</span></span><br><span class="line"><span class="class"><span class="title">Find</span> <span class="title">JAR</span> <span class="title">URL</span>: <span class="title">file</span>:/<span class="title">E</span>:/<span class="title">java</span>/<span class="title">MyBatisStudy</span>/<span class="title">Mybatis03</span>/<span class="title">target</span>/<span class="title">test</span>-<span class="title">classes</span>/<span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span></span></span><br><span class="line"><span class="class"><span class="title">Not</span> <span class="title">a</span> <span class="title">JAR</span>: <span class="title">file</span>:/<span class="title">E</span>:/<span class="title">java</span>/<span class="title">MyBatisStudy</span>/<span class="title">Mybatis03</span>/<span class="title">target</span>/<span class="title">test</span>-<span class="title">classes</span>/<span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span></span></span><br><span class="line"><span class="class"><span class="title">Reader</span> <span class="title">entry</span>: <span class="title">test</span>.<span class="title">class</span></span></span><br><span class="line"><span class="class"><span class="title">Listing</span> <span class="title">file</span>:/<span class="title">E</span>:/<span class="title">java</span>/<span class="title">MyBatisStudy</span>/<span class="title">Mybatis03</span>/<span class="title">target</span>/<span class="title">test</span>-<span class="title">classes</span>/<span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span></span></span><br><span class="line"><span class="class"><span class="title">Find</span> <span class="title">JAR</span> <span class="title">URL</span>: <span class="title">file</span>:/<span class="title">E</span>:/<span class="title">java</span>/<span class="title">MyBatisStudy</span>/<span class="title">Mybatis03</span>/<span class="title">target</span>/<span class="title">test</span>-<span class="title">classes</span>/<span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span>/<span class="title">test</span>.<span class="title">class</span></span></span><br><span class="line"><span class="class"><span class="title">Not</span> <span class="title">a</span> <span class="title">JAR</span>: <span class="title">file</span>:/<span class="title">E</span>:/<span class="title">java</span>/<span class="title">MyBatisStudy</span>/<span class="title">Mybatis03</span>/<span class="title">target</span>/<span class="title">test</span>-<span class="title">classes</span>/<span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span>/<span class="title">test</span>.<span class="title">class</span></span></span><br><span class="line"><span class="class"><span class="title">Reader</span> <span class="title">entry</span>: ����   &lt; <span class="title">U</span></span></span><br><span class="line"><span class="class"><span class="title">Find</span> <span class="title">JAR</span> <span class="title">URL</span>: <span class="title">file</span>:/<span class="title">E</span>:/<span class="title">java</span>/<span class="title">MyBatisStudy</span>/<span class="title">Mybatis03</span>/<span class="title">target</span>/<span class="title">classes</span>/<span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span></span></span><br><span class="line"><span class="class"><span class="title">Not</span> <span class="title">a</span> <span class="title">JAR</span>: <span class="title">file</span>:/<span class="title">E</span>:/<span class="title">java</span>/<span class="title">MyBatisStudy</span>/<span class="title">Mybatis03</span>/<span class="title">target</span>/<span class="title">classes</span>/<span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span></span></span><br><span class="line"><span class="class"><span class="title">Reader</span> <span class="title">entry</span>: <span class="title">StudentMapper</span>.<span class="title">class</span></span></span><br><span class="line"><span class="class"><span class="title">Reader</span> <span class="title">entry</span>: <span class="title">StudentMapper</span>.<span class="title">xml</span></span></span><br><span class="line"><span class="class"><span class="title">Listing</span> <span class="title">file</span>:/<span class="title">E</span>:/<span class="title">java</span>/<span class="title">MyBatisStudy</span>/<span class="title">Mybatis03</span>/<span class="title">target</span>/<span class="title">classes</span>/<span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span></span></span><br><span class="line"><span class="class"><span class="title">Find</span> <span class="title">JAR</span> <span class="title">URL</span>: <span class="title">file</span>:/<span class="title">E</span>:/<span class="title">java</span>/<span class="title">MyBatisStudy</span>/<span class="title">Mybatis03</span>/<span class="title">target</span>/<span class="title">classes</span>/<span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span>/<span class="title">StudentMapper</span>.<span class="title">class</span></span></span><br><span class="line"><span class="class"><span class="title">Not</span> <span class="title">a</span> <span class="title">JAR</span>: <span class="title">file</span>:/<span class="title">E</span>:/<span class="title">java</span>/<span class="title">MyBatisStudy</span>/<span class="title">Mybatis03</span>/<span class="title">target</span>/<span class="title">classes</span>/<span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span>/<span class="title">StudentMapper</span>.<span class="title">class</span></span></span><br><span class="line"><span class="class"><span class="title">Reader</span> <span class="title">entry</span>: ����   &lt;   <span class="title">com</span>/<span class="title">dwx</span>/<span class="title">mapper</span>/<span class="title">StudentMapper</span>  <span class="title">java</span>/<span class="title">lang</span>/<span class="title">Object</span> <span class="title">getStudentList</span> ()<span class="title">Ljava</span>/<span class="title">util</span>/<span class="title">List</span></span>; 	Signature *()Ljava/util/List&lt;Lcom/dwx/pojo/student;&gt;; </span><br><span class="line">Find JAR URL: file:/E:/java/MyBatisStudy/Mybatis03/target/classes/com/dwx/mapper/StudentMapper.xml</span><br><span class="line">Not a JAR: file:/E:/java/MyBatisStudy/Mybatis03/target/classes/com/dwx/mapper/StudentMapper.xml</span><br><span class="line">Reader entry: &lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="line">Checking to see <span class="keyword">if</span> <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">dwx</span>.<span class="title">mapper</span>.<span class="title">test</span> <span class="title">matches</span> <span class="title">criteria</span> [<span class="title">is</span> <span class="title">assignable</span> <span class="title">to</span> <span class="title">Object</span>]</span></span><br><span class="line"><span class="class"><span class="title">Checking</span> <span class="title">to</span> <span class="title">see</span> <span class="title">if</span> <span class="title">class</span> <span class="title">com</span>.<span class="title">dwx</span>.<span class="title">mapper</span>.<span class="title">StudentMapper</span> <span class="title">matches</span> <span class="title">criteria</span> [<span class="title">is</span> <span class="title">assignable</span> <span class="title">to</span> <span class="title">Object</span>]</span></span><br><span class="line"><span class="class"><span class="title">Opening</span> <span class="title">JDBC</span> <span class="title">Connection</span></span></span><br><span class="line"><span class="class"><span class="title">Created</span> <span class="title">connection</span> 473153915.</span></span><br><span class="line"><span class="class"><span class="title">Setting</span> <span class="title">autocommit</span> <span class="title">to</span> <span class="title">false</span> <span class="title">on</span> <span class="title">JDBC</span> <span class="title">Connection</span> [<span class="title">com</span>.<span class="title">mysql</span>.<span class="title">cj</span>.<span class="title">jdbc</span>.<span class="title">ConnectionImpl</span>@1<span class="title">c33c17b</span>]</span></span><br><span class="line"><span class="class"></span>==&gt;  Preparing: select * from mybatis.student</span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Columns: id, name, password</span><br><span class="line">&lt;==        Row: <span class="number">1</span>, 张三, welcome</span><br><span class="line">&lt;==        Row: <span class="number">2</span>, 李四, welcome</span><br><span class="line">&lt;==        Row: <span class="number">4</span>, 王五, <span class="number">123456</span></span><br><span class="line">&lt;==        Row: <span class="number">17</span>, dwx, welcome</span><br><span class="line">&lt;==        Row: <span class="number">100</span>, 李一百, welcome</span><br><span class="line">&lt;==      Total: <span class="number">5</span></span><br><span class="line">student&#123;id=<span class="number">1</span>, name=<span class="string">&#x27;张三&#x27;</span>, pwd=<span class="string">&#x27;welcome&#x27;</span>&#125;</span><br><span class="line">student&#123;id=<span class="number">2</span>, name=<span class="string">&#x27;李四&#x27;</span>, pwd=<span class="string">&#x27;welcome&#x27;</span>&#125;</span><br><span class="line">student&#123;id=<span class="number">4</span>, name=<span class="string">&#x27;王五&#x27;</span>, pwd=<span class="string">&#x27;123456&#x27;</span>&#125;</span><br><span class="line">student&#123;id=<span class="number">17</span>, name=<span class="string">&#x27;dwx&#x27;</span>, pwd=<span class="string">&#x27;welcome&#x27;</span>&#125;</span><br><span class="line">student&#123;id=<span class="number">100</span>, name=<span class="string">&#x27;李一百&#x27;</span>, pwd=<span class="string">&#x27;welcome&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这种日志的特点在于：</p>
<ul>
<li>使用简单 能实现基本功能</li>
<li>只在控制台输出 不可以DIy 不可以控制输出格式</li>
</ul>
<h2 id="LOG4J的使用"><a href="#LOG4J的使用" class="headerlink" title="LOG4J的使用"></a>LOG4J的使用</h2><p>LOG4J应该是使用更加广泛地，但是他的使用需要进行配置，使用起来有点麻烦</p>
<p><strong>LOG4J的使用步骤：</strong></p>
<ul>
<li>导入LOG4J的依赖</li>
<li>在resource文件下新增一个配置文件(log4j.properties)</li>
<li>编写log4j配置文件（网上搜 不用记）（会在博客中写的）</li>
<li>设置log4j为日志的实现</li>
<li>使用log4j</li>
</ul>
<h3 id="导入LOG4J的依赖"><a href="#导入LOG4J的依赖" class="headerlink" title="导入LOG4J的依赖"></a>导入LOG4J的依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在子程序的pom.xml文件中配置</p>
<h3 id="在resource文件下新增一个配置文件-log4j-properties"><a href="#在resource文件下新增一个配置文件-log4j-properties" class="headerlink" title="在resource文件下新增一个配置文件(log4j.properties)"></a>在resource文件下新增一个配置文件(log4j.properties)</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># priority  :debug&lt;info&lt;warn&lt;error</span></span><br><span class="line"><span class="comment">#you cannot specify every priority with different file for log4j</span></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">debug,stdout,info,debug,warn,error </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#console</span></span><br><span class="line"><span class="meta">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender </span></span><br><span class="line"><span class="meta">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.PatternLayout </span></span><br><span class="line"><span class="meta">log4j.appender.stdout.layout.ConversionPattern</span>= <span class="string">[%d&#123;yyyy-MM-dd HH:mm:ss a&#125;]:%p %l%m%n</span></span><br><span class="line"><span class="comment">#info log</span></span><br><span class="line"><span class="meta">log4j.logger.info</span>=<span class="string">info</span></span><br><span class="line"><span class="meta">log4j.appender.info</span>=<span class="string">org.apache.log4j.DailyRollingFileAppender </span></span><br><span class="line"><span class="meta">log4j.appender.info.DatePattern</span>=<span class="string">&#x27;_&#x27;yyyy-MM-dd&#x27;.log&#x27;</span></span><br><span class="line"><span class="meta">log4j.appender.info.File</span>=<span class="string">./logs/log.log</span></span><br><span class="line"><span class="meta">log4j.appender.info.Append</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.info.Threshold</span>=<span class="string">INFO</span></span><br><span class="line"><span class="meta">log4j.appender.info.layout</span>=<span class="string">org.apache.log4j.PatternLayout </span></span><br><span class="line"><span class="meta">log4j.appender.info.layout.ConversionPattern</span>=<span class="string">%d&#123;yyyy-MM-dd HH:mm:ss a&#125; [Thread: %t][ Class:%c &gt;&gt; Method: %l ]%n%p:%m%n</span></span><br><span class="line"><span class="comment">#debug log</span></span><br><span class="line"><span class="meta">log4j.logger.debug</span>=<span class="string">debug</span></span><br><span class="line"><span class="meta">log4j.appender.debug</span>=<span class="string">org.apache.log4j.DailyRollingFileAppender </span></span><br><span class="line"><span class="meta">log4j.appender.debug.DatePattern</span>=<span class="string">&#x27;_&#x27;yyyy-MM-dd&#x27;.log&#x27;</span></span><br><span class="line"><span class="meta">log4j.appender.debug.File</span>=<span class="string">./logs/log.log</span></span><br><span class="line"><span class="meta">log4j.appender.debug.Append</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.debug.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.debug.layout</span>=<span class="string">org.apache.log4j.PatternLayout </span></span><br><span class="line"><span class="meta">log4j.appender.debug.layout.ConversionPattern</span>=<span class="string">%d&#123;yyyy-MM-dd HH:mm:ss a&#125; [Thread: %t][ Class:%c &gt;&gt; Method: %l ]%n%p:%m%n</span></span><br><span class="line"><span class="comment">#warn log</span></span><br><span class="line"><span class="meta">log4j.logger.warn</span>=<span class="string">warn</span></span><br><span class="line"><span class="meta">log4j.appender.warn</span>=<span class="string">org.apache.log4j.DailyRollingFileAppender </span></span><br><span class="line"><span class="meta">log4j.appender.warn.DatePattern</span>=<span class="string">&#x27;_&#x27;yyyy-MM-dd&#x27;.log&#x27;</span></span><br><span class="line"><span class="meta">log4j.appender.warn.File</span>=<span class="string">./logs/log.log</span></span><br><span class="line"><span class="meta">log4j.appender.warn.Append</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.warn.Threshold</span>=<span class="string">WARN</span></span><br><span class="line"><span class="meta">log4j.appender.warn.layout</span>=<span class="string">org.apache.log4j.PatternLayout </span></span><br><span class="line"><span class="meta">log4j.appender.warn.layout.ConversionPattern</span>=<span class="string">%d&#123;yyyy-MM-dd HH:mm:ss a&#125; [Thread: %t][ Class:%c &gt;&gt; Method: %l ]%n%p:%m%n</span></span><br><span class="line"><span class="comment">#error</span></span><br><span class="line"><span class="meta">log4j.logger.error</span>=<span class="string">error</span></span><br><span class="line"><span class="meta">log4j.appender.error</span> = <span class="string">org.apache.log4j.DailyRollingFileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.error.DatePattern</span>=<span class="string">&#x27;_&#x27;yyyy-MM-dd&#x27;.log&#x27;</span></span><br><span class="line"><span class="meta">log4j.appender.error.File</span> =<span class="string">./logs/log.log</span></span><br><span class="line"><span class="meta">log4j.appender.error.Append</span> = <span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.error.Threshold</span> = <span class="string">ERROR </span></span><br><span class="line"><span class="meta">log4j.appender.error.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.error.layout.ConversionPattern</span> = <span class="string">%d&#123;yyyy-MM-dd HH:mm:ss a&#125; [Thread: %t][ Class:%c &gt;&gt; Method: %l ]%n%p:%m%n</span></span><br></pre></td></tr></table></figure>

<h3 id="设置log4j为日志的实现"><a href="#设置log4j为日志的实现" class="headerlink" title="设置log4j为日志的实现"></a>设置log4j为日志的实现</h3><p>在核心配置文件中写</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;LOG4J&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用log4j"><a href="#使用log4j" class="headerlink" title="使用log4j"></a>使用log4j</h3><p>使用log4j有两种使用办法：</p>
<ul>
<li>直接使用</li>
<li>编写使用方法</li>
</ul>
<h4 id="直接使用"><a href="#直接使用" class="headerlink" title="直接使用"></a>直接使用</h4><p>在进行过以上的操作时，直接在操作类中写<code>Logger logger = Logger.getLogger(&quot;测试方法类.class&quot;)</code></p>
<p>直接使用即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.student;</span><br><span class="line"><span class="keyword">import</span> com.dwx.untils.MyBatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注意 此处导包要导Apache的包</span></span><br><span class="line">    Logger logger = Logger.getLogger(test.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getStudentListTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//首先需要获取到 mapper</span></span><br><span class="line">        <span class="comment">//以下的操作都是固定的 不需要进行任何改变</span></span><br><span class="line">        MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">        SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">        StudentMapper mapper = sqlSession.getMapper(StudentMapper.class);</span><br><span class="line">        List&lt;student&gt; studentList = mapper.getStudentList();</span><br><span class="line">        <span class="keyword">for</span> (student student : studentList) &#123;</span><br><span class="line">            System.out.println(student.toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>注意：创建Logger 导包是一定要导Apache log4j的包</p>
<p>在运行后，会产生一个logs文件，里边有log日志</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/a298a57348da1abc.jpg" alt="文件的产生"> </p>
<p>文件中的内容和在控制台中输出的内容一致</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/fdf07f460ed94621.jpg" alt="文件中的内容"> </p>
<h3 id="使用测试方法"><a href="#使用测试方法" class="headerlink" title="使用测试方法"></a>使用测试方法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.student;</span><br><span class="line"><span class="keyword">import</span> com.dwx.untils.MyBatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注意 此处导包要导Apache的包</span></span><br><span class="line">    Logger logger = Logger.getLogger(test.class);</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">log4jTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;###################infor#################&quot;</span>);</span><br><span class="line">        logger.debug(<span class="string">&quot;##################debug#################&quot;</span>);</span><br><span class="line">        logger.error(<span class="string">&quot;##################error##################&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这样使用的好处是，在log文件中只会出现我们设置的这几个数据</p>
<p><strong>控制台中的输出</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">com.dwx.mapper.test,log4jTest</span><br><span class="line">[2022-01-11 21:01:04 下午]:INFO com.dwx.mapper.test.log4jTest(test.java:30)###################infor#################</span><br><span class="line">[2022-01-11 21:01:04 下午]:DEBUG com.dwx.mapper.test.log4jTest(test.java:31)##################debug#################</span><br><span class="line">[2022-01-11 21:01:04 下午]:ERROR com.dwx.mapper.test.log4jTest(test.java:32)##################error##################</span><br></pre></td></tr></table></figure>

<p><strong>log.log中的输出</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2022-01-11 21:01:04 下午 [Thread: main][ Class:com.dwx.mapper.test &gt;&gt; Method: com.dwx.mapper.test.log4jTest(test.java:30) ]</span><br><span class="line">INFO:###################infor#################</span><br><span class="line">2022-01-11 21:01:04 下午 [Thread: main][ Class:com.dwx.mapper.test &gt;&gt; Method: com.dwx.mapper.test.log4jTest(test.java:30) ]</span><br><span class="line">INFO:###################infor#################</span><br><span class="line">2022-01-11 21:01:04 下午 [Thread: main][ Class:com.dwx.mapper.test &gt;&gt; Method: com.dwx.mapper.test.log4jTest(test.java:31) ]</span><br><span class="line">DEBUG:##################debug#################</span><br><span class="line">2022-01-11 21:01:04 下午 [Thread: main][ Class:com.dwx.mapper.test &gt;&gt; Method: com.dwx.mapper.test.log4jTest(test.java:32) ]</span><br><span class="line">ERROR:##################error##################</span><br><span class="line">2022-01-11 21:01:04 下午 [Thread: main][ Class:com.dwx.mapper.test &gt;&gt; Method: com.dwx.mapper.test.log4jTest(test.java:32) ]</span><br><span class="line">ERROR:##################error##################</span><br><span class="line">2022-01-11 21:01:04 下午 [Thread: main][ Class:com.dwx.mapper.test &gt;&gt; Method: com.dwx.mapper.test.log4jTest(test.java:32) ]</span><br><span class="line">ERROR:##################error##################</span><br><span class="line">2022-01-11 21:01:04 下午 [Thread: main][ Class:com.dwx.mapper.test &gt;&gt; Method: com.dwx.mapper.test.log4jTest(test.java:32) ]</span><br><span class="line">ERROR:##################error##################</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>mybatis进阶版的增删改查</title>
    <url>/2022/01/05/mybatis%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E7%9A%84%E8%BF%9B%E9%98%B6/</url>
    <content><![CDATA[<p>mybatis的进阶版的增删改查是包括两个方面：“用map来代替参数”,“模糊查询”</p>
<h2 id="用map来代替参数"><a href="#用map来代替参数" class="headerlink" title="用map来代替参数"></a>用map来代替参数</h2><p><strong>原因：</strong>map里边存的是键值对，&lt;”key”,value&gt;，要使用时就直接通过调用键值对来实现</p>
<p>map存储的数据没有大小，没有属性限制，因此使用起来更加方便</p>
<p><strong>UserMapper的方法：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">student <span class="title">getStudentMap</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br><span class="line">    <span class="comment">//对于需要对数据库进行操作的操作 以添加用户为例</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InsertStudentMap</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br><span class="line">    <span class="comment">//测试模糊查询</span></span><br></pre></td></tr></table></figure>

<p><strong>xml里进行配置</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--使用map的查询--&gt;</span><br><span class="line">   &lt;!--map参数类型直接填map--&gt;</span><br><span class="line">   &lt;select id=<span class="string">&quot;getStudentMap&quot;</span> parameterType=<span class="string">&quot;map&quot;</span> resultType=<span class="string">&quot;com.dwx.pojo.student&quot;</span>&gt;</span><br><span class="line">       SELECT * FROM mybatis.student WHERE id = #&#123;studentid&#125;</span><br><span class="line">   &lt;/select&gt;</span><br><span class="line">   &lt;insert id=<span class="string">&quot;InsertStudentMap&quot;</span> parameterType=<span class="string">&quot;map&quot;</span>&gt;</span><br><span class="line">       insert into mybatis.student (id,name,password) VALUES (#&#123;StudentID&#125;,#&#123;StudentName&#125;,#&#123;StudentPassword&#125;)</span><br><span class="line">   &lt;/insert&gt;</span><br></pre></td></tr></table></figure>

<p><strong>测试方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getStudentMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">    MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">    SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">    UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">    <span class="comment">//因为是使用map作为参数类型 因此需要创建map</span></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;studentid&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    student studentMap = mapper.getStudentMap(map);</span><br><span class="line">    System.out.println(studentMap.getId());</span><br><span class="line">    <span class="comment">//注意查询的要点在于设置返回值类型</span></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InsertStudnetMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//固定格式得到mapper</span></span><br><span class="line">    MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">    SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">    UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">    <span class="comment">//设置Map</span></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;StudentID&quot;</span>,<span class="number">100</span>);</span><br><span class="line">    map.put(<span class="string">&quot;StudentName&quot;</span>,<span class="string">&quot;李一百&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;StudentPassword&quot;</span>,<span class="string">&quot;welcome&quot;</span>);</span><br><span class="line">    mapper.InsertStudentMap(map);</span><br><span class="line">    <span class="comment">//一定要记得 对于数据库数据有改动的操作一定要提交事务</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    <span class="comment">//用完关闭资源</span></span><br><span class="line">    sqlSession.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><p><strong>注意：</strong>模糊查询在sql语句中的特殊点就是 把“=”代替为“like” 把参数需要进行模糊的地方使用<code>%</code>代替如<code>%</code>参数<code>%</code></p>
<p>问题来了，这个%%的插入可以是在SQL里直接带的 也可以是传参时传递过去的，因此这里产生了两种模糊查询的方法</p>
<h4 id="直接在sql语句中添加"><a href="#直接在sql语句中添加" class="headerlink" title="直接在sql语句中添加%%"></a>直接在sql语句中添加%%</h4><p><strong>xml中的配置</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getList1&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.dwx.pojo.student&quot;</span>&gt;</span></span><br><span class="line">      SELECT * FROM mybatis.student WHERE name like &quot;%&quot;#&#123;name&#125;&quot;%&quot;</span><br><span class="line"> <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>测试类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getList</span><span class="params">()</span></span>&#123;</span><br><span class="line">    MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">    SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">    UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">    <span class="comment">//模糊查询的关键在于模糊的地方用%代替</span></span><br><span class="line">    <span class="comment">//因此出现了两种模糊查询的方法</span></span><br><span class="line">    <span class="comment">//第一种是在传参是直接将%%带上传过去</span></span><br><span class="line">    <span class="comment">//第二种方式是在SQL中固定添加%% 参数只需要传想要查询的模糊参数</span></span><br><span class="line">    List&lt;student&gt; list = mapper.getList1(<span class="string">&quot;李&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (student student : list) &#123;</span><br><span class="line">        System.out.println(student.getId()+<span class="string">&quot;  &quot;</span>+student.getName()+<span class="string">&quot;  &quot;</span>+student.getPassword());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="传参时带上"><a href="#传参时带上" class="headerlink" title="传参时带上%%"></a>传参时带上%%</h4><p><strong>xml中的配置:</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getList1&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.dwx.pojo.student&quot;</span>&gt;</span></span><br><span class="line">       SELECT * FROM mybatis.student WHERE name like #&#123;name&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>测试类:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">        SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">        UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        <span class="comment">//模糊查询的关键在于模糊的地方用%代替</span></span><br><span class="line">        <span class="comment">//因此出现了两种模糊查询的方法</span></span><br><span class="line">        <span class="comment">//第一种是在传参是直接将%%带上传过去</span></span><br><span class="line">       List&lt;student&gt; list = mapper.getList1(<span class="string">&quot;%李%&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (student student : list) &#123;</span><br><span class="line">            System.out.println(student.getId()+<span class="string">&quot;  &quot;</span>+student.getName()+<span class="string">&quot;  &quot;</span>+student.getPassword());</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">    </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>mybatis结果集映射</title>
    <url>/2022/01/11/mybatis%E7%BB%93%E6%9E%9C%E9%9B%86%E6%98%A0%E5%B0%84/</url>
    <content><![CDATA[<h1 id="mybatis结果集映射"><a href="#mybatis结果集映射" class="headerlink" title="mybatis结果集映射"></a>mybatis结果集映射</h1><p>结果集映射（resultType）用来解决我们实体类中的参数名与数据库中列名不一致的问题。</p>
<p>当我们的实体类的参数名与数据库中的列名不一致是 就会发生查询错误</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/ea711f04c203d5fc.jpg" alt="实体类的参数名与数据库中的列名不一致"> </p>
<p>此时的查询结果</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/1f69f6aaa3acaa43.jpg" alt="错误的查询结果"> </p>
<p>我们可以发现 相同的查询正确，但是错误的查询的是null 查询不到</p>
<h2 id="产生错误的原因"><a href="#产生错误的原因" class="headerlink" title="产生错误的原因"></a>产生错误的原因</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.student</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这个SQL等共同于--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">    select id,name,password from mybatis.student</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span>    </span><br></pre></td></tr></table></figure>

<p>可以看到 在student里根本没有查询到的password参数。因此产生了错误。</p>
<p><strong>解决方法：</strong></p>
<ul>
<li>使用别名</li>
<li>结果集映射</li>
</ul>
<h2 id="使用别名"><a href="#使用别名" class="headerlink" title="使用别名"></a>使用别名</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">    select id,name,password as pwd from mybatis.student</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span>    </span><br></pre></td></tr></table></figure>

<p>这样就能直接查询了 但是这种方法是十分基础的，写的代码数量多。</p>
<h2 id="结果集映射（resultType）"><a href="#结果集映射（resultType）" class="headerlink" title="结果集映射（resultType）"></a>结果集映射（resultType）</h2><p>使用结果集映射 是在接口类的实现的mapper文件中操作，而不是和我们原来在核心配置文件中操作</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dwx.mapper.StudentMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;pwd&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentList&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentMap&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>元素分析：</p>
<p><strong>column：</strong>“列”，是指数据库中的字段的列名</p>
<p><strong>property：</strong>“属性”，是指实体类中的属性</p>
<p>可以把每个参数都进行映射，也可以只对实体类中的参数与数据库中列名不同的进行映射</p>
]]></content>
  </entry>
  <entry>
    <title>mybatis配置解析之别名</title>
    <url>/2022/01/10/mybatis%E9%85%8D%E7%BD%AE%E4%B9%8B%E5%88%AB%E5%90%8D/</url>
    <content><![CDATA[<h1 id="mybatis配置之别名"><a href="#mybatis配置之别名" class="headerlink" title="mybatis配置之别名"></a>mybatis配置之别名</h1><p> <a href="https://mybatis.net.cn/configuration.html#typeAliases">配置_MyBatis中文网</a> </p>
<h2 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h2><p><strong>使用别名的意义：</strong>能够在xml使用用java中编写的实体类是降低编写代码的冗余性。（全部路径的包名可以不用写了）</p>
<p>实际上就是给java中的实体类编写一个短的名字</p>
<h2 id="使用别名的方法"><a href="#使用别名的方法" class="headerlink" title="使用别名的方法"></a>使用别名的方法</h2><p><strong>命名别名</strong>可以大致分为两个方法：一、把一个个实体类命名成别名。二、直接引入pojo包 把这个包中的所有实体类都命名成别名；</p>
<p><strong>使用别名的方法：</strong>在核心配置文件（mybatis-config.xml）中配置，在这个核心文件中配置过得xml文件中直接使用。</p>
<p>在配置别名时，需要注意的是。这个xml配置文件的标签的使用有先后顺序，不能随意位置放置。</p>
<h3 id="将一个个实体类命名成别名"><a href="#将一个个实体类命名成别名" class="headerlink" title="将一个个实体类命名成别名"></a>将一个个实体类命名成别名</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--在这里将我们创建的实体类进行别名--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在核心配置文件中配置别名--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在下边mapper中注册的xml中就能使用这个别名了--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这种方法是一下子别名一个实体类--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;Student&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.dwx.pojo.student&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>上述是xml中的配置</p>
<p>在配置好的xml中可以直接使用：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dwx.mapper.StudentMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这种方法的特点：</p>
<ul>
<li>在实体类少时可以使用（方便），但是实体类多了以后就十分麻烦</li>
<li>别名可以DIY 可以在alias后随便设置别名</li>
</ul>
<h3 id="将实体类的包直接命名成别名"><a href="#将实体类的包直接命名成别名" class="headerlink" title="将实体类的包直接命名成别名"></a>将实体类的包直接命名成别名</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--也可以直接一下子导入一个实体类的包 这样使用实体类的类名（首字母小写）作为它的别名--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.dwx.pojo&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这种情况下，在配置好的xml直接使用你引入的这个包中的实体类的类名（首字母小写）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dwx.mapper.StudentMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这种方式的特点：</p>
<ul>
<li>在实体类多时使用十分方便</li>
<li>别名不能DIY——为实体类的类名（首字母小写）</li>
</ul>
<p><strong>但是说这种方法不能DIY别名是十分不严谨的，如果和注解结合使用就能实现类名的DIY</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Alias(&quot;hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//无参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">student</span><span class="params">(<span class="keyword">int</span> id, String name, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//get和set方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当实体类使用<code>Alias(&quot;别名&quot;)</code>后，就能在引入这个实体类所在的包后使用这个别名作为别名使用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dwx.mapper.StudentMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>mybatis配置解析之映射</title>
    <url>/2022/01/11/mybatis%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90%E4%B9%8B%E6%98%A0%E5%B0%84/</url>
    <content><![CDATA[<h1 id="mybatis配置解析之映射"><a href="#mybatis配置解析之映射" class="headerlink" title="mybatis配置解析之映射"></a>mybatis配置解析之映射</h1><p><strong>介绍：</strong>映射（mappers）即，我们之前说的每一个接口的xml文件必须在核心配置文件中“注册”</p>
<p><strong>MapperRegistry：</strong>注册绑定我们的Mapper文件</p>
<p><strong>文章源：</strong><a href="https://mybatis.net.cn/configuration.html#mappers">mappers（映射器）</a></p>
<p>mybatis映射我们具体使用的有三种方法：</p>
<ol>
<li>对xml文件进行映射</li>
<li>对接口类进行映射</li>
<li>对接口类所在的包进行映射</li>
</ol>
<h2 id="对xml文件进行映射"><a href="#对xml文件进行映射" class="headerlink" title="对xml文件进行映射"></a>对xml文件进行映射</h2><p><strong>即注册时使用的是Mapper接口文件的实现xml文件</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/dwx/mapper/StudentMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这种映射方式对两个文件的位置没有要求 可以在任何位置创建xml文件</p>
<h2 id="对接口类进行映射"><a href="#对接口类进行映射" class="headerlink" title="对接口类进行映射"></a>对接口类进行映射</h2><p><strong>即对接口类进行注册</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.mapper.StudentMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这种映射方式要求：</p>
<ul>
<li>接口类和我们的实现xml文件（mapper）必须在同一个包下</li>
<li>接口类和我们的实现xml文件（mapper）必须同名</li>
</ul>
<p>否则就会报错，找不到我们的文件</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/63e0c40d6e3e9b4a.jpg" alt="文件的位置"> </p>
<h2 id="对接口类所在的包进行映射"><a href="#对接口类所在的包进行映射" class="headerlink" title="对接口类所在的包进行映射"></a>对接口类所在的包进行映射</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.dwx.mapper&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这种映射方式要求：</p>
<ul>
<li>接口类和我们的实现xml文件（mapper）必须在同一个包下</li>
<li>接口类和我们的实现xml文件（mapper）必须同名</li>
</ul>
<p>否则就会报错，找不到我们的文件</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/63e0c40d6e3e9b4a.jpg" alt="文件的位置"> </p>
]]></content>
  </entry>
  <entry>
    <title>mybatis配置解析</title>
    <url>/2022/01/10/mybatis%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<h1 id="mybatis配置解析"><a href="#mybatis配置解析" class="headerlink" title="mybatis配置解析"></a>mybatis配置解析</h1><p> <a href="https://mybatis.net.cn/getting-started.html">入门_MyBatis中文网</a> </p>
<p>在介绍mybatis配置解析前 首先我们复习一下</p>
<p><strong>创建一个使用mybatis框架的子项目的方法：</strong></p>
<ol>
<li>在父项目下新建一个Module（普通的maven项目）</li>
<li>在main、resource下写核心配置文件（mybatis-config.xml）</li>
<li>写工具类（untils）</li>
<li>写实体类（pojo）</li>
<li>写接口类（Mapper）</li>
</ol>
<h2 id="配置解析"><a href="#配置解析" class="headerlink" title="配置解析"></a>配置解析</h2><h3 id="核心配置文件（mybatis-config-xml）"><a href="#核心配置文件（mybatis-config-xml）" class="headerlink" title="核心配置文件（mybatis-config.xml）"></a>核心配置文件（mybatis-config.xml）</h3><p>这个核心配置文件的基本结构为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">  <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;org/mybatis/example/BlogMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="环境变量（environments）"><a href="#环境变量（environments）" class="headerlink" title="环境变量（environments）"></a>环境变量（environments）</h4><p><strong>基本结构：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>environments</code>这里是写的复数，因此其实可以写很多套environment，但能使用一套 即default参数指向的那套</p>
<h3 id="属性（properties）"><a href="#属性（properties）" class="headerlink" title="属性（properties）"></a>属性（properties）</h3><p>如在<code>environment</code>里就有<code>property</code> </p>
<p>properties里有三种引入方法</p>
<h4 id="第一种-不引入-直接在enviroment里写"><a href="#第一种-不引入-直接在enviroment里写" class="headerlink" title="第一种 不引入 直接在enviroment里写"></a>第一种 不引入 直接在enviroment里写</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useUnicode=true<span class="symbol">&amp;amp;</span>characterEnconding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="第二种-在xml中的-lt-properties-gt-lt-properties-gt-键值对里写"><a href="#第二种-在xml中的-lt-properties-gt-lt-properties-gt-键值对里写" class="headerlink" title="第二种 在xml中的&lt;properties&gt;&lt;/properties&gt;键值对里写"></a>第二种 在xml中的<code>&lt;properties&gt;&lt;/properties&gt;</code>键值对里写</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useUnicode=true<span class="symbol">&amp;amp;</span>characterEnconding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>当然 此时 我们可以看到 在使用配置参数时 就直接使用${}引入</p>
<h4 id="第三种-在db-properties中编写-在-lt-properties-gt-lt-properties-gt-中引入"><a href="#第三种-在db-properties中编写-在-lt-properties-gt-lt-properties-gt-中引入" class="headerlink" title="第三种 在db.properties中编写 在&lt;properties&gt;&lt;/properties&gt;中引入"></a>第三种 在db.properties中编写 在<code>&lt;properties&gt;&lt;/properties&gt;</code>中引入</h4><p><strong>db.properties：</strong></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">driver</span> = <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span> = <span class="string">jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;characterEnconding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">dwx</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">123456</span></span><br></pre></td></tr></table></figure>

<p><strong>mybaties-config.xml：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>他们的基本结构是：</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/c0798d65f796563a.jpg" alt="两个文件的结构"> </p>
<p><strong>我们注意 当同时存在外部引入和内部参数时，外部引入的优先级更高</strong></p>
]]></content>
  </entry>
  <entry>
    <title>mybatis增删改查操作基础</title>
    <url>/2022/01/05/mybatus%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<hr>
<p>由于mybatis就是对永久层简化的一种操作，器主要的操作就是对数据库的增删改查，因此今天我将介绍mybatis增删改查操作的基础</p>
<h2 id="增删改查操作实现的步骤"><a href="#增删改查操作实现的步骤" class="headerlink" title="增删改查操作实现的步骤"></a>增删改查操作实现的步骤</h2><p>与Jdbc相同，mybatis的增删改查工作也是有很多的共性的，区别只存在于sql语句的编写</p>
<p><strong>共同步奏:</strong></p>
<ol>
<li>编写mapper接口类 创建方法</li>
<li>编写mapper接口类的实现xml文件</li>
<li>使用</li>
</ol>
<h2 id="SELECT-查询"><a href="#SELECT-查询" class="headerlink" title="SELECT 查询"></a>SELECT 查询</h2><p>查询可以分为两种：1.查询全部内容，2.通过参数参训</p>
<h3 id="查询全部内容（无参查询）"><a href="#查询全部内容（无参查询）" class="headerlink" title="查询全部内容（无参查询）"></a>查询全部内容（无参查询）</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--与Dao类的实现类一样 这里是写sql语句--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--id指的是我们调用这个sql使用的名字，可以理解为BaseDaoImp的方法名--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--resultType表示返回的数据的类型 如果是自己创建的类 需要填写整个路径--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.dwx.pojo.student&quot;</span>&gt;</span></span><br><span class="line">       select * from mybatis.student</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>元素分析：</strong></p>
<ul>
<li>id与mapper抽象类中的方法相同</li>
<li>resulttype指的是返回值类型 如果是基本数据类型直接写基本数据类型，如果是自定义数据类型就将全部的路径都写下来</li>
</ul>
<h3 id="查询部分内容（有参查询）"><a href="#查询部分内容（有参查询）" class="headerlink" title="查询部分内容（有参查询）"></a>查询部分内容（有参查询）</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--parameterType表示参数类型--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--通过特定的参数查询，一定要写好参数类型 一般查收农户类型直接写 自定义的参数类型就写参数的全路径--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.dwx.pojo.student&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">      select * from mybatis.student where id = #&#123;id&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>元素分析：</strong></p>
<ul>
<li>id与mapper抽象类中的方法相同</li>
<li>resulttype指的是返回值类型 如果是基本数据类型直接写基本数据类型，如果是自定义数据类型就将全部的路径都写下来</li>
<li>parameterType表示参数类型 在这个xml文档是 通过#{参数名} 来获得参数的 获得的参数来自id指的方法</li>
</ul>
<h2 id="INSERT-插入"><a href="#INSERT-插入" class="headerlink" title="INSERT 插入"></a>INSERT 插入</h2><p>插入即增加</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--我们可以直接把参数类型中的子类型提取出来使用--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;InsertStudent&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.dwx.pojo.student&quot;</span>&gt;</span></span><br><span class="line">       insert into mybatis.student (id,name,password) values(#&#123;id&#125;,#&#123;name&#125;,#&#123;password&#125;)</span><br><span class="line">   <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意：插入操作的实现是需要提交事务的，写到实现方法时会再次强调</p>
<p>插入没有返回值类型</p>
<ul>
<li>id与mapper抽象类中的方法相同</li>
<li>parameterType表示参数类型 在这个xml文档是 通过#{参数名} 来获得参数的 获得的参数来自id指的方法</li>
</ul>
<h2 id="DELETE-删除"><a href="#DELETE-删除" class="headerlink" title="DELETE 删除"></a>DELETE 删除</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--删除操作--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;DeleteStudent&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">       delete  from mybatis.student where id = #&#123;id&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>删除没有返回值类型</p>
<ul>
<li>id与mapper抽象类中的方法相同</li>
<li>parameterType表示参数类型 在这个xml文档是 通过#{参数名} 来获得参数的 获得的参数来自id指的方法</li>
</ul>
<h2 id="UPDATE-SET-修改"><a href="#UPDATE-SET-修改" class="headerlink" title="UPDATE SET 修改"></a>UPDATE SET 修改</h2><p>更新 设置 即为修改</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--修改用户信息--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;UpdateStudent&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.dwx.pojo.student&quot;</span>&gt;</span></span><br><span class="line">       update mybatis.student set name = #&#123;name&#125;,password = #&#123;password&#125; where id = #&#123;id&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改没有返回值类型</p>
<ul>
<li>id与mapper抽象类中的方法相同</li>
<li>parameterType表示参数类型 在这个xml文档是 通过#{参数名} 来获得参数的 获得的参数来自id指的方法</li>
</ul>
<h2 id="mapper-dao-抽象类"><a href="#mapper-dao-抽象类" class="headerlink" title="mapper/dao 抽象类"></a>mapper/dao 抽象类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写一个抽象的DAO接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//编写这个接口需要的方法</span></span><br><span class="line">    <span class="comment">//查询所有的用户</span></span><br><span class="line">    <span class="function">List&lt;student&gt; <span class="title">getList</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//通过id查询用户</span></span><br><span class="line">    <span class="function">student <span class="title">getStudentById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="comment">//增加用户</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InsertStudent</span><span class="params">(student student)</span></span>;</span><br><span class="line">    <span class="comment">//修改用户信息</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">UpdateStudent</span><span class="params">(student student)</span></span>;</span><br><span class="line">    <span class="comment">//通过id删除用户信息</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DeleteStudent</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="实现类（测试类）"><a href="#实现类（测试类）" class="headerlink" title="实现类（测试类）"></a>实现类（测试类）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.student;</span><br><span class="line"><span class="keyword">import</span> com.dwx.untils.MyBatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//调用我们的myBatisUtils来获得是SqlSession</span></span><br><span class="line">        MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">        SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">        <span class="comment">//sqlSession进行操作</span></span><br><span class="line">        <span class="comment">//通过反释来获得UserMapper</span></span><br><span class="line">        UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        <span class="comment">//获得的mapper对象就能调用“id”，来实现操作了</span></span><br><span class="line">        List&lt;student&gt; list = mapper.getList();</span><br><span class="line">        <span class="keyword">for</span> (student student : list) &#123;</span><br><span class="line">            System.out.print(student.getId());</span><br><span class="line">            System.out.print(student.getName());</span><br><span class="line">            System.out.println(student.getPassword());</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//通过参数查询的测试方法</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getStudentById</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//这些都是固定格式</span></span><br><span class="line">        MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">        SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">        <span class="comment">//sqlSession获得联结</span></span><br><span class="line">        UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        student studentById = mapper.getStudentById(<span class="number">2</span>);</span><br><span class="line">        System.out.println(studentById);</span><br><span class="line">        System.out.println(studentById.getId()+studentById.getName()+studentById.getPassword());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InsertStudnet</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">        SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">        <span class="comment">//获得了sqlSession就需要进行联结获得mapper</span></span><br><span class="line">        UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        <span class="comment">//通过mapper对象来进行操作</span></span><br><span class="line">        mapper.InsertStudent(<span class="keyword">new</span> student(<span class="number">4</span>,<span class="string">&quot;王五&quot;</span>,<span class="string">&quot;123456&quot;</span>));</span><br><span class="line">        <span class="comment">//对于需要对数据库进行改动的如：“增删改” 都系要提交事物</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//关闭sqlsession</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">        SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line"></span><br><span class="line">        UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        mapper.UpdateStudent(<span class="keyword">new</span> student(<span class="number">3</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;123456&quot;</span>));</span><br><span class="line">        <span class="comment">//注意必须提交事务</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">        SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">        UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        mapper.DeleteStudent(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>注意，JDBC中有链接（getconnection）就完成了事务的提交，但是mybatis需要手动提交事务。</p>
<p>就是在执行完对数据库有改动的操作（增删改）后需要加一个语句<code>sqlSession.commit()</code></p>
]]></content>
  </entry>
  <entry>
    <title>newblog</title>
    <url>/2021/12/16/newblog/</url>
    <content><![CDATA[<h2 id="图片测试"><a href="#图片测试" class="headerlink" title="图片测试"></a>图片测试</h2><p><img src="/dwx-tx.github.io/2021/12/16/newblog/np.jpg" alt="np"><br><img src="/dwx-tx.github.io/2021/12/16/newblog/np2.jpg" alt="np2"></p>
]]></content>
  </entry>
  <entry>
    <title>datetime库的使用</title>
    <url>/2021/12/16/pythonDatetime%E5%87%BD%E6%95%B0%E5%BA%93/</url>
    <content><![CDATA[<h1 id="datetime库的使用"><a href="#datetime库的使用" class="headerlink" title="datetime库的使用"></a>datetime库的使用</h1><p>Python<strong>时间处理的标准函数库</strong>datetime提供了一批显示日期和时间的格式化方法</p>
<h2 id="datetime库的概述"><a href="#datetime库的概述" class="headerlink" title="datetime库的概述"></a>datetime库的概述</h2><p>Python<strong>datetime</strong>库可以从系统中获得时间，并以用户选择的格式输出</p>
<p><strong>注意</strong>：datetime库以<strong>格林威治时间</strong>时间为基础，每天由3600*24秒精度定义。</p>
<p>该库包含两个常量：date.MINTEAR和date.MAXTEAR分别表示datetime所能表示的最小最大年份，值分别为1和9999</p>
<p>datetime库提供的表示日期的方式：</p>
<table>
<thead>
<tr>
<th>方法（类）</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>datetime.date</td>
<td>日期表示类，可以表示年、月、日等</td>
</tr>
<tr>
<td>datetime.time</td>
<td>时间表示类，可以表示小时、分钟、秒、毫秒等</td>
</tr>
<tr>
<td>datetime.datetime</td>
<td>日期和时间表示类，功能覆盖date和time类</td>
</tr>
<tr>
<td>datetime.timedelta</td>
<td>与时间间隔有关的类</td>
</tr>
<tr>
<td>datetime.tzinfo</td>
<td>与时区有关的信息表示类</td>
</tr>
</tbody></table>
<h2 id="datetime库解析"><a href="#datetime库解析" class="headerlink" title="datetime库解析"></a>datetime库解析</h2><p>  datetime类(datetime.datetime类)的使用方法是先创建一个datetime对象，然后通过对象的方式和属性显示时间。创建datetime对象有3种方法：datetime.now(),datetime.utcnow()和datetime.datetime()。</p>
<p>实例1：使用datetime.now（）获得当前日期的时间对象.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">datetime.now()</span><br></pre></td></tr></table></figure>

<p>作用：返回一个datetime类型，表示当前的日期和时间，精确到微秒</p>
<p><img src="/dwx-tx.github.io/2021/12/16/pythonDatetime%E5%87%BD%E6%95%B0%E5%BA%93/截屏\datetime.now.png"></p>
<p>实例2：使用datetime.utcnow()获得日期和时间对应的UTC（世界标准时间）时间对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">datetime.utcnow()</span><br></pre></td></tr></table></figure>

<p>作用：返回一个datetime类型，表示当前日期的时间的UTC表示，精确到微秒</p>
<p><img src="/dwx-tx.github.io/2021/12/16/pythonDatetime%E5%87%BD%E6%95%B0%E5%BA%93/截屏\datetime.utcnow.png"></p>
<p>实例3：datetime.now()和datetime.utcnow()返回的都是一个datetime类型的对象，也可以直接使用datetime()构造一个日期和时间对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">datetime(year, month, day, hour=<span class="number">0</span>, minute=<span class="number">0</span>, second=<span class="number">0</span>, microsecond=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>作用：返回一个datetime类型，表示指定的日期和时间</p>
<p><img src="/dwx-tx.github.io/2021/12/16/pythonDatetime%E5%87%BD%E6%95%B0%E5%BA%93/截屏\datetime（）.png"></p>
<p>datetime类的常用属性</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>someday.min</td>
<td>固定返回datetime的最小时间对象，datetime（1,1,1,0,0）</td>
</tr>
<tr>
<td>someday.max</td>
<td>固定返回datetime的最大时间对象</td>
</tr>
<tr>
<td>someday.year</td>
<td>返回someday包含的年份</td>
</tr>
<tr>
<td>someday.month</td>
<td>返回someday包含的月份</td>
</tr>
<tr>
<td>someday.day</td>
<td>返回someday包含的日期</td>
</tr>
<tr>
<td>someday.hour</td>
<td>返回someday包含的小时</td>
</tr>
<tr>
<td>someday.minture</td>
<td>返回someday包含的分钟</td>
</tr>
<tr>
<td>someday.second</td>
<td>返回someday包含的秒</td>
</tr>
<tr>
<td>someday.microsecond</td>
<td>返回someday包含的毫秒</td>
</tr>
</tbody></table>
<p>datetime常用的时间格式化方法</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>someday.isoformat()</td>
<td>采用ISO861标准显示时间</td>
</tr>
<tr>
<td>someday.isoweekday()</td>
<td>根据日期计算星期后返回1~7，对应星期一到星期日</td>
</tr>
<tr>
<td>someday.strftime(format)</td>
<td>根据格式化字符串format进行格式显示的方法</td>
</tr>
</tbody></table>
<p>strftime（format）</p>
<table>
<thead>
<tr>
<th>格式化字符</th>
<th>日期/时间</th>
<th>值范围和实例</th>
</tr>
</thead>
<tbody><tr>
<td>%Y</td>
<td>年份</td>
<td>0001~9999</td>
</tr>
<tr>
<td>%m</td>
<td>月份</td>
<td>01~12</td>
</tr>
<tr>
<td>%B</td>
<td>月名</td>
<td>january~December</td>
</tr>
<tr>
<td>%b</td>
<td>月名缩写</td>
<td>jan~Dec</td>
</tr>
<tr>
<td>%d</td>
<td>日期</td>
<td>01~31</td>
</tr>
<tr>
<td>%A</td>
<td>星期</td>
<td>Monday~Sunday</td>
</tr>
<tr>
<td>%a</td>
<td>星期缩写</td>
<td>Mon~Sun</td>
</tr>
<tr>
<td>%H</td>
<td>小时（24h）</td>
<td>00~23</td>
</tr>
<tr>
<td>%M</td>
<td>分钟</td>
<td>00~59</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>格式化字符</th>
<th>日期/时间</th>
<th>值范围和实例</th>
</tr>
</thead>
<tbody><tr>
<td>%S</td>
<td>秒</td>
<td>00~59</td>
</tr>
<tr>
<td>%x</td>
<td>日期</td>
<td>月/日/年</td>
</tr>
<tr>
<td>%X</td>
<td>时间</td>
<td>时：分：秒</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/pythonrandom%E5%87%BD%E6%95%B0%E5%BA%93/</url>
    <content><![CDATA[<h1 id="python——-gt-random库"><a href="#python——-gt-random库" class="headerlink" title="python——&gt;random库"></a>python——&gt;random库</h1><h2 id="random库的概述"><a href="#random库的概述" class="headerlink" title="random库的概述"></a>random库的概述</h2><p>使用random库的主要目的是生成随机数</p>
<p>函数库提供了很多函数，不过都是基于最基本random.random（）函数扩展得到的</p>
<h2 id="random库解析"><a href="#random库解析" class="headerlink" title="random库解析"></a>random库解析</h2><p>random常用的9个函数</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>seed(a=None)</td>
<td>初始化随机数种子，默认值为当前系统时间</td>
</tr>
<tr>
<td>random()</td>
<td>生成一个[0.0,1.0]之间的小数</td>
</tr>
<tr>
<td>randint(a,b)</td>
<td>生成一个[a,b]之间的整数</td>
</tr>
<tr>
<td>getrandbits(k)</td>
<td>生成一个k比特长度的随机整数</td>
</tr>
<tr>
<td>randrange(start,stop[,step])</td>
<td>生成一个[strat,stop)之间以step为步数的随机整数</td>
</tr>
<tr>
<td>uniform(a,b)</td>
<td>生成一个[a,b]之间的随机小数</td>
</tr>
<tr>
<td>choice(seq)</td>
<td>从序列类型，例如列表中随机返回一个元素</td>
</tr>
<tr>
<td>shuffle(seq)</td>
<td>将序列类型中的元素随机排序，返回打乱后的序列</td>
</tr>
<tr>
<td>sample(pop,k)</td>
<td>从pop类型中随机选取k个元素，以列表类型返回</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/pythonmath%E5%BA%93%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="python-math库函数"><a href="#python-math库函数" class="headerlink" title="python math库函数"></a>python math库函数</h1><h2 id="math库概括"><a href="#math库概括" class="headerlink" title="math库概括"></a>math库概括</h2><p><strong>模块编程</strong>：需要用import调用库的编程方式</p>
<p> <strong>简洁</strong>：math库是python提供的内置数学类函数库，因为复数类型常用于科学计算，一般计算并不常用，因此math函数不支持复数类型，仅支持整数和浮点数运算。</p>
<p>math函数一共提供了4个数学常数和44个函数。44个函数分为4类，包括16个数值表示函数，8个幂对数函数，16个三角对数函数和4个高等特殊函数。</p>
<h2 id="math库解析"><a href="#math库解析" class="headerlink" title="math库解析"></a>math库解析</h2><h3 id="math库的数学常数（共4个）"><a href="#math库的数学常数（共4个）" class="headerlink" title="math库的数学常数（共4个）"></a>math库的数学常数（共4个）</h3><table>
<thead>
<tr>
<th>常数</th>
<th>数学表示</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>math.pi</td>
<td>π</td>
<td>圆周率，值为3.141592656589793</td>
</tr>
<tr>
<td>math.e</td>
<td>e</td>
<td>自然对数，值为2.718281828459045</td>
</tr>
<tr>
<td>math.inf</td>
<td>00</td>
<td>正无穷大，负无穷大为-math.inf</td>
</tr>
<tr>
<td>math.nan</td>
<td></td>
<td>非浮点数标记，NaN（not  a number）</td>
</tr>
</tbody></table>
<p><img src="/dwx-tx.github.io/2021/12/16/pythonmath%E5%BA%93%E5%87%BD%E6%95%B0/截屏\math库的数学常数.png"></p>
<h3 id="math库的数值表示函数（共16个）"><a href="#math库的数值表示函数（共16个）" class="headerlink" title="math库的数值表示函数（共16个）"></a>math库的数值表示函数（共16个）</h3><table>
<thead>
<tr>
<th>函数</th>
<th>数学表示</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>math.fabs(x)</td>
<td>|x|</td>
<td>返回x的绝对值</td>
</tr>
<tr>
<td>math.fmod(x,y)</td>
<td>x&amp;y</td>
<td>返回x与y的模</td>
</tr>
<tr>
<td>math.fsum([x,y,…])</td>
<td>x+y+….</td>
<td>浮点数精确求和</td>
</tr>
<tr>
<td>math.ceil(x)</td>
<td></td>
<td>向上取整，返回不小于x的最小整数</td>
</tr>
<tr>
<td>math.floor(x)</td>
<td></td>
<td>向下取整，返回不大于x的最大整数</td>
</tr>
<tr>
<td>math.factorial(x)</td>
<td>x!</td>
<td>返回x的阶乘，如果x是小数或负数，返回ValueError</td>
</tr>
<tr>
<td>math.gcd(a,b)</td>
<td></td>
<td>返回a与b的最大公约数</td>
</tr>
<tr>
<td>math.frexp(x)</td>
<td>x = m * 2 ^ e</td>
<td>返回（m，e），当x = 0，返回（0.0,0）</td>
</tr>
<tr>
<td>math.ldexp(x,i)</td>
<td>x * 2^i</td>
<td>返回x*2^i运算值，mathfrexp（x）的反运算</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>函数</th>
<th>数学表示</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>math.modf(x)</td>
<td></td>
<td>返回x的小数和整数部分</td>
</tr>
<tr>
<td>math.trunc(x)</td>
<td></td>
<td>返回x的整数部分</td>
</tr>
<tr>
<td>math.copysign(x,y)</td>
<td>|x| * |y|/y</td>
<td>用数值y的正负号代替x的正负号</td>
</tr>
<tr>
<td>math.isclose(a,b)</td>
<td></td>
<td>比较a和b的相似性，返回True或False</td>
</tr>
<tr>
<td>math.isfinite(x)</td>
<td></td>
<td>当x不是无穷大或NaN,返回True；否则，返回False</td>
</tr>
<tr>
<td>math.isinf(x)</td>
<td></td>
<td>当x为正负无穷大，返回True；否则，返回False</td>
</tr>
<tr>
<td>math.innan(x)</td>
<td></td>
<td>当x是NaN，返回Ture，否则返回False</td>
</tr>
</tbody></table>
<h3 id="math库的幂对数函数（共8个）"><a href="#math库的幂对数函数（共8个）" class="headerlink" title="math库的幂对数函数（共8个）"></a>math库的幂对数函数（共8个）</h3><table>
<thead>
<tr>
<th>函数</th>
<th>数学表示</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>math.pow（x，y）</td>
<td>x^y</td>
<td>返回x的y次幂</td>
</tr>
<tr>
<td>math.exp(x)</td>
<td>e^x</td>
<td>返回e的x次幂，e是自然对数</td>
</tr>
<tr>
<td>math.expml(x)</td>
<td>e^x-1</td>
<td>返回e的x次幂减1</td>
</tr>
<tr>
<td>math.sqrt(x)</td>
<td>x^1/2</td>
<td>返回x的平方根</td>
</tr>
<tr>
<td>math.log(x[,base])</td>
<td>logbasex</td>
<td>返回x的对数值，只输入x时，返回自然对数</td>
</tr>
<tr>
<td>math.loglp(x)</td>
<td>ln(x+1)</td>
<td>返回1+x的自然对数</td>
</tr>
<tr>
<td>math.log2(x)</td>
<td>log2x</td>
<td>返回x的2对数值</td>
</tr>
<tr>
<td>math.log10(x)</td>
<td>log10x</td>
<td>返回x的10对数值</td>
</tr>
</tbody></table>
<h3 id="math库的三角运算函数"><a href="#math库的三角运算函数" class="headerlink" title="math库的三角运算函数"></a>math库的三角运算函数</h3><table>
<thead>
<tr>
<th>函数</th>
<th>数学表示</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>math.degrees(x)</td>
<td></td>
<td>角度x的弧度值转角度值</td>
</tr>
<tr>
<td>math.radians(x)</td>
<td></td>
<td>角度x的角度值转弧度值</td>
</tr>
<tr>
<td>math.hypot(x,y)</td>
<td></td>
<td>返回（x，y）坐标到原点（0,0）的距离</td>
</tr>
<tr>
<td>math.sin(x)</td>
<td>sin x</td>
<td>返回x的正弦值，x为弧度值</td>
</tr>
<tr>
<td>math.cos(x)</td>
<td>cos x</td>
<td>返回x的余弦值，x为弧度值</td>
</tr>
<tr>
<td>math.tan(x)</td>
<td>tan x</td>
<td>返回x的正切值，x为弧度值</td>
</tr>
<tr>
<td>math.asin(x)</td>
<td>arcsin x</td>
<td>返回x的反正弦值，x为弧度值</td>
</tr>
<tr>
<td>math.acos(x)</td>
<td>arccos x</td>
<td>返回x的反余弦值，x为弧度值</td>
</tr>
<tr>
<td>math.atan(x)</td>
<td>arctan x</td>
<td>返回x的反正切值，x为弧度值</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>函数</th>
<th>数学表示</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>math.atan2(y,x)</td>
<td>arctan y/x</td>
<td>返回y/x的反正切值，x为弧度值</td>
</tr>
<tr>
<td>math.sinh(x)</td>
<td>sinh x</td>
<td>返回x的双曲正弦函数值</td>
</tr>
<tr>
<td>math.cosh(x)</td>
<td>cosh x</td>
<td>返回x的双曲余弦函数值</td>
</tr>
<tr>
<td>math.tanh(x)</td>
<td>tanh x</td>
<td>返回x的双曲正切函数值</td>
</tr>
<tr>
<td>math.asinh(x)</td>
<td>arcsinh x</td>
<td>返回x的双曲反正弦函数值</td>
</tr>
<tr>
<td>math.acosh(x)</td>
<td>arccosh x</td>
<td>返回x的双曲反余弦函数值</td>
</tr>
<tr>
<td>math.atanh(x)</td>
<td>arctanh x</td>
<td>返回x的双曲反正切函数值</td>
</tr>
</tbody></table>
<h3 id="math库的高等特殊函数（共4个）"><a href="#math库的高等特殊函数（共4个）" class="headerlink" title="math库的高等特殊函数（共4个）"></a>math库的高等特殊函数（共4个）</h3><table>
<thead>
<tr>
<th>函数</th>
<th>数学表达</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>math.erf(x)</td>
<td></td>
<td>高斯误差函数，应用于概率论，统计学等领域</td>
</tr>
<tr>
<td>math.erfc(x)</td>
<td></td>
<td>余补高斯误差函数，math.erfc(x) = 1 - math.erf(x)</td>
</tr>
<tr>
<td>math.gamma(x)</td>
<td></td>
<td>伽玛函数，欧拉第二积分函数</td>
</tr>
<tr>
<td>math.lgamma(x)</td>
<td>ln（gamma（x））</td>
<td>伽玛函数的自然对数</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>pycharm下载</title>
    <url>/2021/12/16/pycharm%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<h1 id="pycharm下载"><a href="#pycharm下载" class="headerlink" title="pycharm下载"></a>pycharm下载</h1><p>pycharm是一款现下载量比较多的Python IDE， PyCharm 是 JetBrains 开发的 Python IDE。PyCharm用于一般IDE具备的功能，比如， 调试、语法高亮、Project管理、代码跳转、智能提示、自动完成、单元测试、版本控制……另外，PyCharm还提供了一些很好的功能用于Django开发，同时支持Google App Engine，更酷的是，PyCharm支持IronPython！ </p>
<h2 id="第一步：-JetBrains-官网"><a href="#第一步：-JetBrains-官网" class="headerlink" title="第一步： JetBrains 官网"></a>第一步： JetBrains 官网</h2><p>进入官网后找到Developer Tools，找到PyCharm，这是针对与Python的软件， JetBrains 还有其他的优秀的产品，下载方式都是一样的。</p>
<p><img src="/dwx-tx.github.io/2021/12/16/pycharm%E4%B8%8B%E8%BD%BD/截屏\pc下载1.png"></p>
<h2 id="第二部：选择下载规格"><a href="#第二部：选择下载规格" class="headerlink" title="第二部：选择下载规格"></a>第二部：选择下载规格</h2><p>PyCharm支持Windows，Mac（苹果系统），Linux，这里按照自己的情况来选择对应操作系统下的软件</p>
<p>在Windows系统下有两个Professional和Community，按照自己的经济能力和需求来选择下载的版本</p>
<ul>
<li>Proessional是旗舰版，功能比较全，但是收费</li>
<li>Community是阉割版，Free，但对于学习是够用的</li>
</ul>
<p><img src="/dwx-tx.github.io/2021/12/16/pycharm%E4%B8%8B%E8%BD%BD/截屏\pc下载2.png"></p>
<h2 id="第三部：安装PyCharm"><a href="#第三部：安装PyCharm" class="headerlink" title="第三部：安装PyCharm"></a>第三部：安装PyCharm</h2><p>安装过程一路next就行，但是有些地方还是要注意</p>
<p><img src="/dwx-tx.github.io/2021/12/16/pycharm%E4%B8%8B%E8%BD%BD/截屏\pc下载4.png"></p>
<p><em><strong>在这里如果不是特别需要，最好全选</strong></em></p>
<ol>
<li> create desktop shortcut（创建桌面快捷方式</li>
<li> update path variable(restart needed)更新路径变量将路径添加到环境变量中</li>
<li> update context menu ： 更新通知</li>
<li> create associations：关联.py文件，双击都是以pycharm打开</li>
</ol>
<h2 id="第四步：优化pycharm设置"><a href="#第四步：优化pycharm设置" class="headerlink" title="第四步：优化pycharm设置"></a>第四步：优化pycharm设置</h2><p>在下载之后为了更人性化的使用，可以个性化设置pycharm</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="python内置函数"><a href="#python内置函数" class="headerlink" title="python内置函数"></a>python内置函数</h1><p><strong>python提供了68个内置函数，不过常用的只有36个</strong></p>
<table>
<thead>
<tr>
<th>abs()</th>
<th>id()</th>
<th>round()</th>
<th>compile()</th>
<th>locals</th>
<th>all()</th>
</tr>
</thead>
<tbody><tr>
<td>input()</td>
<td>set()</td>
<td>dir()</td>
<td>map()</td>
<td>any()</td>
<td>int()</td>
</tr>
<tr>
<td>sorted()</td>
<td>exec()</td>
<td>memoryview()</td>
<td>asci()</td>
<td>len()</td>
<td>str()</td>
</tr>
<tr>
<td>enumerate()</td>
<td>next()</td>
<td>bin()</td>
<td>list()</td>
<td>tuple()</td>
<td>filter()</td>
</tr>
<tr>
<td>object()</td>
<td>bool()</td>
<td>max()</td>
<td>type()</td>
<td>formt()</td>
<td>property()</td>
</tr>
<tr>
<td>chr()</td>
<td>min()</td>
<td>zip()</td>
<td>frozenset()</td>
<td>repr()</td>
<td>complex()</td>
</tr>
<tr>
<td>oct()</td>
<td>getattr()</td>
<td>setattr()</td>
<td>dict()</td>
<td>open()</td>
<td>globals()</td>
</tr>
<tr>
<td>slice()</td>
<td>divmod()</td>
<td>ord()</td>
<td>bytes()</td>
<td>hasattr()</td>
<td>staticmethod()</td>
</tr>
<tr>
<td>eval()</td>
<td>pow()</td>
<td>delatter()</td>
<td>help()</td>
<td>sum()</td>
<td>float()</td>
</tr>
<tr>
<td>print()</td>
<td>bytearray()</td>
<td>isinstance()</td>
<td>super()</td>
<td>hash()</td>
<td>range()</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>callable()</th>
<th>issubclass()</th>
<th>vars()</th>
<th>hex()</th>
<th>reversed()</th>
<th>classmethod()</th>
</tr>
</thead>
<tbody><tr>
<td>iter()</td>
<td>_ import() _</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="部分内置函数的用途"><a href="#部分内置函数的用途" class="headerlink" title="部分内置函数的用途"></a>部分内置函数的用途</h2><ul>
<li>all()函数：一般针对组合数据类型，如果其中每个元素都是True，则返回True，否则返回False。需要注意的是，整数0、空字符串“”、空表格[]等都被当成False</li>
<li>any()函数：只要数据中有一个元素是True，则返回True，全部元素都是False时返回False</li>
<li>hash()函数：对于能够计算哈希的类型，并返回哈希值</li>
<li>id()：对每一个数据返回唯一的编号</li>
<li>reversed(): 函数返回输入组合数据类型的逆序形式</li>
<li>sorted()：对一个序列进行排序，默认从小到大排序</li>
<li>type()：函数返回每个数据对应的类型</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92/</url>
    <content><![CDATA[<h1 id="函数的参数传递"><a href="#函数的参数传递" class="headerlink" title="函数的参数传递"></a>函数的参数传递</h1><p><strong>要点</strong>：函数可以定义可选参数，使用参数的位置或名称传递参数的值，根据函数中变量的不同作用域有不同的函数返回值方式</p>
<h2 id="可选参数和可变数量参数"><a href="#可选参数和可变数量参数" class="headerlink" title="可选参数和可变数量参数"></a>可选参数和可变数量参数</h2><p>  部分参数不一定需要调用程序输入，可以在定义函数时直接为这些参数指定默认值。当函数被调用是，如果没有传入对应的参数值，则使用函数定义时的默认值代替</p>
<p>在函数定义时，也可以设计可变数量参数，通过在参数前增加星号（*）实现。带有星号的可变参数只能出现在参数列表的最后。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">def <span class="title">vfunc</span><span class="params">(a,*b)</span>:</span></span><br><span class="line"><span class="function">    </span></span><br></pre></td></tr></table></figure>

<h2 id="参数的位置和名称传递"><a href="#参数的位置和名称传递" class="headerlink" title="参数的位置和名称传递"></a>参数的位置和名称传递</h2><p>  函数调用时，实参默认采用按照位置顺序的方式传递给函数。</p>
<p>为了解决上述问题，python提供了按照参数名输入实参的方式，格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">result = func(x2=4, y2=5, z2=6, x1=1, y1=2, z1=3)</span><br></pre></td></tr></table></figure>

<h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h2><p><strong>return</strong>语句用来<strong>推出函数</strong>并将程序返回到含糊被调用的位置继续执行。<strong>return</strong>语句可以同时将<strong>0个、1个或多个函数运算后的结果返回给函数被调用处的变量</strong></p>
<h2 id="函数对变量的作用"><a href="#函数对变量的作用" class="headerlink" title="函数对变量的作用"></a>函数对变量的作用</h2><p>一个程序中的变量包括两类：<strong>全局变量</strong>和<strong>局部变量</strong></p>
<ul>
<li>全局变量：指在函数之外定义的变量，一般没有缩进，在程序执行全过程有效</li>
<li>局部变量：指在函数的内部使用的变量，仅在函数内部有效，当函数推出时变量将不存在</li>
</ul>
<p>在想对函数的实参进行值得改变时，可以通过使用全局变量，<strong>用global作为数据类型</strong>，也可以通过<strong>列表</strong>来实现函数可以实现全局列表，而用采用global进行声明</p>
<h2 id="python函数对变量的作用遵循如下原则："><a href="#python函数对变量的作用遵循如下原则：" class="headerlink" title="python函数对变量的作用遵循如下原则："></a>python函数对变量的作用遵循如下原则：</h2><ol>
<li>简单数据类型变量无论是否与全局变量重名，仅在函数内部创建和使用，函数退出后变量被释放，如有全局同名，其值不变</li>
<li>简单数据类型变量在用<strong>global保留字</strong>声明后，作为全局变量使用，函数退出后该变量保留且值被函数改变</li>
<li>对于组合数据类型的全局变量，如果在函数内部没有被真实创建的同名变量，则函数内部可以直接使用并修改全局变量的值</li>
<li>如果函数内部真实创建了组合数据类型变量，无论是否有同名全局变量，函数仅对局部变量进行操作，函数退出后局部变量被释放，全局变量值不变</li>
</ol>
<h3 id="拓展：指针和引用"><a href="#拓展：指针和引用" class="headerlink" title="拓展：指针和引用"></a><strong>拓展</strong>：指针和引用</h3><ul>
<li>指针：是保存内存地址的变量，一般出现在比较底层的程序设计语言中，如C语言。</li>
<li>引用：是某一变量的别名，用这个名字可以对变量进行操作，如Python列表类型的引用</li>
</ul>
<p><strong>两者的主要区别</strong>：指针直接指向内存，说明对象已经生成，而引用只是别名，需要真实创建对象才能操作对象。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E5%87%BD%E6%95%B0%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="函数的基本使用"><a href="#函数的基本使用" class="headerlink" title="函数的基本使用"></a>函数的基本使用</h1><h2 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h2><p>函数是一段具有特点功能的，可重用的语句组，用函数名来表示并通过函数名进行函数调用。</p>
<p>函数可以分为大致两类：</p>
<p>第一类：用户自己写的函数，自定义函数</p>
<p>第二类：Python内置的函数，Python安装包自带一些函数和方法</p>
<p>使用函数主要有两种目的<strong>降低编译的难度</strong>和<strong>代码重用</strong></p>
<h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><p>Python使用def保留字定义函数，语法格式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> &lt;函数名&gt; (<span class="params">&lt;参数列表&gt;</span>):</span></span><br><span class="line">    &lt;函数体&gt;</span><br><span class="line">    <span class="keyword">return</span> &lt;返回值列表&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>函数名</strong>：函数名可以是任何有效的Python标识符；</p>
<p><strong>参数列表</strong>：是调用该函数时，传递给它的值，可以有零个，一个或多个，当传递多个参数时，各参数由逗号隔开，当没有参数输入时，<em><strong>也要保留圆括号</strong></em></p>
<p><strong>返回值</strong>：当需要返回值时，使用保留字return和返回列表，否则函数可以没有return语句，在函数体结束位置将控制权返回调用者</p>
<hr>
<h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><p><strong>函数调用</strong>的一般形式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;函数名&gt;(&lt;参数列表&gt;)</span><br></pre></td></tr></table></figure>

<p>程序调用一个函数需要执行一下四步：</p>
<ul>
<li>调用程序在调用处暂停执行</li>
<li>在调用时将实参复制给函数的形参</li>
<li>执行函数体语句</li>
<li>函数调用结束给出返回值，程序回到调用前的暂停处继续执行</li>
</ul>
<p>所以，传递给函数的形参，只是实参的一个复印本，所以，形参的改变不会影响到实参的值</p>
<h3 id="lambda函数"><a href="#lambda函数" class="headerlink" title="lambda函数"></a>lambda函数</h3><p>lambda是一个保留字，用lambda保留字定义一种特殊的函数——匿名函数，又称lambda函数</p>
<p>基本语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;函数名&gt; = <span class="keyword">lambda</span> &lt;参数列表&gt; : &lt;表达式&gt;</span><br></pre></td></tr></table></figure>

<p>这种书写形式等价于</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> &lt;函数名&gt;(<span class="params">&lt;参数列表&gt;</span>):</span></span><br><span class="line">    <span class="keyword">return</span> &lt;表达式&gt;</span><br></pre></td></tr></table></figure>

<p>综上：lambda函数用于定义简单的、能够在一行内表示的函数，返回一个函数类型</p>
]]></content>
  </entry>
  <entry>
    <title>python字符串类型及其操作</title>
    <url>/2021/12/16/python%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="python字符串类型及其操作"><a href="#python字符串类型及其操作" class="headerlink" title="python字符串类型及其操作"></a>python字符串类型及其操作</h1><h2 id="字符串类型的表示"><a href="#字符串类型的表示" class="headerlink" title="字符串类型的表示"></a>字符串类型的表示</h2><p>python语言中字符串是字符的序列表示，可以由一对单引号（‘）,双引号（“），或三引号（”‘）构成</p>
<ul>
<li>单引号字符串：’单引号表示，可以使用“双引号”作为字符串的一部分‘</li>
<li>双引号字符串：“双引号表示，可以使用’单引号‘作为字符串的一部分”</li>
<li>三引号字符串：“’三引号表示可以使用”双引号“‘单引号’亦可以换行”‘</li>
</ul>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C/截屏\字符串中引号的使用.png" alt="字符串中引号的使用"></p>
<p><strong>字符串中input和print函数的使用</strong></p>
<ul>
<li>input（）函数将用户输入的内容当作一个字符串类型，是获得用户输入的常用方式</li>
<li>print（）函数可以直接打印字符串，这是输出字符串的常用方式</li>
</ul>
<h3 id="字符串的两种序号体系"><a href="#字符串的两种序号体系" class="headerlink" title="字符串的两种序号体系"></a>字符串的两种序号体系</h3><p>python语言的字符串有两种序号体系：</p>
<p>正向递增序号：以最左侧字符序号为0，向右依次递增，最右侧的字符序号为L-1<br>反向递减序号：以最右侧字符序号为-1，向左依次递减最左侧的字符序号为-L<br>反向递减序号</p>
<p>&lt;——————————————————</p>
<p>-11-10 -9 -8 -7 -6 -5 -4 -3 -2 -1</p>
<p>[H] [e] [l] [l] [o] [ ] [W] [o] [r] [l] [d]</p>
<p>0 1 2 3 4 5 6 7 8 9 10</p>
<p>——————————————————&gt;</p>
<p>正向递增序号<br>————————————————<br>版权声明：本文为CSDN博主「省级干饭王」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_55016379/article/details/114675213">https://blog.csdn.net/qq_55016379/article/details/114675213</a></p>
<p>（省级干饭王就是我自己）</p>
<h3 id="python访问字符串的方法"><a href="#python访问字符串的方法" class="headerlink" title="python访问字符串的方法"></a>python访问字符串的方法</h3><p>python字符串也提供区间访问方式，采用**[N:M]**格式，表示字符串中从N到M（不包含M）的子字符串</p>
<p>N和M为字符串的索引序号，<strong>可以混合使用</strong>正向递增序号和反向递减序号</p>
<p><strong>如果表示中的M或者N索引缺失，则表示字符串把开始或结束索引值设为默认值。</strong></p>
<h3 id="格式化控制符"><a href="#格式化控制符" class="headerlink" title="格式化控制符"></a>格式化控制符</h3><table>
<thead>
<tr>
<th>控制符</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>\a</td>
<td>蜂鸣，响铃</td>
</tr>
<tr>
<td>\b</td>
<td>回退，向后退一格</td>
</tr>
<tr>
<td>\f</td>
<td>换页</td>
</tr>
<tr>
<td>\n</td>
<td>换行，光标移动到下一行首行</td>
</tr>
<tr>
<td>\r</td>
<td>回车，光标移动到本行首行</td>
</tr>
<tr>
<td>\t</td>
<td>水平制表</td>
</tr>
<tr>
<td>\v</td>
<td>垂直制表</td>
</tr>
<tr>
<td>\0</td>
<td>NULL，什么都不做</td>
</tr>
</tbody></table>
<h2 id="基本的字符串操作符"><a href="#基本的字符串操作符" class="headerlink" title="基本的字符串操作符"></a>基本的字符串操作符</h2><p>五个基本的字符串操作符</p>
<table>
<thead>
<tr>
<th>操作符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>x + y</td>
<td>连接两个字符串x与y</td>
</tr>
<tr>
<td>x * n 或 n * x</td>
<td>复制n次字符串x</td>
</tr>
<tr>
<td>x in s</td>
<td>如果x是s的子串，返回True，否则返回False</td>
</tr>
<tr>
<td>str[i]</td>
<td>索引，返回第i个字符</td>
</tr>
<tr>
<td>str[N：M]</td>
<td>切片，返回索引第N到第M的子串，其中不包含M</td>
</tr>
</tbody></table>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C/截屏\字符串操作.png" alt="字符串操作"></p>
<p><strong>使用字符串作为查找表的缺点是，所剪切的子字符串长度必须相同</strong></p>
<h2 id="内置的字符串处理函数"><a href="#内置的字符串处理函数" class="headerlink" title="内置的字符串处理函数"></a>内置的字符串处理函数</h2><p>python解释器中提供以一些内置函数，其中6个函数和字符串有关</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>len(x)</td>
<td>返回字符串x的长度，也可返回其他组合数据类型元素个数</td>
</tr>
<tr>
<td>str(x)</td>
<td>返回任意类型x所对应的字符串形式</td>
</tr>
<tr>
<td>chr(x)</td>
<td>返回Unicode编码x对应的单字符</td>
</tr>
<tr>
<td>ord(x)</td>
<td>返回单字符表示的Unicode编码</td>
</tr>
<tr>
<td>hex(x)</td>
<td>返回整数x对应十六进制的小写形式的字符串</td>
</tr>
<tr>
<td>oct(x)</td>
<td>返回整数x对应的八进制小写形式字符串</td>
</tr>
</tbody></table>
<p><strong>ASCLL和Unicode区别</strong></p>
<p>目前计算机系统使用的编码是ASCLL，在C语言和JAVA语言中使用的都是ASCLL，ASCLL局限性在于，它只能表示英语字符，是为英语字符设计的，并没有包含其他的语言。所以它的覆盖面比较小</p>
<p>而Unicode几乎支持所有书写语言的字符。</p>
<h2 id="内置的字符串处理方法"><a href="#内置的字符串处理方法" class="headerlink" title="内置的字符串处理方法"></a>内置的字符串处理方法</h2><p>字符串类型共包含43个内置方法。但这里只介绍常用的16种方法</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>str.lower()</td>
<td>返回字符串str的副本，全部小写</td>
</tr>
<tr>
<td>str.upper()</td>
<td>返回字符串str的副本，全部大写</td>
</tr>
<tr>
<td>str.islower()</td>
<td>当str的所有字符都是小写时，返回True，否则返回False</td>
</tr>
<tr>
<td>str.isprintable()</td>
<td>当str的所有字符都是可打印的，返回True，否则返回False</td>
</tr>
<tr>
<td>str.isnumeric()</td>
<td>当str的所有字符都是数字时，返回True，否则返回False</td>
</tr>
<tr>
<td>str.isspace()</td>
<td>当str所有的字符都是空格时，返回True，否则返回False</td>
</tr>
<tr>
<td>str.endswith(suffix[,start,[,end]])</td>
<td>str[start:end]以suffix结尾返回True，否则返回False</td>
</tr>
<tr>
<td>str.starwith(prefix[,start,[,end]])</td>
<td>str[start:end]以prefix开始返回True，否则返回False</td>
</tr>
<tr>
<td>str.split(sep=None,maxsplit=-1)</td>
<td>返回一个列表，由str根据sep被分割的部分构成</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>str.count（sub[,strat[,end]]）</td>
<td>返回str[start:end]中sub子串出现的次数</td>
</tr>
<tr>
<td>str.replace(old,new[,count])</td>
<td>返回字符串str的副本，所有old子串全被new替换，如count给出，只替换前count相</td>
</tr>
<tr>
<td>str.center(width[,fillchar])</td>
<td>字符串居中函数</td>
</tr>
<tr>
<td>str.strip([chars])</td>
<td>返回字符串str的副本在其左侧和右侧去除chars给出的字符</td>
</tr>
<tr>
<td>str.zfill(width)</td>
<td>返回str的副本，长度为width不够在左侧填0</td>
</tr>
<tr>
<td>str.format()</td>
<td>返回字符串的一种排版格式</td>
</tr>
<tr>
<td>str.join(iterable)</td>
<td>返回一个新的字符串，由字符串iterable变量的每个元素组成，元素间隔用str隔开</td>
</tr>
</tbody></table>
<ul>
<li>str.split(sep=None,maxsplit=-1)返回一个列表，可以储存多个数据类型</li>
<li>str.center(width[,fillchar])：返回长度为width的字符串，不够用fillchar补充，超了返回str</li>
<li>str.zfill(width)  ：返回str的副本，长度为width不够在左侧填0,超了返回str</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>字符串类型的格式化</title>
    <url>/2021/12/16/python%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%A0%BC%E5%BC%8F%E5%8C%96/</url>
    <content><![CDATA[<h1 id="字符串类型的格式化"><a href="#字符串类型的格式化" class="headerlink" title="字符串类型的格式化"></a>字符串类型的格式化</h1><p>python语言提供两种字符串格式化方法，一种类似C语言中printf（）函数的格式化方法；另一种是采用专门的str.format（）格式化方法</p>
<h2 id="format（）方法的基本使用"><a href="#format（）方法的基本使用" class="headerlink" title="format（）方法的基本使用"></a>format（）方法的基本使用</h2><p>格式：&lt;模板字符串&gt;.format(&lt;逗号分隔的参数&gt;)</p>
<p>模板字符串由一系列槽组成，用来控制修改字符串中嵌入值出现的位置，其基本思想是将format（）方法中<strong>逗号分隔的参数</strong>按照序号关系<strong>替换到模板字符串的槽</strong>中。</p>
<p><strong>槽用大括号（{}）表示，如果大括号中没有序号，则按照出现顺序替换</strong></p>
<h2 id="format（）方法的格式控制"><a href="#format（）方法的格式控制" class="headerlink" title="format（）方法的格式控制"></a>format（）方法的格式控制</h2><p>format（）方法格式为：{&lt;参数序号&gt;:&lt;格式控制标记&gt;}</p>
<p>格式控制符</p>
<table>
<thead>
<tr>
<th>形式</th>
<th>效果</th>
</tr>
</thead>
<tbody><tr>
<td>:</td>
<td>引号符号</td>
</tr>
<tr>
<td>&lt;填充&gt;</td>
<td>用于填充的单个字符</td>
</tr>
<tr>
<td>&lt;对齐&gt;</td>
<td>&lt;左对齐;&gt;右对齐;^居中对齐</td>
</tr>
<tr>
<td>&lt;宽度&gt;</td>
<td>槽的输出格式设定输出宽度</td>
</tr>
<tr>
<td>&lt;,&gt;</td>
<td>数字的千位分隔符适用于整数和浮点数</td>
</tr>
<tr>
<td>&lt;.精度&gt;</td>
<td>浮点数小数的部分的精度或是字符串的最大输出长度</td>
</tr>
<tr>
<td>&lt;类型&gt;</td>
<td>整数类型（b,c,o,x,X）浮点数类型(e,E,%,f)</td>
</tr>
</tbody></table>
<p>**&lt;对齐&gt;**指的是分别使用&lt;,&gt;,^三种对齐方式，&lt;填充&gt;指的是除参数外，通过其他方式进行填充</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%A0%BC%E5%BC%8F%E5%8C%96/截屏\format()函数使用.png"></p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%A0%BC%E5%BC%8F%E5%8C%96/截屏\format()函数使用2.png"></p>
<h3 id="lt-类型-gt-的几种形式"><a href="#lt-类型-gt-的几种形式" class="headerlink" title="&lt;类型&gt;的几种形式"></a>&lt;类型&gt;的几种形式</h3><table>
<thead>
<tr>
<th>形式</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>b</td>
<td>输出整数的二进制方式</td>
</tr>
<tr>
<td>c</td>
<td>输出整数对应的Unicode</td>
</tr>
<tr>
<td>d</td>
<td>输出整数的十进制方式</td>
</tr>
<tr>
<td>o</td>
<td>输出整数的八进制方式</td>
</tr>
<tr>
<td>x</td>
<td>输出整数的小写十六进制方式</td>
</tr>
<tr>
<td>X</td>
<td>输出整数的大写十六进制方式</td>
</tr>
</tbody></table>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%A0%BC%E5%BC%8F%E5%8C%96/截屏\format类型.png"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="python数字类型"><a href="#python数字类型" class="headerlink" title="python数字类型"></a>python数字类型</h1><h2 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h2><p>eg：1010,99，-217,0x9a，-0x89</p>
<p><strong>整数类型共有四大类</strong>：十进制，八进制，二进制，十六进制</p>
<p>二进制是以0b为索引，八进制是以0o为索引，十六进制是以0x为索引，大小写均可使用</p>
<table>
<thead>
<tr>
<th>进制种类</th>
<th>索引符号</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>十进制</td>
<td>无</td>
<td>默认情况，例如，1010，-425</td>
</tr>
<tr>
<td>二进制</td>
<td>0b</td>
<td>由字符0和1组成，例如，0b101</td>
</tr>
<tr>
<td>八进制</td>
<td>0o</td>
<td>由字符0到7组成，例如，0o711</td>
</tr>
<tr>
<td>十六进制</td>
<td>0x</td>
<td>由字符0到9，a到f，A到F组成，例如0xABC</td>
</tr>
</tbody></table>
<p>  整数理论上是没有限制的，实际情况受限于运行python程序的计算机内存的大小</p>
<h2 id="浮点数类型"><a href="#浮点数类型" class="headerlink" title="浮点数类型"></a>浮点数类型</h2><p>eg：0.0，-77.0，-2.17,3.1415926,96e4</p>
<p><strong>科学计数法使用字母e或E作为幂的符号，以10为基数，含义为：&lt; a &gt;e&lt; b &gt; = a * 10^b</strong></p>
<p>浮点数类型的取值范围在[2^-1023,2^1023]之间，运算精确度极高</p>
<h2 id="复数类型"><a href="#复数类型" class="headerlink" title="复数类型"></a>复数类型</h2><p><strong>Python语言中，复数的虚数部分用后缀“J”或”j“来表示</strong></p>
<p>eg：12.3+4j    -5.6+7j      12.3e-4+5.67e+89j</p>
<p><strong>复数类型中实数部分和虚数部分的数值都是浮点数类型</strong>，对于复数Z,可以用z.real和z.imag分别获取它的实部和虚部</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;(<span class="number">1.23e-4</span>+<span class="number">5.67e+89j</span>).real</span><br><span class="line">&gt;&gt;&gt;(<span class="number">1.23e-4</span>+<span class="number">5.67e+89j</span>).imagr</span><br></pre></td></tr></table></figure>









]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="python数字类型的操作"><a href="#python数字类型的操作" class="headerlink" title="python数字类型的操作"></a>python数字类型的操作</h1><h2 id="内置的数值运算操作符"><a href="#内置的数值运算操作符" class="headerlink" title="内置的数值运算操作符"></a>内置的数值运算操作符</h2><table>
<thead>
<tr>
<th>操作符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>x+y</td>
<td>x与y之和</td>
</tr>
<tr>
<td>x-y</td>
<td>x与y之差</td>
</tr>
<tr>
<td>x*y</td>
<td>x与y之积</td>
</tr>
<tr>
<td>x/y</td>
<td>x与y之商</td>
</tr>
<tr>
<td>x//y</td>
<td>x与y的整数商，即不大于x与y商的最大整数</td>
</tr>
<tr>
<td>x%y</td>
<td>x与y之商的余数，也称为模运算</td>
</tr>
<tr>
<td>-x</td>
<td>x的负值，即x*（-1）</td>
</tr>
<tr>
<td>+x</td>
<td>x本身</td>
</tr>
<tr>
<td>x**y</td>
<td>x的y次幂，即x^y</td>
</tr>
</tbody></table>
<p>三种数字类型之间的逐渐拓展关系</p>
<p>整数——&gt;浮点数——&gt;复数</p>
<p>python数字类型转换的基本规则：</p>
<ul>
<li>整数之间运算，如果数学意义上的结果是小数，结果为浮点数</li>
<li>整数之间运算，如果数学意义上的结果是整数，结果是整数</li>
<li>整数与浮点数混合运算，输出的结果是浮点数</li>
<li>整数或浮点数与复数运算，输出的结果是复数</li>
</ul>
<h2 id="增强赋值操作符"><a href="#增强赋值操作符" class="headerlink" title="增强赋值操作符"></a>增强赋值操作符</h2><p>所有的二元数学操作符（+，-，*，/，//，%，**）都有与之对应的增强赋值运算符（+=，-=，=，/=，//=，%=，=）</p>
<p>设操作符为op</p>
<p>x op= y&lt;=&gt;x = x op y</p>
<h2 id="内置的数值运算函数"><a href="#内置的数值运算函数" class="headerlink" title="内置的数值运算函数"></a>内置的数值运算函数</h2><h3 id="内置的数值运算函数-1"><a href="#内置的数值运算函数-1" class="headerlink" title="内置的数值运算函数"></a>内置的数值运算函数</h3><table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>abs(x)</td>
<td>x的绝对值</td>
</tr>
<tr>
<td>divmod(x,y)</td>
<td>(x//y,x%y)，输出为二元组形式（也称为元组类型）</td>
</tr>
<tr>
<td>pow(x,y[,z])</td>
<td>（x**y）%z,[…]表示该参数可以忽略，即pow（x，y）</td>
</tr>
<tr>
<td>round(x[,ndigits])</td>
<td>对x进行四舍五入，保留ndigits位小数。round（x）返回四舍五入后的整数的值</td>
</tr>
<tr>
<td>max(x1,x2,x3,…,xn)</td>
<td>x1,x2,x3,…,xn的最大值</td>
</tr>
<tr>
<td>min(x1,x2,x3,…,xn)</td>
<td>x1,x2,x3,…,xn的最小值</td>
</tr>
</tbody></table>
<h2 id="内置的数字类型转换函数"><a href="#内置的数字类型转换函数" class="headerlink" title="内置的数字类型转换函数"></a>内置的数字类型转换函数</h2><table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>int(x)</td>
<td>将x转换为整数，x可以是浮点数或字符串</td>
</tr>
<tr>
<td>float(x)</td>
<td>返回浮点数x或者字符串x所对应的整数类型</td>
</tr>
<tr>
<td>complex(re[,im])</td>
<td>生成一个复数，实部为re，虚部为im，re可以是整数、浮点数或字符串，im可以是整数或浮点数但不能为字符串</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E6%96%87%E6%9C%AC%E8%BF%9B%E5%BA%A6%E6%9D%A1/</url>
    <content><![CDATA[<h1 id="文本进度条"><a href="#文本进度条" class="headerlink" title="文本进度条"></a>文本进度条</h1><p><strong>这是一个利用格式化输出和时间延迟实现控制台风格式文本进度条</strong></p>
<h2 id="简单的开始"><a href="#简单的开始" class="headerlink" title="简单的开始"></a>简单的开始</h2><p><strong>print()函数在输出结尾处会自动生成一个‘\n’,即换行符，从而让光标移动到下一行行首</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time                    <span class="comment">#引入time函数库</span></span><br><span class="line">scale = <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------执行开始------&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(scale+<span class="number">1</span>):</span><br><span class="line">    a, b = <span class="string">&#x27;**&#x27;</span> * i,<span class="string">&#x27;..&#x27;</span> * (scale - i)</span><br><span class="line">    c = (i/scale)*<span class="number">100</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%&#123;:^3.0f&#125;[&#123;&#125;-&gt;&#123;&#125;]&quot;</span>.<span class="built_in">format</span>(c, a, b))</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------执行结束------&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/dwx-tx.github.io/2021/12/16/python%E6%96%87%E6%9C%AC%E8%BF%9B%E5%BA%A6%E6%9D%A1/截屏\简单的开始.png"></p>
<h2 id="单行动态刷新"><a href="#单行动态刷新" class="headerlink" title="单行动态刷新"></a>单行动态刷新</h2><p><strong>单行动态刷新</strong>：每一次进度条的输出都固定在同一行，并不断地用新生成的字符串覆盖之前的输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">101</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\r&#123;:3&#125;%&quot;</span>.<span class="built_in">format</span>(i), end = <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">0.05</span>)</span><br></pre></td></tr></table></figure>

<h2 id="带刷新的文本进度条"><a href="#带刷新的文本进度条" class="headerlink" title="带刷新的文本进度条"></a>带刷新的文本进度条</h2><p>这种方式是采用time库中的time.clock()函数。</p>
<p><strong>第一次调用时计时开始，同一程序中第二次及后续调用时返回与第一次计时之间的时间差，单位为秒</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">scale = <span class="number">50</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;执行开始&quot;</span>.center(scale//<span class="number">2</span>,<span class="string">&#x27;-&#x27;</span>))</span><br><span class="line">t = time.clock()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(scale+<span class="number">1</span>):</span><br><span class="line">    a = <span class="string">&#x27;*&#x27;</span> * i</span><br><span class="line">    b = <span class="string">&#x27;.&#x27;</span> * (scale - i)</span><br><span class="line">    c = (i/scale)*<span class="number">100</span></span><br><span class="line">    t -= time.clock()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\r&#123;:^3.0f&#125;%[&#123;&#125;-&gt;&#123;&#125;]&#123;:.2f&#125;s&quot;</span>.<span class="built_in">format</span>(c,a,b,-t),\</span><br><span class="line">          end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">0.05</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;执行结束&quot;</span>.center(scale//<span class="number">2</span>,<span class="string">&#x27;-&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><ul>
<li>用户可以容忍最初的慢速增长</li>
<li>用户难以忍受在在进程快要结束时进度条突然停滞不前</li>
</ul>
<p>上述研究实际上建议在设计进度条时，可以适当降低开始阶段的进展速度，然后适当加快末尾阶段的发展速度，这样的调整可以使用户感到更加舒适</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E7%94%A8python%E5%86%99hello%20world/</url>
    <content><![CDATA[<h1 id="用python写Hello-World"><a href="#用python写Hello-World" class="headerlink" title="用python写Hello World"></a>用python写Hello World</h1><p>运行python程序有两种方式：交互式和文件式</p>
<h2 id="交互式"><a href="#交互式" class="headerlink" title="交互式"></a>交互式</h2><p>交互式又可分为通过cmd运行和通过IDLE远行两种</p>
<p><em><strong>这种方式写的Python代码是输入一行，执行一行</strong></em></p>
<h3 id="通过cmd运行hello-world"><a href="#通过cmd运行hello-world" class="headerlink" title="通过cmd运行hello world"></a>通过cmd运行hello world</h3><ol>
<li>打开cmd</li>
<li>在命令控制栏输入python进入python解释器</li>
<li>在&gt;&gt;&gt;后输入print（“hello world”）</li>
</ol>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%94%A8python%E5%86%99hello%20world/截屏\通过cmd输出helloworld.png"></p>
<h3 id="通过IDLE运行hello-world"><a href="#通过IDLE运行hello-world" class="headerlink" title="通过IDLE运行hello world"></a>通过IDLE运行hello world</h3><ol>
<li>点击python IDLE进入解释器</li>
<li>在file中新建或打开一个python文件</li>
<li>在文件中书写print（“hello world”）</li>
<li>点击Run即可运行</li>
</ol>
<h3 id="通过pycharm运行hello-world"><a href="#通过pycharm运行hello-world" class="headerlink" title="通过pycharm运行hello world"></a>通过pycharm运行hello world</h3><p>pycharm和idle都是Python语言的集成开发软件，在这里编写会更加方便，代码也会被pycharm自动保存下来</p>
<p>步奏和在IDLE编写代码时相同</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%94%A8python%E5%86%99hello%20world/截屏\python01.png"></p>
<h2 id="文件式"><a href="#文件式" class="headerlink" title="文件式"></a>文件式</h2><ol>
<li>新建一个文本文档</li>
<li>将新建的文本文档命名，并改变文档的拓展名为.py</li>
<li>在该文档中书写代码</li>
<li>通过cmd找到该文档运行<ul>
<li>查找文档所在的位置</li>
<li>输入python 文档名.py运行</li>
</ul>
</li>
</ol>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%94%A8python%E5%86%99hello%20world/截屏\cmd01.png"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E7%94%A8python%E5%86%99%E7%9A%84%E5%A5%BD%E7%8E%A9%E7%9A%84%E4%B8%9C%E8%A5%BF/</url>
    <content><![CDATA[<h2 id="表白用"><a href="#表白用" class="headerlink" title="表白用"></a>表白用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import turtle</span><br><span class="line">import time</span><br><span class="line"># 爱心的顶部</span><br><span class="line">def LittleHeart():</span><br><span class="line">    for i in range(200):</span><br><span class="line">        turtle.right(1)</span><br><span class="line">        turtle.forward(2)</span><br><span class="line">#输入表白语句</span><br><span class="line">love = input(&#x27;输入表白语句，默认I Love You：&#x27;)</span><br><span class="line">me = input(&quot;输入署名或者赠给谁，没有不执行：&quot;)</span><br><span class="line">if love ==&quot; &quot;:</span><br><span class="line">    love = &quot;I Love You&quot;</span><br><span class="line">#窗口大小</span><br><span class="line">turtle.setup(width=900,height=500)</span><br><span class="line">turtle.color(&quot;red&quot;,&quot;pink&quot;)</span><br><span class="line">turtle.pensize(3)</span><br><span class="line">turtle.speed(1)</span><br><span class="line">turtle.up()</span><br><span class="line">turtle.hideturtle()</span><br><span class="line">turtle.goto(0,-180)</span><br><span class="line">turtle.showturtle()</span><br><span class="line">turtle.down()</span><br><span class="line">turtle.speed(1)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.left(140)</span><br><span class="line">turtle.forward(224)</span><br><span class="line">LittleHeart()</span><br><span class="line">turtle.left(120)</span><br><span class="line">LittleHeart()</span><br><span class="line">turtle.forward(224)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.pensize(5)</span><br><span class="line">turtle.up()</span><br><span class="line">turtle.hideturtle()</span><br><span class="line">turtle.goto(0,0)</span><br><span class="line">turtle.showturtle()</span><br><span class="line">turtle.color(&#x27;#CD5C5C&#x27;,&#x27;pink&#x27;)</span><br><span class="line">turtle.write(love,font=(&#x27;gungsuh&#x27;,30),align=&quot;center&quot;)</span><br><span class="line">turtle.up()</span><br><span class="line">turtle.hideturtle()</span><br><span class="line">time.sleep(2)</span><br><span class="line">turtle.goto(0,0)</span><br><span class="line">turtle.showturtle()</span><br><span class="line">turtle.color(&#x27;red&#x27;,&#x27;pink&#x27;)</span><br><span class="line">turtle.write(love,font=(&#x27;gungsuh&#x27;,30),align=&quot;center&quot;)</span><br><span class="line">turtle.up()</span><br><span class="line">turtle.hideturtle()</span><br><span class="line">if me != &#x27; &#x27;:</span><br><span class="line">    turtle.color(&#x27;black&#x27;,&#x27;pink&#x27;)</span><br><span class="line">    time.sleep(2)</span><br><span class="line">    turtle.goto(180,180)</span><br><span class="line">    turtle.showturtle()</span><br><span class="line">    turtle.write(me,font=(20,),align=&quot;center&quot;,move=True)</span><br><span class="line">window = turtle.Screen()</span><br><span class="line">window.exitonclick()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>python蟒蛇绘制（python库函数的调用方法）</title>
    <url>/2021/12/16/python%E7%94%A8python%E5%86%99%E8%9F%92%E8%9B%87/</url>
    <content><![CDATA[<h1 id="python蟒蛇绘制（python库函数的调用方法）"><a href="#python蟒蛇绘制（python库函数的调用方法）" class="headerlink" title="python蟒蛇绘制（python库函数的调用方法）"></a>python蟒蛇绘制（python库函数的调用方法）</h1><h2 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import turtle</span><br><span class="line">turtle.setup(650, 350, 200, 200)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.fd(-250)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pensize(25)</span><br><span class="line">turtle.pencolor(&quot;purple&quot;)</span><br><span class="line">turtle.seth(-40)</span><br><span class="line">for i in range(4):</span><br><span class="line">    turtle.circle(40, 80)</span><br><span class="line">    turtle.circle(-40, 80)</span><br><span class="line">turtle.circle(40, 80/2)</span><br><span class="line">turtle.fd(40)</span><br><span class="line">turtle.circle(16, 180)</span><br><span class="line">turtle.fd(40 * 2/3)</span><br></pre></td></tr></table></figure>

<p>方法：使用绘制图形的turtle库</p>
<p><strong>使用保留字import应用函数库</strong></p>
<p>被调用的函数都使用了&lt; a &gt;.&lt; b &gt;()形式。通过使用函数库并利用函数进行编程的方法称为“模块编程”</p>
<h2 id="利用import引用函数的两种方式"><a href="#利用import引用函数的两种方式" class="headerlink" title="利用import引用函数的两种方式"></a>利用import引用函数的两种方式</h2><ul>
<li><p>import&lt;库名&gt;</p>
<p>&lt;库名&gt;.&lt;函数名&gt;（&lt;函数参数&gt;）</p>
</li>
<li><p>from &lt;库名&gt; import &lt;函数名，函数名，…，函数名&gt;</p>
<p>from&lt;库名&gt;import * 其中，*是通配符，代表所有的函数</p>
<p>在调用此函数时不在需要使用库名</p>
<p>一般格式为&lt;函数名&gt;(&lt;函数参数&gt;)</p>
</li>
</ul>
<h3 id="以第一种方法"><a href="#以第一种方法" class="headerlink" title="以第一种方法"></a>以第一种方法</h3><p><strong>特点</strong>：采用&lt; a &gt;.&lt; b &gt;()方式调用库中函数，能够显示标明函数的来源，在引用较多库时代码的可读性更好。</p>
<p>在使用第一种引用方式，python解释器将&lt; a &gt;.&lt; b &gt;整体作为函数名。</p>
<h3 id="以第二种方式"><a href="#以第二种方式" class="headerlink" title="以第二种方式"></a>以第二种方式</h3><p><strong>特点</strong>：能够直接应用库中函数，可以是代码更加简洁</p>
<p>在采用该种方式引用函数时，python解释器会将&lt; b &gt;作为函数名</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="python程序控制结构"><a href="#python程序控制结构" class="headerlink" title="python程序控制结构"></a>python程序控制结构</h1><p>程序都是有三种基本结构组成的<strong>顺序结构</strong>，<strong>分支结构</strong>，<strong>循环结构</strong></p>
<h2 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h2><h3 id="单分支结构：if结构"><a href="#单分支结构：if结构" class="headerlink" title="单分支结构：if结构"></a>单分支结构：if结构</h3><p>python中if语句的语法结构格式如下:</p>
<p>if &lt;条件&gt;:</p>
<p>  &lt;语句块&gt;</p>
<p>语句块是满足if条件后执行的一句或几句程序，通常，当条件判断为True时，执行语句块，当判断为False时，跳过语句块不执行。</p>
<p>对于条件语句，python提供了六种关系操作符</p>
<table>
<thead>
<tr>
<th>操作符</th>
<th>操作符含义</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;</td>
<td>小于</td>
</tr>
<tr>
<td>&lt;=</td>
<td>小于或等于</td>
</tr>
<tr>
<td>&gt;=</td>
<td>大于或等于</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于</td>
</tr>
<tr>
<td>==</td>
<td>等于</td>
</tr>
<tr>
<td>!=</td>
<td>不等于</td>
</tr>
</tbody></table>
<p><strong>特别注意</strong>：在python语言中’=’是赋值，‘==’是表示等于</p>
<h3 id="二分支结构：if-else结构"><a href="#二分支结构：if-else结构" class="headerlink" title="二分支结构：if-else结构"></a>二分支结构：if-else结构</h3><p>python中if-else语句语法格式如下：</p>
<p>if&lt;条件&gt;:</p>
<p>​    &lt;语句块一&gt;</p>
<p>else:</p>
<p>​    &lt;语句块二&gt;</p>
<p>在执行二分支结构时，先判断if后的条件语句，但结果为True时，执行语句一，否则执行语句二。</p>
<h3 id="多分支结构：if-elif-else"><a href="#多分支结构：if-elif-else" class="headerlink" title="多分支结构：if-elif-else"></a>多分支结构：if-elif-else</h3><p>python语言中if-elif-else语句语法格式如下:</p>
<p>if&lt;条件一&gt;:</p>
<p>​    &lt;语句块一&gt;</p>
<p>elif&lt;条件二&gt;:</p>
<p>​    &lt;语句块二&gt;</p>
<p>…………………</p>
<p>elif&lt;条件n&gt;:</p>
<p>​    &lt;语句块n&gt;</p>
<p>else:</p>
<p>&lt;语句块n+1&gt;</p>
<p>执行时是从上到下依次执行判断，当某个条件语句结果为True时执行它所对应的语句块，然后跳出结构，<strong>及使后边还有条件语句判断为True，也不会执行</strong>；如果条件语句结果都为False,执行else下的语句块n+1。</p>
<h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><h3 id="遍历循环：for语句"><a href="#遍历循环：for语句" class="headerlink" title="遍历循环：for语句"></a>遍历循环：for语句</h3><p>python通过保留字for实现“遍历循环”，格式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> &lt;循环变量&gt; <span class="keyword">in</span> &lt;遍历结构&gt;:</span><br><span class="line">    &lt;语句块&gt;</span><br></pre></td></tr></table></figure>

<p>遍历循环可以理解为从遍历结构中逐一提取元素，放在循环变量中，对于所提取的每个元素执行一次语句块。</p>
<p>遍历结构可以是<strong>字符串</strong>，<strong>文件</strong>，<strong>组合数据类型</strong>，<strong>range（）函数</strong>等，常用的方法如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):       <span class="comment">#自行N次，是从0到N-1</span></span><br><span class="line">    &lt;语句块&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fi:  <span class="comment">#遍历fi文件的每一行</span></span><br><span class="line">    &lt;语句块&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> s:          <span class="comment">#遍历字符串s的每个字符</span></span><br><span class="line">    &lt;语句块&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> items <span class="keyword">in</span> ls:                 <span class="comment">#遍历列表ls的每个元素</span></span><br><span class="line">    &lt;语句块&gt;</span><br></pre></td></tr></table></figure>

<p>也有一种和else结合使用的扩展模式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> &lt;循环变量&gt; <span class="keyword">in</span> &lt;遍历结构&gt; :</span><br><span class="line">    &lt;语句块<span class="number">1</span>&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;语句块<span class="number">2</span>&gt;</span><br></pre></td></tr></table></figure>

<p>意义为：<strong>在执行完for循环后会执行else下的语句块2</strong></p>
<h3 id="无线循环：while语句"><a href="#无线循环：while语句" class="headerlink" title="无线循环：while语句"></a>无线循环：while语句</h3><p>python通过保留字while实现无线循环，格式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> &lt;条件&gt;:</span><br><span class="line">    &lt;语句块&gt;</span><br></pre></td></tr></table></figure>

<p>和if结构一样，当条件为True时，执行语句块，当条件为False时跳出循环结构</p>
<p>while也可以和else一起使用</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>&lt;条件&gt;:</span><br><span class="line">    &lt;语句块<span class="number">1</span>&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;语句块<span class="number">2</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="循环保留字continue和break"><a href="#循环保留字continue和break" class="headerlink" title="循环保留字continue和break"></a>循环保留字continue和break</h3><p>和C语言中break和continue关键字的作用一样</p>
<p>continue：结束本次循环，仍在循环结构中</p>
<p>break：结束整个循环，跳出循环结构</p>
<p>而且，两者只能结束一层的循环，如果要对多层循环进行操作需要多次使用</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h1 id="python程序的异常处理"><a href="#python程序的异常处理" class="headerlink" title="python程序的异常处理"></a>python程序的异常处理</h1><h2 id="异常处理：try—except语句"><a href="#异常处理：try—except语句" class="headerlink" title="异常处理：try—except语句"></a>异常处理：try—except语句</h2><p>当用户输入的数据类型了python要求执行的类型不同时，python解释器会报错</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/截屏\python异常1.png"></p>
<p><strong>NameError</strong>就是此时的异常类型，数据类型出错</p>
<p>Python使用try-except语句格式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    &lt;语句块<span class="number">1</span>&gt;</span><br><span class="line"><span class="keyword">except</span>&lt;异常类型&gt;:</span><br><span class="line">    &lt;语句块<span class="number">2</span>&gt;</span><br></pre></td></tr></table></figure>

<h2 id="异常的高级用法"><a href="#异常的高级用法" class="headerlink" title="异常的高级用法"></a>异常的高级用法</h2><p>try和except还可以与else和finally保留字配合使用</p>
<p>格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    &lt;语句块<span class="number">1</span>&gt;</span><br><span class="line"><span class="keyword">except</span> &lt;异常类型<span class="number">1</span>&gt;:</span><br><span class="line">    &lt;语句块<span class="number">2</span>&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;语句块<span class="number">3</span>&gt;</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    &lt;语句块<span class="number">4</span>&gt;</span><br></pre></td></tr></table></figure>

<p>此处的else语句与for循环和while循环中的else一样，当try中的语句块1正常执行结束且没有发生异常时，else中的语句块3执行，看作是对try语句块正常执行后的一种追加处理。finally语句块则不同，无论try中的语句块1是否发生异常，finally下的语句块4都会执行。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="python第三方库的安装"><a href="#python第三方库的安装" class="headerlink" title="python第三方库的安装"></a>python第三方库的安装</h1><p><strong>python语言提供了三种安装第三方库的方法，希望观者能全部掌握</strong></p>
<h2 id="pip工具安装"><a href="#pip工具安装" class="headerlink" title="pip工具安装"></a>pip工具安装</h2><p>pip是python内置命令，需要通过输入指令来执行命令</p>
<p><strong>需要保持电脑处于通网状态</strong></p>
<p>对于python3的用户，在安装python3时已经自动安装了pip，但对于python2的用户还需要在python官网下载pip</p>
<p><strong>在此处我使用安装第三方库是在Windows的cmd上操作的</strong></p>
<p><strong>请勿在IDLE环境下运行pip</strong></p>
<p>第一步 打开cmd 输入命令D:使其进入D盘中（因为我的pip是在D盘中下载的）</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\pip1.png"></p>
<p>第二步 输入指令 pip -h 可以检测说明pip可执行的命令</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\pip2.png"></p>
<p>如图中所示，Commands就是pip可执行的命令</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>install</td>
<td>安装</td>
</tr>
<tr>
<td>download</td>
<td>下载</td>
</tr>
<tr>
<td>uninstall</td>
<td>卸载</td>
</tr>
<tr>
<td>list</td>
<td>列表</td>
</tr>
<tr>
<td>show</td>
<td>查看</td>
</tr>
<tr>
<td>search</td>
<td>查找</td>
</tr>
</tbody></table>
<h2 id="pip使用方法"><a href="#pip使用方法" class="headerlink" title="pip使用方法"></a>pip使用方法</h2><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><p>pip   &lt;命令&gt;   &lt;虚拟库名&gt;</p>
<p><strong>这里我只演示了install和uninstall操作</strong>以tqdm为例</p>
<h3 id="install"><a href="#install" class="headerlink" title="install"></a>install</h3><p>第一步：在命令行输入pip  install  tqdm</p>
<p>第二步：等待，不要做任何操作，在进度条读取完后就代表库安装完成</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\pip3.png"></p>
<h3 id="uninstall"><a href="#uninstall" class="headerlink" title="uninstall"></a>uninstall</h3><p>第一步：在命令行输入pip uninstall tqdm</p>
<p>第二步：计算机会先找到tqdm的位置，并询问是否继续 输入y</p>
<p>第三部：tqdm已经从电脑中被移除</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\pip4.png"></p>
<h2 id="pycharm第三方库安装"><a href="#pycharm第三方库安装" class="headerlink" title="pycharm第三方库安装"></a>pycharm第三方库安装</h2><p>这里我使用的集成开发环境是pycharm，所以这里我介绍的是pycharm第三方库安装的方法</p>
<p>第一步：选择File——&gt;setting</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\pycharm第三方函数库1.png"></p>
<p>第二步：选择project——&gt;python interpreter</p>
<p><strong>在此处也可以看到我们已经下载安装过的函数</strong></p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\pycharm第三方函数库2.png"></p>
<p>第三步: 点击下方的加号，在搜索列表中输入你要添加的函数库，等待函数库的安装</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\pycharm第三方函数库3.png"></p>
<p>第四步：在安装完成后就可以正常使用了</p>
<h2 id="自定义安装"><a href="#自定义安装" class="headerlink" title="自定义安装"></a>自定义安装</h2><p>这里是python安装第三方函数库的方法，可以在官方给与的维护库中自定义安装第三方函数</p>
<blockquote>
<p><a href="http://www.numpy.org/">www.numpy.org</a></p>
</blockquote>
<p>这是开发者维护的官网</p>
<blockquote>
<p><a href="http://www.scipy.org/">www.scipy.org</a></p>
</blockquote>
<p>这是浏览器下该网页的下载链接</p>
<p>第一步：打卡网站,点解install（下载）</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\scipy01.png"></p>
<p>第二步：点击pip，这里我还是选择pip下载</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\scipy02.png"></p>
<p>第三步：复制箭头指向的指令复制到cmd上，等待下载</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\scipy03.png"></p>
<p>第四步：在下载过程中保持网络开放状态</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\scipy04.png"></p>
<p>这次的下载会加载好多第三方函数库，几乎包括了全部常用的</p>
<p>第五步：检查</p>
<p>在cmd命令行输入pip list来查看所下载的函数库</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\scipy05.png"></p>
<p><strong>注意</strong>这种方式要求网络状态良好，热点亲测不行，因为服务器在国外的原因，网络状态不佳往往会引起失败</p>
<h2 id="python-IDLE第三方函数库安装"><a href="#python-IDLE第三方函数库安装" class="headerlink" title="python IDLE第三方函数库安装"></a>python IDLE第三方函数库安装</h2><p>第一步：进入python官网，选择pypi</p>
<blockquote>
<p><a href="http://www.python.org/">www.python.org</a></p>
</blockquote>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\python1.png"></p>
<p>第二步：搜索第三方函数库名</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\python2.png"></p>
<p>第三步：选择搜索到的第三方函数库(这里用tqdm做演示)</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\python3.png"></p>
<p>第四步：安装第三方函数库，并解压</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/截屏\python4.png"></p>
<p>第五步：解压结束后就安装成功了</p>
]]></content>
  </entry>
  <entry>
    <title>组合数据类型概述</title>
    <url>/2021/12/16/python%E7%BB%84%E5%90%88%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="组合数据类型概述"><a href="#组合数据类型概述" class="headerlink" title="组合数据类型概述"></a>组合数据类型概述</h1><p><strong>组合数据额类型为多个同类型或不同类型数据提供单一表示。组合数据类型分3类：序列类型、集合类型、映射类型</strong></p>
<hr>
<ul>
<li>基本数据类型：表示单一数据类型</li>
<li>组合数据类型：能够表示多个数据的类型</li>
</ul>
<h2 id="三种数据类型"><a href="#三种数据类型" class="headerlink" title="三种数据类型"></a>三种数据类型</h2><ul>
<li>序列类型：是一个元素向量，元素之间存在先后关系，通过序号访问，元素之间不排他（可以有重复项）</li>
<li>集合类型：一个元素集合，元素之间无需，相同元素在集合中唯一存在</li>
<li>映射类型：“键-值”数据项的组合，每个元素是一个键值对，表示为（key，value）</li>
</ul>
<h2 id="序列类型"><a href="#序列类型" class="headerlink" title="序列类型"></a>序列类型</h2><p>序列类型是一维元素向量，元素之间存在先后关系，通过序号访问。序列的基本思想和表示方法均来源于数学概念</p>
<hr>
<p>由于元素之间存在顺序关系，所以序列中可以存在数值相同但位置不同的元素。序列类型支持成员关系操作符（in）、长度计算函数（len（））、分片([])，元素本事也可以是序列类型</p>
<h3 id="三种比较重要的类型及其特点"><a href="#三种比较重要的类型及其特点" class="headerlink" title="三种比较重要的类型及其特点"></a>三种比较重要的类型及其特点</h3><p>Python语言中有很多数据类型都是序列类型，不过比较重要的有三种：str（字符串）、tuple（元祖）、list（列表）</p>
<ul>
<li>字符串：字符串可以看成是单一字符的有序组合，属于序列类型，同时因为序列经常用一个字符串表示一个含义，也被看作是基本数据类型</li>
<li>元组：是包含0个或多个数据项的不可变序列类型。元组生成后是固定的，其中任何数据项不能替换或删除</li>
<li>列表：可以修改序列中的数据，比较灵活</li>
</ul>
<h3 id="序列类型的通用操作符和函数"><a href="#序列类型的通用操作符和函数" class="headerlink" title="序列类型的通用操作符和函数"></a>序列类型的通用操作符和函数</h3><table>
<thead>
<tr>
<th>操作符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>x in s</td>
<td>如果x是s的元素，返回True，否则返回False</td>
</tr>
<tr>
<td>x not in s</td>
<td>如果x不是s的元素，返回True，否则返回False</td>
</tr>
<tr>
<td>s + t</td>
<td>连接s和t</td>
</tr>
<tr>
<td>s * n 或 n * s</td>
<td>将序列s复制n次</td>
</tr>
<tr>
<td>s[i]</td>
<td>索引，返回序列的第i个元素</td>
</tr>
<tr>
<td>s[i:j]</td>
<td>分片，返回包含s第i到j个元素的子序列（不包含第j个元素）</td>
</tr>
<tr>
<td>s[i:j:k]</td>
<td>步骤分片，返回包含s第i到j个元素的子序列（不包含第j个元素），以k为步数</td>
</tr>
<tr>
<td>len(s)</td>
<td>序列s的元素个数（长度）</td>
</tr>
<tr>
<td>min(s)</td>
<td>序列s中的最小元素</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>操作符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>max(s)</td>
<td>序列s中的最大元素</td>
</tr>
<tr>
<td>s.index(x[,,i[,j]])</td>
<td>序列s中从i开始到j位置中第一次出现元素x的位置</td>
</tr>
<tr>
<td>s.count(x)</td>
<td>序列s中出现x的总次数</td>
</tr>
</tbody></table>
<p><strong>生成元组</strong>只需要使用逗号将元素隔离开即可，一个元组可以作为另一个元组的元，可以采用多级索引获取信息。</p>
<p>元组除了用于表达固定数据项外，还常用于3种情况：函数多返回值、多变量同步赋值、循环遍历</p>
<h2 id="集合类型"><a href="#集合类型" class="headerlink" title="集合类型"></a>集合类型</h2><p>和数学中集合的特点一样，<strong>集合中的元素不能重复</strong>，元素类型只能是固定数据类型：整数、浮点数、字符串、元组等。</p>
<p>而列表，字典和集合类型本身都是可变数据类型，不能作为集合的元素出现</p>
<h3 id="哈希运算"><a href="#哈希运算" class="headerlink" title="哈希运算"></a>哈希运算</h3><p>哈希运算可以将任意长度的二进制值映射为较短的固定长度的二进制值，这个小的二进制值称为哈希值。哈希值是对数据的一种<strong>有损</strong>且<strong>紧凑</strong>的表示形式。Python提供了一个内置的hash（）函数来计算数据的哈希值</p>
<p>哈希值与哈希前的内容无关，也与这些内容的组合无关，可以说，哈希值是在另一维度的数据。</p>
<h3 id="结合类型的操作"><a href="#结合类型的操作" class="headerlink" title="结合类型的操作"></a>结合类型的操作</h3><p>由于集合是<strong>无序</strong>组合，它没有<strong>索引</strong>和<strong>位置</strong>的概念，不能分片，集合中元素可以动态增加或删除。集合用大括号（{}）表示，<strong>可以用赋值语句生成一个集合</strong></p>
<p> <strong>集合类型的操作数</strong></p>
<table>
<thead>
<tr>
<th>操作数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>S_T或S.difference(T)</td>
<td>返回一个新集合，包括在集合S中但不在集合T中的元素</td>
</tr>
<tr>
<td>S-=T或S.difference_update(T)</td>
<td>更新集合S，包括在集合S中但不在集合T中的元素</td>
</tr>
<tr>
<td>S&amp;T或S.intersection(T)</td>
<td>返回一个新的集合，包括同时集中在集合S和T中的元素</td>
</tr>
<tr>
<td>S&amp;=T或intersction_update(T)</td>
<td>更新集合S，包括同时集中在集合S和T中的元素</td>
</tr>
<tr>
<td>s^T或s.symmetric_difference(T)</td>
<td>返回一个新集合，包括集合S和T中的元素但不包括同时在其中的元素</td>
</tr>
<tr>
<td>S^=T或s.symmetric_difference_update(T)</td>
<td>更新集合S，包括集合S和T中的元素但不包括同时在其中的元素</td>
</tr>
<tr>
<td>S|T或S.union(T)</td>
<td>返回一个新的集合，包括S和T中的所有元素</td>
</tr>
<tr>
<td>S|=T或S.update(T)</td>
<td>更新集合S，包括S和T中的所有元素</td>
</tr>
<tr>
<td>S&lt;=T或S.issubset(T)</td>
<td>如果S与T相同或S是T的子集，返回True，否则返回False</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>操作数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>S&gt;=T或S.issuperset(T)</td>
<td>如果S与T相同或S是T的超级，返回True，否则返回False</td>
</tr>
</tbody></table>
<p><strong>集合类型的操作函数或方法</strong></p>
<table>
<thead>
<tr>
<th>操作函数或方法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>S.add(x)</td>
<td>如果数据项x不在集合S中，将x增加到S</td>
</tr>
<tr>
<td>S.clear()</td>
<td>移除S中的所有数据项</td>
</tr>
<tr>
<td>S.copy()</td>
<td>返回一个集合S的副本</td>
</tr>
<tr>
<td>S.pop()</td>
<td>随机返回集合S中的一个元素，如果S为空，产生KeyError异常</td>
</tr>
<tr>
<td>S.discard(x)</td>
<td>如果x在集合S中，移除该元素；如果x不在集合S中，不报错</td>
</tr>
<tr>
<td>S.remove(x)</td>
<td>如果x在集合S中，移除该元素；不在则产生KeyError异常</td>
</tr>
<tr>
<td>S.isdisjoint(T)</td>
<td>如果集合S与T没有相同元素，返回True</td>
</tr>
<tr>
<td>len(S)</td>
<td>返回集合S的元素个数</td>
</tr>
<tr>
<td>x in S</td>
<td>如果x是S的元素，返回True，否则返回False</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>操作函数或方法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>x not in S</td>
<td>如果x不是S的元素，返回True，否则返回False</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>初识python语言</title>
    <url>/2021/12/16/python%E9%A2%84%E7%A7%91%E4%B8%80/</url>
    <content><![CDATA[<h1 id="初识python语言"><a href="#初识python语言" class="headerlink" title="初识python语言"></a>初识python语言</h1><h2 id="编译与解释"><a href="#编译与解释" class="headerlink" title="编译与解释"></a>编译与解释</h2><p>高级语言按照计算机执行的方式不同可分为两种：静态语言和脚本语言</p>
<ul>
<li>静态语言采用编译执行——&gt;C语言，Java语言</li>
<li>动态语言采用解释执行——&gt;python语言</li>
</ul>
<p><strong>编译</strong>是将源代码转换成目标代码的过程，通常，源代码是高级语言，目标代码是机器语言代码，执行编译的计算机程序称为编译器</p>
<p><strong>解释</strong>是将源代码<em><strong>逐条</strong></em>转换成目标代码同时逐条运行目标代码的过程。执行解释的计算机程序称为解释器</p>
<hr>
<p>注意两者区别：</p>
<p><em><strong>一旦程序被编译，不再需要编译程序或源代码。解释则在每次程序进行时都需要解释器和代码</strong></em></p>
<hr>
<h3 id="编译与解释的好处"><a href="#编译与解释的好处" class="headerlink" title="编译与解释的好处"></a>编译与解释的好处</h3><p><strong>采用编译方式有如下好处</strong></p>
<ul>
<li>对于相同的源代码，编译所产生的目标代码执行速度更快。</li>
<li>目标代码不需要编译器就可以运行，在同类型操作系统上使用灵活</li>
</ul>
<p><strong>采用解释方式有如下好处</strong></p>
<ul>
<li>解释执行需要保留源代码，程序纠错和维护十分方便</li>
<li>只要存在编译器，源代码可以在任何操作系统上运行，可移植性好</li>
</ul>
<h2 id="python语言概述"><a href="#python语言概述" class="headerlink" title="python语言概述"></a>python语言概述</h2><p><em><strong>python语言是一语法简洁、跨平台、可拓展的开源通用脚本语言</strong></em></p>
<h3 id="开源软件"><a href="#开源软件" class="headerlink" title="开源软件"></a>开源软件</h3><p>开源软件是一类开放源代码软件的统称，这类软件的源代码在特定可协议范围内，可以被任何人学习、修改、甚至发布。</p>
<h3 id="Python语言特点"><a href="#Python语言特点" class="headerlink" title="Python语言特点"></a>Python语言特点</h3><ol>
<li>语法简洁：实现相同功能，python语言的代码行数仅为C语言的1/10~1/5</li>
<li>与平台无关：作为脚本语言，python程序可以在任何安装了解释器的电脑上运行，可以不经修改实现跨平台</li>
<li>粘性扩展：python可以通过接口和函数库等方式将其他语言整合在一起</li>
<li>开源理念：</li>
<li>灵活运用：功能十分强大，在各种领域都有运用</li>
<li>强制可读：具有很强的格式，采用强制缩进来实现语句间的逻辑关系</li>
<li>支持中文：</li>
<li>模式多样</li>
<li>库类丰富</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Python程序语法元素分析</title>
    <url>/2021/12/16/python%E9%A2%84%E7%A7%91%E4%BA%8C/</url>
    <content><![CDATA[<h1 id="Python程序语法元素分析"><a href="#Python程序语法元素分析" class="headerlink" title="Python程序语法元素分析"></a>Python程序语法元素分析</h1><h2 id="程序的格式框架"><a href="#程序的格式框架" class="headerlink" title="程序的格式框架"></a>程序的格式框架</h2><p><strong>python语言采用严格的“缩进”来表明程序的格式框架。</strong></p>
<p><strong>缩进指每一行代码开始前的空白区域，用来表示代码之间的包含和层次关系</strong></p>
<p>代码编写中，缩进可以用<strong>Tab</strong>键实现，也可以用多个空格<strong>（一般是四个空格）</strong>实现，但两者不能混用。<strong>建议使用四个空格的编写方式</strong></p>
<p>除了单层缩进，一个程序的缩进还可以“嵌套”从而形成多层缩进，python语言对语句之间的层次关系没有限制，可以“无限制”嵌套使用</p>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul>
<li>单行注释 #</li>
<li>多行注释‘’‘</li>
</ul>
<h2 id="命名与保留字"><a href="#命名与保留字" class="headerlink" title="命名与保留字"></a>命名与保留字</h2><p>python 语言允许采用大写<strong>大写字母</strong>、<strong>小写字母</strong>、<strong>数字</strong>、<strong>下划线</strong>、和汉字等字符给变量命名</p>
<p>但首字母不能是数字，中间不能出现空格，长度没有限制</p>
<p>注意：<strong>标识符对大小写敏感，python和Python是两个不同的名字</strong></p>
<h3 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h3><p>保留字（keyword），也称关键字，指被编程语言内部定义并保留使用的标识符。<strong>程序员在编写程序时不能定义与使用保留字相同的标识符</strong>。</p>
<p>Python 3 的 33 个保留字列表</p>
<table>
<thead>
<tr>
<th>False</th>
<th>def</th>
<th>if</th>
<th>raise</th>
</tr>
</thead>
<tbody><tr>
<td>None</td>
<td>del</td>
<td>import</td>
<td>return</td>
</tr>
<tr>
<td>Ture</td>
<td>elif</td>
<td>in</td>
<td>try</td>
</tr>
<tr>
<td>and</td>
<td>else</td>
<td>is</td>
<td>while</td>
</tr>
<tr>
<td>as</td>
<td>except</td>
<td>lambda</td>
<td>with</td>
</tr>
<tr>
<td>assert</td>
<td>finally</td>
<td>nonlocal</td>
<td>yield</td>
</tr>
<tr>
<td>break</td>
<td>for</td>
<td>not</td>
<td></td>
</tr>
<tr>
<td>class</td>
<td>from</td>
<td>or</td>
<td></td>
</tr>
<tr>
<td>continue</td>
<td>global</td>
<td>pass</td>
<td></td>
</tr>
</tbody></table>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>python语言的字符串有两种序号体系：</p>
<ul>
<li>正向递增序号：以最左侧字符序号为0，向右依次递增，最右侧的字符序号为L-1</li>
<li>反向递减序号：以最右侧字符序号为-1，向左依次递减最左侧的字符序号为-L</li>
</ul>
<hr>
<p>反向递减序号</p>
<p>&lt;——————————————————</p>
<p>-11-10 -9 -8 -7 -6    -5    -4  -3  -2  -1</p>
<p>[H] [e] [l] [l] [o] [ ] [W] [o] [r] [l] [d] </p>
<p>0      1   2  3   4   5   6   7     8    9   10</p>
<p>——————————————————&gt;</p>
<p>正向递增序号</p>
<hr>
<h3 id="python访问字符串的方法"><a href="#python访问字符串的方法" class="headerlink" title="python访问字符串的方法"></a>python访问字符串的方法</h3><p>python字符串也提供区间访问方式，采用**[N:M]**格式，表示字符串中从N到M（不包含M）的子字符串</p>
<p>N和M为字符串的索引序号，<strong>可以混合使用</strong>正向递增序号和反向递减序号</p>
<h2 id="赋值语句"><a href="#赋值语句" class="headerlink" title="赋值语句"></a>赋值语句</h2><p>python语言中“=”表示“赋值”</p>
<p><strong>python语言可以对变量一一赋值</strong></p>
<p><strong>也可以同步赋值多个变量</strong></p>
<p>&lt;变量1&gt;,…,&lt;变量N&gt; = &lt;表达式1&gt;,…,&lt;表达式N&gt;</p>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;t = x</span><br><span class="line">&gt;&gt;&gt;x = y</span><br><span class="line">&gt;&gt;&gt;y = t</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;x, y = y, x</span><br></pre></td></tr></table></figure>

<h2 id="input-语句"><a href="#input-语句" class="headerlink" title="input()语句"></a>input()语句</h2><p><strong>无论用户在控制台输入什么内容，input（）函数都以字符串类型返回结果</strong></p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E9%A2%84%E7%A7%91%E4%BA%8C/截屏\input函数.png"></p>
<h2 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h2><p>使用方法如下：</p>
<p>if&lt;条件一&gt;</p>
<p>   &lt;语句块一&gt;</p>
<p>elif&lt;条件二&gt;</p>
<p>​      &lt;语句块二&gt;</p>
<p>…</p>
<p>else：</p>
<p>​      &lt;语句块N&gt;</p>
<p>其中else 额立法 else都是保留字</p>
<h2 id="eval（）函数"><a href="#eval（）函数" class="headerlink" title="eval（）函数"></a>eval（）函数</h2><p>eval（&lt;字符串&gt;）函数是python语言中十分重要的函数，它能够以python表达式的方式解析并执行字符串</p>
<p>即将输入的字符串转变成python语句来执行</p>
<p><img src="/dwx-tx.github.io/2021/12/16/python%E9%A2%84%E7%A7%91%E4%BA%8C/截屏\eval函数.png"></p>
<p><strong>python支持</strong> + - * / **（幂运算）五种基本运算符</p>
<h2 id="print（）函数"><a href="#print（）函数" class="headerlink" title="print（）函数"></a>print（）函数</h2><p>当输出纯字符信息时，可以直接将待输出内容传递给print（）函数，当输出变量时，采用格式化输出的方法，通过format（）方法将待输出变量整理成期望输出的格式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;转换后的温度为&#123;:.2f&#125;C&quot;</span>.<span class="built_in">format</span>(C))</span><br></pre></td></tr></table></figure>

<p>具体来说就是print（）函数用格式槽{}和format（）方式将变量和字符串结合在一起输出</p>
<p>在上述的程序中{}表示一个槽位置，这个大括号里的内容由字符串后紧跟的format（）方法中的参数C填充</p>
<h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>循环语句和分支语句相似，他们决定一个语句是否执行多次</p>
<p>基本结构为：</p>
<p>​                      while(&lt;条件&gt;)：</p>
<p>​                                 &lt;语句块一&gt;</p>
<p>​                       &lt;语句块二&gt;</p>
<p>当条件结果为真（True）时，执行语句一，当条件结果为假（False）时，跳出循环，执行语句二</p>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>函数可以分为两种：</p>
<ul>
<li>内置函数如print input eval等</li>
<li>自造的函数，用保留字def定义函数</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>SpringAOP的实现</title>
    <url>/2022/02/10/springAOP%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="SpringAOP的实现"><a href="#SpringAOP的实现" class="headerlink" title="SpringAOP的实现"></a>SpringAOP的实现</h1><p>AOP指的是横向开发，在以前的学习中我们都是习惯于纵向开发，但是横向开发同样重要。之前的横向开发我们使用的是动态代理模式和静态代理模式，今天我们学习Spring中的AOP来实现横向开发，它的核心其实也是动态代理模式</p>
<h2 id="学习AOP前的准备"><a href="#学习AOP前的准备" class="headerlink" title="学习AOP前的准备"></a>学习AOP前的准备</h2><p><strong>1.导包</strong></p>
<p>使用AOP需要导<strong>aspectjweaver</strong>包</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>2.创建学习模型</strong></p>
<p>AOP官网是纯理论的东西，学习一个不熟悉的理论最好的办法就是实践，因此我们通过创建模型的方式学习AOP</p>
<p>搭建一个有“增删改查”功能的模型，以及我们横向开发要给每个方法加日志</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/02/22dab34b17c91ed2.jpg"> </p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/02/1c3e872cbbf0245a.jpg"> </p>
<h2 id="使用Spring实现AOP"><a href="#使用Spring实现AOP" class="headerlink" title="使用Spring实现AOP"></a>使用Spring实现AOP</h2><p>实现AOP的方式很多，这里我们时使用Spring自带的接口来实现AOP</p>
<p>Spring为我们提供了很多AOP的接口，使用方法就是把要插入的类继承各个位置的接口即可</p>
<h3 id="继承抽象类"><a href="#继承抽象类" class="headerlink" title="继承抽象类"></a>继承抽象类</h3><p><strong>例如在方法前加方法：</strong></p>
<p>继承这个接口：<code>MethodBeforeAdvice</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.MethodBeforeAdvice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeforLog</span> <span class="keyword">implements</span> <span class="title">MethodBeforeAdvice</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(Method method, Object[] args, Object target)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>元素分析：</strong></p>
<ul>
<li>method：要执行的目标对象的方法</li>
<li>args：参数</li>
<li>target：要执行的目标对象</li>
</ul>
<p>这里我们要添加的是一个日志功能，具体理论就是通过method.getname()来获得执行的方法的名字即可</p>
<p><strong>例如在方法后加日志：</strong></p>
<p>继承<code>AfterReturningAdvice</code>接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.log;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.AfterReturningAdvice;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EndLog</span> <span class="keyword">implements</span> <span class="title">AfterReturningAdvice</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(Object returnValue, Method method, Object[] args, Object target)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>元素分析：</strong></p>
<ul>
<li>method：要执行的目标对象的方法</li>
<li>args：参数</li>
<li>target：要执行的目标对象</li>
<li>returnValue：返回值</li>
</ul>
<h3 id="把我们创建的类都注册到日志中"><a href="#把我们创建的类都注册到日志中" class="headerlink" title="把我们创建的类都注册到日志中"></a>把我们创建的类都注册到日志中</h3><ul>
<li>注册所有的类</li>
<li>配置AOP<ul>
<li>在xml头文件中天界aop的命名空间</li>
<li>在xml中使用<code>&lt;aop:xx&gt;</code>来使用aop</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</span><br><span class="line">        http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">        http://www.springframework.org/schema/aop</span><br><span class="line">        http://www.springframework.org/schema/aop/spring-aop.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean id=&quot;userService&quot; class=&quot;com.dwx.service.UserServiceImpl&quot;/&gt;</span><br><span class="line">    &lt;bean id=&quot;endBlog&quot; class=&quot;com.dwx.log.EndLog&quot;/&gt;</span><br><span class="line">    &lt;bean id=&quot;beforLog&quot; class=&quot;com.dwx.log.BeforLog&quot;/&gt;</span><br><span class="line">    &lt;!--注册完的类其实之间没有联系，需要通过xml中的AOP产生联系--&gt;</span><br><span class="line">    &lt;aop:config&gt;</span><br><span class="line">        &lt;!--切入点，表明切入点--&gt;</span><br><span class="line">        &lt;!--这句换其实是固定格式 execution(* * * *) 四个*分别代表包 类 方法 参数 全部作用用* 有限制就添加限制--&gt;</span><br><span class="line">        &lt;aop:pointcut id=&quot;pointcut&quot; expression=&quot;execution(* com.dwx.service.UserServiceImpl.*(..))&quot;/&gt;</span><br><span class="line">        &lt;!--执行环绕增加--&gt;</span><br><span class="line">        &lt;!--这里是注入AOP的地方 advice-ref 是我们要查如的东西 pointcut-ref 是刚才的切口即要插入的地方--&gt;</span><br><span class="line">        &lt;aop:advisor advice-ref=&quot;beforLog&quot; pointcut-ref=&quot;pointcut&quot;/&gt;</span><br><span class="line">        &lt;aop:advisor advice-ref=&quot;endBlog&quot; pointcut-ref=&quot;pointcut&quot;/&gt;</span><br><span class="line">    &lt;/aop:config&gt;</span><br><span class="line"></span><br><span class="line">&lt;/beans&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>上边就是AOP注册到XML中的完全体，有注释解释每一步的目的</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><strong>测试类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//注意这里使用的是类似于动态代理模式的AOP</span></span><br><span class="line">        <span class="comment">//动态代理模式是作用于接口的 因此我们这里产生的对象类型应为接口</span></span><br><span class="line">        UserService userService = context.getBean(<span class="string">&quot;userService&quot;</span>, UserService.class);</span><br><span class="line">        userService.add();</span><br><span class="line">        userService.delete();</span><br><span class="line">        userService.query();</span><br><span class="line">        userService.update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<p><strong>结果:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">【DEBUG】正在执行add方法</span><br><span class="line">增加了一个用户</span><br><span class="line">【DEBUG】add方法执行结束返回值为:<span class="keyword">null</span></span><br><span class="line">【DEBUG】正在执行delete方法</span><br><span class="line">删除了一个用户</span><br><span class="line">【DEBUG】delete方法执行结束返回值为:<span class="keyword">null</span></span><br><span class="line">【DEBUG】正在执行query方法</span><br><span class="line">查询用户为：****</span><br><span class="line">【DEBUG】query方法执行结束返回值为:<span class="keyword">null</span></span><br><span class="line">【DEBUG】正在执行update方法</span><br><span class="line">更新了一个用户的信息</span><br><span class="line">【DEBUG】update方法执行结束返回值为:<span class="keyword">null</span></span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="使用自定义类实现AOP"><a href="#使用自定义类实现AOP" class="headerlink" title="使用自定义类实现AOP"></a>使用自定义类实现AOP</h2><p>上边使用的AOP是使用的Spring的接口，其实还可以通过自定义类注册实现AOP</p>
<p><strong>1.自定义一个类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.diy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DIY</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;==========程序执行开始===========&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;==========程序执行结束===========&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>2.到xml中进行注册</strong></p>
<p>先注册我们的DIY类</p>
<p>在使用aop把DIY类中的方法切入合适的位置</p>
<p>此时有区别的，使用的是切面技术</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--切面，即我们的DIY类--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;diy&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--切入点--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.dwx.service.UserServiceImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--通知--&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时<strong>通知</strong>中包含了很多的标签，想插入哪里就使用对应的标签插入哪里</p>
<p><strong>元素分析：</strong></p>
<ul>
<li>method: 这个是插入的方法，即切面（DIY类）中的方法</li>
<li><strong>切入点</strong>这里的所有代码和上边说的一样</li>
</ul>
<p><strong>执行结果：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">==========程序执行开始===========</span><br><span class="line">增加了一个用户</span><br><span class="line">==========程序执行结束===========</span><br><span class="line">==========程序执行开始===========</span><br><span class="line">删除了一个用户</span><br><span class="line">==========程序执行结束===========</span><br><span class="line">==========程序执行开始===========</span><br><span class="line">查询用户为：****</span><br><span class="line">==========程序执行结束===========</span><br><span class="line">==========程序执行开始===========</span><br><span class="line">更新了一个用户的信息</span><br><span class="line">==========程序执行结束===========</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这边可以看出，我们的DIY类实现的AOP没有使用Spring留下的接口实现的AOP强大</p>
<p>但是核心其实都是动态代理</p>
<h2 id="使用注解实现AOP"><a href="#使用注解实现AOP" class="headerlink" title="使用注解实现AOP"></a>使用注解实现AOP</h2><p>和xml配置能被注解代替一样，Spring实现AOP也能通过注解实现</p>
<p><code>@Aspect</code>修饰一个类，表示这个类就是一个切面</p>
<p><code>@Before(&quot;execution()&quot;)</code>其中Before修饰的就是我们要切入的方法，execution()自然指的是接入点</p>
<p>例如：<code>@Before(&quot;execution(* com.dwx.service.UserServiceImpl.*(..))&quot;)</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.diy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">annount</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Before(&quot;execution(* com.dwx.service.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;*****************&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>这样子切入后也需要到xml中把这个类进行配置，并且开始自动托管事务:<code> &lt;aop:aspectj-autoproxy/&gt;</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.service.UserServiceImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;diy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.diy.DIY&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;annount&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.diy.annount&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这样的代码会很简洁</p>
<p><strong>结果：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">*****************</span><br><span class="line">增加了一个用户</span><br><span class="line">*****************</span><br><span class="line">删除了一个用户</span><br><span class="line">*****************</span><br><span class="line">查询用户为：****</span><br><span class="line">*****************</span><br><span class="line">更新了一个用户的信息</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/servlet%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<h1 id="servlet优化"><a href="#servlet优化" class="headerlink" title="servlet优化"></a>servlet优化</h1><p><strong>servlet web.tml配置 以及 maven servlet jsp依赖</strong></p>
<h3 id="servlet-web-tml配置"><a href="#servlet-web-tml配置" class="headerlink" title="servlet web.tml配置"></a>servlet web.tml配置</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;web-app xmlns=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span><br><span class="line">         xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span><br><span class="line"><span class="string">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span><br><span class="line">         version=<span class="string">&quot;4.0&quot;</span></span><br><span class="line">         metadata-complete=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line"> &lt;/web-app&gt;</span><br></pre></td></tr></table></figure>

<h2 id="maven-servlet-jsp依赖"><a href="#maven-servlet-jsp依赖" class="headerlink" title="maven servlet jsp依赖"></a>maven servlet jsp依赖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line"> &lt;!--servlet依赖--&gt;</span><br><span class="line"> &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;5.0.0&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">   </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.2&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Bean的自动装配</title>
    <url>/2022/02/09/springBean%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D/</url>
    <content><![CDATA[<h1 id="Bean的自动装配"><a href="#Bean的自动装配" class="headerlink" title="Bean的自动装配"></a>Bean的自动装配</h1><p><strong>bean自动装配的特点：</strong></p>
<ul>
<li>自动装配是spring满足bean依赖的一种方式</li>
<li>Spring会在上下文中自动寻找并自动给bean装配属性</li>
</ul>
<p><strong>在Spring中有三种装配的方式</strong></p>
<ul>
<li>在xml中显示的装配</li>
<li>在java中显示的装配</li>
<li>隐式的自动装配</li>
</ul>
<p>其中<strong>在xml中显示的装配</strong>是我们之前就开始学的。</p>
<p>我们搭建一个环境：一个人有两只宠物来以此为案例讲解隐式的自动装配</p>
<p><strong>第一只宠物Dog</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="comment">//对于一个宠物 我们只要求它会叫</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shoot</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;汪汪队立大功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Dog&#123;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>第二只宠物Cat</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> </span>&#123;</span><br><span class="line">    <span class="comment">//对于一个宠物 我们只要求它会叫</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shoot</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;喵喵队闯大祸&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Cat&#123;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>主人</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="comment">//对于一个人 他有自己的基本属性以及一只猫一只狗</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Dog <span class="title">getDog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDog</span><span class="params">(Dog dog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dog = dog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cat <span class="title">getCat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCat</span><span class="params">(Cat cat)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cat = cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> id, Dog dog, Cat cat)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.dog = dog;</span><br><span class="line">        <span class="keyword">this</span>.cat = cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, dog=&quot;</span> + dog +</span><br><span class="line">                <span class="string">&quot;, cat=&quot;</span> + cat +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="当时用手动装配"><a href="#当时用手动装配" class="headerlink" title="当时用手动装配"></a>当时用手动装配</h2><p>当时用手动装配 我们的xml就会是这样的</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--首先装配我们的引用类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.pojo.Cat&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.pojo.Dog&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--装配我们的操作对象--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.pojo.Person&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;cat&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dog&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="当使用自动装配"><a href="#当使用自动装配" class="headerlink" title="当使用自动装配"></a>当使用自动装配</h2><p>所谓的自动装配就是不用再去自己写<code>property</code>等的参数了，只需要在<code>&lt;bean/&gt;</code>中加上<code>autowire=&quot;&quot;</code>这个参数即可</p>
<p>自动装配也不止一种，而且各有各的局限性</p>
<h3 id="当使用ByName自动装配"><a href="#当使用ByName自动装配" class="headerlink" title="当使用ByName自动装配"></a>当使用<code>ByName</code>自动装配</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.pojo.Person&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>赋值还是需要用<code>&lt;property&gt;</code>，但是对于引用类型的匹配已经不用我们自己去匹配了</p>
<p>但是<code>byName</code>的局限性就是，我们在Person中的参数名字必须和我们引用类型注册的id一致，否则将找不到。</p>
<h3 id="当使用ByType自动装配"><a href="#当使用ByType自动装配" class="headerlink" title="当使用ByType自动装配"></a>当使用<code>ByType</code>自动装配</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.pojo.Person&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>局限性在于，如果两个参数的类型是相同的，就不能用这种装配方式</p>
<h3 id="当使用注解装配"><a href="#当使用注解装配" class="headerlink" title="当使用注解装配"></a>当使用注解装配</h3><p>使用注解装配有两种注解<code>@Autowired</code>和<code>@Resource</code></p>
<p><strong>两者的区别：</strong></p>
<ul>
<li><code>@Autowired</code>是先执行byType查找，如果出现两种以上的类型采用byName</li>
<li><code>@Resource</code>是先执行byName查找，当找不到时才是用byType查找</li>
</ul>
<p><strong>两者使用时的共同特点：</strong></p>
<ul>
<li>要现在xml中进行装配</li>
<li>要使用时在xml体中使用<code>&lt;context:annotation-config/&gt;</code></li>
</ul>
<p><strong>修改后的xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="xml的使用"><a href="#xml的使用" class="headerlink" title="xml的使用"></a><strong>xml的使用</strong></h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context/spring-context.xsd&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--首先装配我们的引用类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.pojo.Cat&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.pojo.Dog&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.pojo.Person&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注解添加的位置</strong></p>
<p>两种注解添加的位置都一样，要不是在需要进行注解的元素上，要不在set方法上</p>
<p>如果在元素上加上注解，这个元素就不用写其对应的set方法了</p>
<p><strong>使用注解的例子:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="comment">//对于一个人 他有自己的基本属性以及一只猫一只狗</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Dog <span class="title">getDog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDog</span><span class="params">(Dog dog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dog = dog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cat <span class="title">getCat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCat</span><span class="params">(Cat cat)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cat = cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> id, Dog dog, Cat cat)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.dog = dog;</span><br><span class="line">        <span class="keyword">this</span>.cat = cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, dog=&quot;</span> + dog +</span><br><span class="line">                <span class="string">&quot;, cat=&quot;</span> + cat +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="comment">//对于一个人 他有自己的基本属性以及一只猫一只狗</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Dog <span class="title">getDog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDog</span><span class="params">(Dog dog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dog = dog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cat <span class="title">getCat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCat</span><span class="params">(Cat cat)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cat = cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> id, Dog dog, Cat cat)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.dog = dog;</span><br><span class="line">        <span class="keyword">this</span>.cat = cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, dog=&quot;</span> + dog +</span><br><span class="line">                <span class="string">&quot;, cat=&quot;</span> + cat +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>HelloSpring</title>
    <url>/2022/02/07/springHelloSpring/</url>
    <content><![CDATA[<h1 id="HelloSpring"><a href="#HelloSpring" class="headerlink" title="HelloSpring"></a>HelloSpring</h1><p>下边通过一个简单的HelloSpring程序来感受Spring框架的优点吧！</p>
<h2 id="Spring整合POJO层的数据"><a href="#Spring整合POJO层的数据" class="headerlink" title="Spring整合POJO层的数据"></a>Spring整合POJO层的数据</h2><p><strong>步骤：</strong></p>
<ul>
<li><p>搭建完整的pojo层</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String str;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStr</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.str = str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;str=&#x27;&quot;</span> + str + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>在resource中创建一个<code>beans.xml</code>文件</p>
</li>
<li><p>配置文件中的格式可以在官方文档中找到</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>将pojo包下的类整合到配置文件中</p>
</li>
<li><p>使用<code>&lt;properties/&gt;</code>来给实体类中的参数赋值</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span>       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span>    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.Hello&quot;</span>&gt;</span>        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring&quot;</span>/&gt;</span>    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>编写测试类</p>
</li>
</ul>
<h3 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h3><p>此时的测试类在调用pojo成时，就不用再去实例化对象，只需要调用Spring容器即可</p>
<p><code>ApplicationContext context = new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);</code></p>
<p>使用这个context中的<code>getBean(&quot;bean的id&quot;)</code>这个方法就能调用到一个对象</p>
<p><strong>理论分析</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.Hello&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>这里的<code>&lt;bean&gt;&lt;/bean&gt;</code>就可以视为是对对象实例化的过程</li>
<li><code>id</code>代表这个对象的名字</li>
<li><code>class</code>代表这个对象的类</li>
<li><code>&lt;properties/&gt;</code>这里表示赋值的过程<code>name</code>表示参数的名字，<code>value</code>表示付给参数的值</li>
</ul>
<h2 id="Spring整合Dao层"><a href="#Spring整合Dao层" class="headerlink" title="Spring整合Dao层"></a>Spring整合Dao层</h2><ul>
<li><p>编写Dao抽象类以及他的实体类</p>
</li>
<li><p>对实体类进行整合（也是在beans.xml中进行整合的）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;MyBtais&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dao.MybatisUserDaoImp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;User&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dao.UserDaoImp&quot;</span>/&gt;</span> </span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="Spring整合Service层"><a href="#Spring整合Service层" class="headerlink" title="Spring整合Service层"></a>Spring整合Service层</h2><ul>
<li><p>编写Service层的抽象类以及他的所有的实现类</p>
</li>
<li><p>对实体类进行整合(bean.xml中)</p>
</li>
<li><p>由于我们那个IOC思想是service可以调用多个Dao，因此这里使用注册好的Dao</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--注册好和Dao--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;MyBtais&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dao.MybatisUserDaoImp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;User&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dao.UserDaoImp&quot;</span>/&gt;</span>   </span><br><span class="line"><span class="comment">&lt;!--因为我们为了满足IOC原则 对userDao进行赋值--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--此处使用ref 而不是 value value表示一个值--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--而此时我们的ref表示已经注册过得bean的id--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;UserService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;service.UserServiceImp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;MyBtais&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>编写测试类</p>
</li>
</ul>
<p>同理只要是通过Spring整合的，只用Spring的容器就能解决变量实例化的过程</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">       UserService userService = (UserService) context.getBean(<span class="string">&quot;UserService&quot;</span>);</span><br><span class="line">       userService.getUser();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>需要注意的是，我们这里有一个很明显的强制转型，如果没有转型，系统默认得到的userService是object类型，这样我们就不能调用想要的方法了</p>
<p><strong>注意手动去进行强转</strong></p>
<p>这样，我们的代码就再也不用改变了，只需要用户改变配置文件即可</p>
]]></content>
  </entry>
  <entry>
    <title>JavaConfig实现配置</title>
    <url>/2022/02/09/springJavaConfig%E5%AE%9E%E7%8E%B0%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="JavaConfig实现配置"><a href="#JavaConfig实现配置" class="headerlink" title="JavaConfig实现配置"></a>JavaConfig实现配置</h1><p>如果我们使用JavaConfig实现配置，那么我们就不需要使用xml文件对Spring进行配置了；</p>
<p>JavaConfig进行配置时和注解配合使用的</p>
<h2 id="JavaConfig的使用过程"><a href="#JavaConfig的使用过程" class="headerlink" title="JavaConfig的使用过程"></a>JavaConfig的使用过程</h2><ul>
<li>创建一个javaConfig类</li>
<li>用<code>@Configuation</code>注解表示该类是我们的JavaConfig类</li>
</ul>
<p><strong>武装到牙齿的config类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.dwx.pojo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DwxConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>注解分析：</strong></p>
<ul>
<li><code>@Configuration</code>:表示我们这个类类似于xml文件</li>
<li><code>@ComponentScan(&quot;包名&quot;)</code>:表示原来xml中的<code>&lt;context:ComponentScan base-package=&quot;包名&quot;&gt;</code></li>
<li><code>@Bean</code>:表示<code>&lt;bean id=&quot;&quot; class=&quot;&quot;/&gt;</code>其中这个方法的方法名是bean的id,返回值类型表示bean的class</li>
</ul>
<p><strong>我们使用注解包装的pojo</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;dwx&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>我们的测试类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.config.DwxConfig;</span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MtTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       ApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(DwxConfig.class);</span><br><span class="line">        User getUser = (User) context.getBean(<span class="string">&quot;getUser&quot;</span>);</span><br><span class="line">        System.out.println(getUser);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>因为我们彻底的摆脱了xml配置，因此在获取contest时，我么使用的是：</p>
<p><code>new AnnotationConfigApplicationContext(XXConfig.class)</code></p>
<p>其中他的参数是一个class类即我们的config的class属性</p>
<p>bean的id就是我们的方法名</p>
]]></content>
  </entry>
  <entry>
    <title>OC创建对象的过程</title>
    <url>/2022/02/08/springIOC%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="IOC创建对象的过程"><a href="#IOC创建对象的过程" class="headerlink" title="IOC创建对象的过程"></a>IOC创建对象的过程</h1><p>我们可以看到当我们使用了spring时，我们就不用再使用new来创建对象了。那是因为有spring自动帮我们创建对象，IOC是通过构造器创建对象的，因此由于构造器有两种之分 因此创建对象的方式也有两种。</p>
<h2 id="无参构造器创建对象"><a href="#无参构造器创建对象" class="headerlink" title="无参构造器创建对象"></a>无参构造器创建对象</h2><p><strong>此时的pojo层</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这里使用的是无参构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>此时的xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--整合pojo层--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--当使用的是无产构造器时--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>此时的测试类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//测试spring容器</span></span><br><span class="line">        <span class="comment">//转换成更高级的类型</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">        User user = (User) context.getBean(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>测试结果</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这里使用的是无参构造器</span><br><span class="line">User&#123;name=&#x27;dwx&#x27;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="使用有参构造创建对象"><a href="#使用有参构造创建对象" class="headerlink" title="使用有参构造创建对象"></a>使用有参构造创建对象</h2><p>有参构造的核心就是在创建时需要传入参数，而在spring中，传参的过程有有三种，因此有参构造创建对象的方法又可以分为三种</p>
<h3 id="通过下标创建对象"><a href="#通过下标创建对象" class="headerlink" title="通过下标创建对象"></a>通过下标创建对象</h3><p><code>&lt;constructor-arg index=&quot;&quot; value=&quot;&quot;/&gt;</code></p>
<p><strong>注意：</strong>下标是从0开始的</p>
<p><strong>此时的xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--当使用有产构造时--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.User&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="通过类型来创建对象"><a href="#通过类型来创建对象" class="headerlink" title="通过类型来创建对象"></a>通过类型来创建对象</h3><p><code>&lt;constructor-arg type=&quot;&quot; value=&quot;&quot;/&gt;</code></p>
<p><strong>注意：</strong>type如果是基本类型用基本类型，如果是引用类型用引用类型的全路径</p>
<p><strong>此时的xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--类型传值法--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.User&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>这个方法具有局限性，如果一个pojo类中有两个参数的类型相同，这种方法就没有作用了。</p>
<h3 id="通过名字创建对象"><a href="#通过名字创建对象" class="headerlink" title="通过名字创建对象"></a>通过名字创建对象</h3><p><code>&lt;construcuctor-arg name=&quot;&quot; value=&quot;&quot;/&gt;</code></p>
<p><strong>此时的xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--通过名字传值--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.User&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>很明显，这个方法是最简单的最好用的</p>
<p>当然，使用到复杂类型时也可以先注册在使用ref来使用</p>
<h2 id="有意思"><a href="#有意思" class="headerlink" title="有意思"></a>有意思</h2><p>有意思的是，如果一个beans.xml里有多个以及整合好的pojo类</p>
<p>在实例化contest时，其实他们都被实例化了</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">student的无参构造器</span><br><span class="line">我叫dwx</span><br><span class="line">User&#123;name=<span class="string">&#x27;dwx&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Spring整合MyBatis</title>
    <url>/2022/02/10/springSpring%E6%95%B4%E5%90%88Mybatis/</url>
    <content><![CDATA[<h1 id="Spring整合MyBatis"><a href="#Spring整合MyBatis" class="headerlink" title="Spring整合MyBatis"></a>Spring整合MyBatis</h1><p>终于，学习Spring进入了尾声，需要Spring整合Mybatis</p>
<p><strong>步骤：</strong></p>
<ul>
<li>导入相关的jar包</li>
<li>编写程序</li>
<li>测试</li>
</ul>
<h2 id="Spring整合MyBatis需要的jar包"><a href="#Spring整合MyBatis需要的jar包" class="headerlink" title="Spring整合MyBatis需要的jar包"></a>Spring整合MyBatis需要的jar包</h2><p>对于Spring，一个<code>Spring-webmvc</code>和<code>aspectjwearer</code>可以解决所有的东西</p>
<p>对于Mybatis，需要mybatis包</p>
<p>由于mybatis是基于永久层的，因此需要mysql数据库相关的包</p>
<p>为了方便操作，还要准备Junit和Lombok的包</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--Junit的包--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--mysql的包--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--mybatis的包--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--Spring的一系类包--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--spring-jdbc--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--aspectjweaver--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.8.RC3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--mybatis-spring--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="编写一个mybatis程序"><a href="#编写一个mybatis程序" class="headerlink" title="编写一个mybatis程序"></a>编写一个mybatis程序</h2><p> <a href="https://dwx-tx.github.io/2022/01/04/%E7%AC%AC%E4%B8%80%E4%B8%AAmybatis%E7%A8%8B%E5%BA%8F/">第一个mybatis程序 | dwx-tx的小天地</a> </p>
<p>上方我博客里的其他博文回顾mybatis程序的编写，在此不在重复</p>
<h2 id="在mybatis程序中加入Spring"><a href="#在mybatis程序中加入Spring" class="headerlink" title="在mybatis程序中加入Spring"></a>在mybatis程序中加入Spring</h2><p><strong>分析：</strong>mybatis是对持久层的一个框架，它是Dao层和数据库之间的桥梁，还有一些自己的配置（别名，日志等）</p>
<p><strong>因此我们可以的到，我们spring要整合的东西：</strong></p>
<ul>
<li>数据库的联结</li>
<li>SqlsessionFactory</li>
<li>Sqlsession</li>
<li>mybatis配置</li>
</ul>
<h3 id="第一步，创建Spring的xml"><a href="#第一步，创建Spring的xml" class="headerlink" title="第一步，创建Spring的xml"></a>第一步，创建Spring的xml</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</span><br><span class="line">        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;</span><br><span class="line">    &lt;!--从此往下都是固定格式--&gt;</span><br><span class="line">    &lt;!--整合数据库 数据源--&gt;</span><br><span class="line">    &lt;bean id=&quot;dataSource&quot; class=&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;driverClassName&quot; value=&quot;com.mysql.cj.jdbc.Driver&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;amp;characterEnconding=utf8&amp;amp;useSSL=truejdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;amp;characterEnconding=utf8&amp;amp;useSSL=true&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;username&quot; value=&quot;dwx&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;password&quot; value=&quot;123456&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;!--整合SqlsessionFactory--&gt;</span><br><span class="line">    &lt;bean id=&quot;sqlsessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;</span><br><span class="line">        &lt;!--绑定mybatis配置文件--&gt;</span><br><span class="line">        &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:com/dwx/mapper/BlogMapper.xml&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;!--代替SQLsession--&gt;</span><br><span class="line">    &lt;bean id=&quot;sqlsession&quot; class=&quot;org.mybatis.spring.SqlSessionTemplate&quot;&gt;</span><br><span class="line">        &lt;constructor-arg index=&quot;0&quot; ref=&quot;sqlsessionFactory&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>

<h3 id="第二步、创建实体类"><a href="#第二步、创建实体类" class="headerlink" title="第二步、创建实体类"></a>第二步、创建实体类</h3><p>因为我们的mybatis是用xml代替实体类实现抽象类的，但是我们的Spring必须使用实体类，因此创建实体类；</p>
<p>但是Mybatis使用时需要的三件套</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String config = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">       InputStream input = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">          input = Resources.getResourceAsStream(config);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       SqlSessionFactory build = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(input);</span><br><span class="line">       SqlSession sqlSession = build.openSession();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       BlogMapper mapper = sqlSession.getMapper(BlogMapper.class);</span><br></pre></td></tr></table></figure>

<p>以及被我们整合到Spring中去了，因此这个实体类会有点不一样</p>
<p>我们以后会使用SQLsessionTemple来实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogMapperImpl</span> <span class="keyword">implements</span> <span class="title">BlogMapper</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//固定格式</span></span><br><span class="line">    <span class="keyword">private</span> SqlSessionTemplate sqlSessionTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionTemplate <span class="title">getSqlSessionTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSqlSessionTemplate</span><span class="params">(SqlSessionTemplate sqlSessionTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sqlSessionTemplate = sqlSessionTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">getBlogs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        BlogMapper mapper = sqlSessionTemplate.getMapper(BlogMapper.class);</span><br><span class="line">        <span class="keyword">return</span>  mapper.getBlogs();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="第三步，把这个实体类注册到bean里"><a href="#第三步，把这个实体类注册到bean里" class="headerlink" title="第三步，把这个实体类注册到bean里"></a>第三步，把这个实体类注册到bean里</h3><p>把这个实体类注册到bean里，以后我们就能直接使用bean来调用这些方法了</p>
<p><strong>完全体的bean.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--从此往下都是固定格式--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--整合数据库 数据源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useUnicode=true<span class="symbol">&amp;amp;</span>characterEnconding=utf8<span class="symbol">&amp;amp;</span>useSSL=truejdbc:mysql://localhost:3306/mybatis?useUnicode=true<span class="symbol">&amp;amp;</span>characterEnconding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--整合SqlsessionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlsessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--绑定mybatis配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:com/dwx/mapper/BlogMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--代替SQLsession--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlsession&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlsessionFactory&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;blogMapper&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.mapper.BlogMapperImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--我们写这个实体类时留了一个属性 给这个参数赋值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlsession&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意，我们的mapper.xml在Spring中注册了，不需要再到config.xml中注册了</strong></p>
<h3 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">    public void Spring_MybatisTest()&#123;</span><br><span class="line">       ApplicationContext context = new ClassPathXmlApplicationContext(&quot;spring-mapper.xml&quot;);</span><br><span class="line">        BlogMapper blogMapper = context.getBean(&quot;blogMapper&quot;, BlogMapper.class);</span><br><span class="line">        List&lt;Blog&gt; blogs = blogMapper.getBlogs();</span><br><span class="line">        for (Blog blog : blogs) &#123;</span><br><span class="line">            System.out.println(blog);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>这样mybatis-config.xml中就只剩下一部分的配置如：别名，日志</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.dwx.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样Mybatis就整合到Spring中去了</p>
]]></content>
  </entry>
  <entry>
    <title>Spring声明事务</title>
    <url>/2022/02/10/springSpring%E6%95%B4%E7%90%86%E4%BA%8B%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="Spring声明事务"><a href="#Spring声明事务" class="headerlink" title="Spring声明事务"></a>Spring声明事务</h1><p>想想一下这样一个场景，我们同时执行多个jdbc，但是其中有一个错误了，java会把后边的程序停掉，但是前边成功的就成功了，这样并不合理。因此我们需要事务来管理这些程序，使得他们中间有一个出现错误就程序停止并且数据库回滚</p>
<h2 id="Spring中声明事务"><a href="#Spring中声明事务" class="headerlink" title="Spring中声明事务"></a>Spring中声明事务</h2><p>这种方法就像是在每一次执行方法是添加一个方法来观察他，和AOP类似，因此我们可以使用类似AOP的方法管理它。并且Spring有专门进行事务的标签</p>
<h3 id="在xml中声明开启事务"><a href="#在xml中声明开启事务" class="headerlink" title="在xml中声明开启事务"></a>在xml中声明开启事务</h3><p><strong>固定写法：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="配置事务"><a href="#配置事务" class="headerlink" title="配置事务"></a>配置事务</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;transactionInterceptor&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--给那些方法配置事务--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;add&quot;</span>/&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--可以欧多个 也可以是直接使用*代替所有的方法--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="将配置好的事务切入"><a href="#将配置好的事务切入" class="headerlink" title="将配置好的事务切入"></a>将配置好的事务切入</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--切入事务--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.dwx.mapper.* (..))&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;transactionInterceptor&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><code>advice-ref</code>:只配置好的要插入的事务</li>
<li><code>pointcut-ref</code>:指配置好的插入点</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Spring配置</title>
    <url>/2022/02/08/springSpring%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="Spring配置"><a href="#Spring配置" class="headerlink" title="Spring配置"></a>Spring配置</h1><p>Spring的配置并不多，学起来也不麻烦</p>
<h2 id="别名（alias）"><a href="#别名（alias）" class="headerlink" title="别名（alias）"></a>别名（alias）</h2><p><code>&lt;alias name=&quot;&quot; alias=&quot;&quot;/&gt;</code></p>
<p><strong>元素分析：</strong></p>
<ul>
<li>name指需要起别名的bean的名字</li>
<li>alias指这个bean的别名</li>
</ul>
<p><strong>被起过别名的bean通过原名和别名都可以调用</strong></p>
<h2 id="bean的配置"><a href="#bean的配置" class="headerlink" title="bean的配置"></a>bean的配置</h2><p>spring的配置很少，但是作为spring的核心，bean的配置却很多。这里仅仅介绍bean的经常用到的配置</p>
<p><strong>bean的配置</strong></p>
<table>
<thead>
<tr>
<th>配置</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>bean的唯一标识符</td>
</tr>
<tr>
<td>class</td>
<td>bean对应的对象的全限名称（包名+类名）</td>
</tr>
<tr>
<td>name</td>
<td>bean的别名，可以有多个，只要使用<code>,</code>或<code>空格</code>或者<code>;</code>隔开即可</td>
</tr>
</tbody></table>
<h2 id="import"><a href="#import" class="headerlink" title="import"></a>import</h2><p>import常见于团队开发，可以把多个配置文件整合到一个xml中</p>
<p><code>&lt;import resource=&quot;xx.xml&quot;/&gt;</code></p>
]]></content>
  </entry>
  <entry>
    <title>代理模式</title>
    <url>/2022/02/09/spring%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h1><p>代理模式是之前学到的，在这里进行一个系统性的复习，因为前边学的代理模式理解并不深刻，但是代理模式又是SpringAOP的底层逻辑，因此需要重新学习。</p>
<p><strong>代理模式的分类：</strong></p>
<ul>
<li>静态代理模式</li>
<li>动态代理模式</li>
</ul>
<h2 id="静态代理模式"><a href="#静态代理模式" class="headerlink" title="静态代理模式"></a>静态代理模式</h2><p>代理模式十分抽象，因此我们引用<strong>房东–房屋中介–租户</strong>模型来解释这个关系</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/02/fdbf7cafe05d93c5.jpg" alt="房东--房屋中介--租户模型"> </p>
<p><strong>代理中的角色分析：</strong></p>
<ul>
<li>抽象角色：一般会使用接口或者抽象类来解决</li>
<li>真实角色：被代理的角色</li>
<li>代理角色：代理真实角色，代理真实角色后一般会有一些附属操作</li>
<li>客户：访问代理对象的人</li>
</ul>
<p><strong>代理模式的好处：</strong></p>
<ul>
<li>可以使真实角色的操作更加纯粹，不用去关心一些公共业务</li>
<li>公共事务交给代理角色去处理，实现了业务的分工</li>
<li>公共月舞发生拓展是，方便集中管理</li>
</ul>
<p>下边我们就用这个模型来模拟一下静态代理模式，看是否与上述特点相同：</p>
<p><strong>模型的搭建：</strong></p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/02/686c6d02f68f9d96.jpg" alt="模型的结构"> </p>
<p><strong>代码:</strong></p>
<p><strong>抽象接口rent</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.test01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">rent</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这是房东和中介都要进行的抽象角色（租房）</span></span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>房主Host</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.test01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Host</span> <span class="keyword">implements</span> <span class="title">rent</span></span>&#123;</span><br><span class="line">    <span class="comment">//对于房东 房东可以有自己的属性 比如这里我们给他属性name</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="comment">//房东的抽象角色 出租房屋</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(name+<span class="string">&quot;房东要出租房&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Host</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Host</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Host&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>中介Mid</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.test01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mid</span> <span class="keyword">implements</span> <span class="title">rent</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这里是中介 是中间代理环节</span></span><br><span class="line">    <span class="comment">//中介代理房东 因此中介有一个属性是房东</span></span><br><span class="line">    <span class="keyword">private</span> Host host;</span><br><span class="line">    <span class="comment">//中介同样要出租房 ，也要继承接口</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//因为中介是代理房东租房，因此实质上出租房子的还是房东</span></span><br><span class="line">        <span class="comment">//因此这里调用房东出租的方法</span></span><br><span class="line">        host.rent();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//中介除了执行出租方外，还可以带领住户看房以及签合同，收中介费，因此这些都是中介特有的</span></span><br><span class="line">    <span class="comment">//但是是属于每次租房都要干的，是公共的</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sign</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;中介在签合同&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">see</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;中介在看房&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fare</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;中介收取中介费&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Mid</span><span class="params">(Host host)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.host = host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Mid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Host <span class="title">getHost</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHost</span><span class="params">(Host host)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.host = host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Mid&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;host=&quot;</span> + host +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>中介中心Center</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.test01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Center</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这里是中介中心，用户访问的地方</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//首先创建一个租户</span></span><br><span class="line">        Host dwx = <span class="keyword">new</span> Host(<span class="string">&quot;dwx&quot;</span>);</span><br><span class="line">        <span class="comment">//再创建一个中介</span></span><br><span class="line">        Mid mid = <span class="keyword">new</span> Mid();</span><br><span class="line">        <span class="comment">//给中介分配租户</span></span><br><span class="line">        mid.setHost(dwx);</span><br><span class="line">        <span class="comment">//中介执行租房操作</span></span><br><span class="line">        mid.see();</span><br><span class="line">        mid.sign();</span><br><span class="line">        mid.rent();</span><br><span class="line">        mid.fare();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>执行结果：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">中介在看房</span><br><span class="line">中介在签合同</span><br><span class="line">dwx房东要出租房</span><br><span class="line">中介收取中介费</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>对这个模型进行分析</strong></p>
<ul>
<li>抽象角色：一目了然，房主和中介都要租房，因此出租房子是抽象角色(用的是抽象接口)</li>
<li>真实角色：房东，是真实被代理的角色，租房是被代理的权利</li>
<li>代理角色：中介，中介除了做<strong>抽象角色</strong>租房子外，还有签合同等附属操作</li>
<li>客户：访问代理对象</li>
</ul>
<p><strong>该模型好处的分析</strong></p>
<ul>
<li>业务分离，中介办理里租房的大部分事情，房主只需要出租房屋</li>
<li>房主的操作更加纯粹</li>
<li>如果中介还要进行其他的服务，容易管理</li>
</ul>
<h2 id="动态代理模式"><a href="#动态代理模式" class="headerlink" title="动态代理模式"></a>动态代理模式</h2><p>动态代理模式继承了静态代理模式的所有优点以及他的代理角色。</p>
<p>但是不同点是：动态代理的代理对象是动态生成的，并且代码十分简短</p>
<p><del>一般简短的代码在理解起来都很难</del></p>
<p>对于动态代理，需要了解两个类<strong>Proxy类</strong>和<strong>InvocationHander类</strong></p>
<p>这两个类是动态代理的核心，动态代理的绝大多是代码都是固定死的，只要输入参数通过<strong>反射</strong>机制获取参数，动态创建对象。</p>
<h3 id="InvocationHander类"><a href="#InvocationHander类" class="headerlink" title="InvocationHander类"></a>InvocationHander类</h3><p>这个类是实例化调用的处理程序实现的接口</p>
<p>这个类只用一个<code>invoke(proxy,args)</code>方法，这个方法不用我们手动执行，在这个类被加载的时候就默认执行了。</p>
<h3 id="Proxy类"><a href="#Proxy类" class="headerlink" title="Proxy类"></a>Proxy类</h3><p>Proxy类提供了创建的动态代理类和实例的静态方法</p>
<hr>
<p>还是通过这个租房模型，通过动态代理来实现</p>
<h3 id="动态代理类的组成"><a href="#动态代理类的组成" class="headerlink" title="动态代理类的组成"></a>动态代理类的组成</h3><ul>
<li>抽象代理对象：一个抽象接口</li>
<li>创建一个动态代理类继承实现<code>InvocationHandler</code>对象</li>
<li>在这个类中设置我们的rent</li>
<li>在这个类中获得Proxy</li>
</ul>
<p><strong>完整的动态代理类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.test02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InvocationHanderProxy</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line">    <span class="comment">//对于代理角色 需要抽象对象</span></span><br><span class="line">    <span class="keyword">private</span> Rent rent;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//设置抽象接口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRent</span><span class="params">(Rent rent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.rent = rent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对于动态代理需要获得Proxy</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getProxy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//这里也是固定的 底层原理是反射</span></span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(<span class="keyword">this</span>.getClass().getClassLoader(), rent.getClass().getInterfaces(),<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">		<span class="comment">//这里只需要两个参数：args（不变）和rent（我们的抽象类）</span></span><br><span class="line">        <span class="keyword">return</span> method.invoke(rent, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>此时的测试类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.test02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//现在动态代理类以及全部创建结束</span></span><br><span class="line">        <span class="comment">//对于动态代理 需要代理对象</span></span><br><span class="line">        Host dwx = <span class="keyword">new</span> Host(<span class="string">&quot;dwx&quot;</span>);</span><br><span class="line">        <span class="comment">//但是动态代理暂时没有代理对象 需要创建</span></span><br><span class="line">        InvocationHanderProxy ip = <span class="keyword">new</span> InvocationHanderProxy();</span><br><span class="line">        ip.setRent(dwx);</span><br><span class="line">        Rent proxy = (Rent) ip.getProxy();</span><br><span class="line">        <span class="comment">//此时的动态代理对象就生成了</span></span><br><span class="line">        proxy.rent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这几步也是固定的不用更改；</p>
]]></content>
  </entry>
  <entry>
    <title>依赖注入环境（DI）</title>
    <url>/2022/02/08/spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="依赖注入环境（DI）"><a href="#依赖注入环境（DI）" class="headerlink" title="依赖注入环境（DI）"></a>依赖注入环境（DI）</h1><p>依赖注入是Spring除IOC以外的另一个重点</p>
<p>依赖注入有三种方式：</p>
<ul>
<li>构造器注入</li>
<li>set注入</li>
<li>拓展注入</li>
</ul>
<h2 id="构造器注入"><a href="#构造器注入" class="headerlink" title="构造器注入"></a>构造器注入</h2><p> <a href="https://dwx-tx.github.io/2022/02/08/springIOC%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%BF%87%E7%A8%8B/">IOC创建对象的过程 | dwx-tx的小天地</a> </p>
<p>这是之前的笔记 就是讲的构造器注入</p>
<h2 id="set注入"><a href="#set注入" class="headerlink" title="set注入"></a>set注入</h2><p>set注入是依赖注入的重点</p>
<p>依赖和注入是两个过程，需要分开理解</p>
<ul>
<li>依赖：bean对象的创建依赖于容器</li>
<li>注入：bean对象中的所有属性由容器来注入</li>
</ul>
<p>为了方便理解注入的过程以及了解所有的类型的注入方法，我们引出下边这个复杂的例子：</p>
<p><strong>{环境搭建}：</strong></p>
<ul>
<li><p>搭建一个复杂的实体类，其中的参数包括：</p>
<ul>
<li>基本数据类型</li>
<li>引用数据类型</li>
<li>List[]</li>
<li>数组</li>
<li>map</li>
<li>set&lt;&gt;</li>
<li>Properties</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建一个复杂的实体类</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//引用类型</span></span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">    <span class="comment">//数组</span></span><br><span class="line">    <span class="keyword">private</span> String[] books;</span><br><span class="line">    <span class="comment">//list</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobbys;</span><br><span class="line">    <span class="comment">//map</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; card;</span><br><span class="line">    <span class="comment">//set</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; games;</span><br><span class="line">    <span class="comment">//可以赋值为null的参数</span></span><br><span class="line">    <span class="keyword">private</span> String wife;</span><br><span class="line">    <span class="comment">//properties</span></span><br><span class="line">    <span class="keyword">private</span> Properties info;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(Address address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String[] getBooks() &#123;</span><br><span class="line">        <span class="keyword">return</span> books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBooks</span><span class="params">(String[] books)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.books = books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getHobbys</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hobbys;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHobbys</span><span class="params">(List&lt;String&gt; hobbys)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hobbys = hobbys;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getCard</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> card;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCard</span><span class="params">(Map&lt;String, String&gt; card)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.card = card;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getGames</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> games;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGames</span><span class="params">(Set&lt;String&gt; games)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.games = games;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getWife</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> wife;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWife</span><span class="params">(String wife)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.wife = wife;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Properties <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setInfo</span><span class="params">(Properties info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.info = info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, address=&quot;</span> + address +</span><br><span class="line">                <span class="string">&quot;, books=&quot;</span> + Arrays.toString(books) +</span><br><span class="line">                <span class="string">&quot;, hobbys=&quot;</span> + hobbys +</span><br><span class="line">                <span class="string">&quot;, card=&quot;</span> + card +</span><br><span class="line">                <span class="string">&quot;, games=&quot;</span> + games +</span><br><span class="line">                <span class="string">&quot;, wife=&#x27;&quot;</span> + wife + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, info=&quot;</span> + info +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Address引用类型:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Address&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;address=&#x27;&quot;</span> + address + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>到xml中去进行整合配置注入</p>
</li>
</ul>
<h3 id="xml中注入这些复杂类型"><a href="#xml中注入这些复杂类型" class="headerlink" title="xml中注入这些复杂类型"></a>xml中注入这些复杂类型</h3><h4 id="基本数据类型和String的注入"><a href="#基本数据类型和String的注入" class="headerlink" title="基本数据类型和String的注入"></a>基本数据类型和String的注入</h4><p>直接使用<code>&lt;properties name=&quot; &quot; value=&quot; &quot;/&gt;</code>来给参数进行注入(类似于赋值)</p>
<h4 id="引用类型的注入"><a href="#引用类型的注入" class="headerlink" title="引用类型的注入"></a>引用类型的注入</h4><p>对于引用类型，先在bean中2进行注册，在通过ref来注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;bean id=&quot;address&quot; class=&quot;com.dwx.pojo.Address&quot;&gt;</span><br><span class="line">      &lt;!--为我们这个引用类型赋值--&gt;</span><br><span class="line">      &lt;property name=&quot;address&quot; value=&quot;河南省新乡市&quot;/&gt;</span><br><span class="line">  &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--对我们复杂的实体类进行注入--&gt;</span><br><span class="line">  &lt;bean id=&quot;student&quot; class=&quot;com.dwx.pojo.Student&quot;&gt;</span><br><span class="line">      &lt;property name=&quot;address&quot; ref=&quot;address&quot;/&gt;</span><br><span class="line">  &lt;/bean&gt;</span><br></pre></td></tr></table></figure>

<h4 id="数组的注入"><a href="#数组的注入" class="headerlink" title="数组的注入"></a>数组的注入</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--数组的注入--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">value</span>&gt;</span>《百年孤独》<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">value</span>&gt;</span>《白鹿原》<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">value</span>&gt;</span>《生死疲劳》<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">value</span>&gt;</span>《挪威的森林》<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="List的注入"><a href="#List的注入" class="headerlink" title="List的注入"></a>List的注入</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--List的注入--&gt;</span><br><span class="line">       &lt;property name=<span class="string">&quot;hobbys&quot;</span>&gt;</span><br><span class="line">           &lt;list&gt;</span><br><span class="line">               &lt;value&gt;跑步&lt;/value&gt;</span><br><span class="line">               &lt;value&gt;听音乐&lt;/value&gt;</span><br><span class="line">               &lt;value&gt;阅读&lt;/value&gt;</span><br><span class="line">           &lt;/list&gt;</span><br><span class="line">       &lt;/property&gt;</span><br></pre></td></tr></table></figure>

<h4 id="map的注入"><a href="#map的注入" class="headerlink" title="map的注入"></a>map的注入</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--map的注入--&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;card&quot;</span>&gt;</span><br><span class="line">            &lt;map&gt;</span><br><span class="line">                &lt;entry key=<span class="string">&quot;身份证&quot;</span> value=<span class="string">&quot;123123123&quot;</span>/&gt;</span><br><span class="line">                &lt;entry key=<span class="string">&quot;银行卡&quot;</span> value=<span class="string">&quot;345345123&quot;</span>/&gt;</span><br><span class="line">                &lt;entry key=<span class="string">&quot;一卡通&quot;</span> value=<span class="string">&quot;dasd445645&quot;</span>/&gt;</span><br><span class="line">            &lt;/map&gt;</span><br><span class="line">        &lt;/property&gt;</span><br></pre></td></tr></table></figure>

<p>key:value相当于键值对</p>
<h4 id="set的注入"><a href="#set的注入" class="headerlink" title="set的注入"></a>set的注入</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--set的注入--&gt;</span><br><span class="line">       &lt;property name=<span class="string">&quot;games&quot;</span>&gt;</span><br><span class="line">           &lt;set&gt;</span><br><span class="line">               &lt;value&gt;英雄联盟&lt;/value&gt;</span><br><span class="line">               &lt;value&gt;战意&lt;/value&gt;</span><br><span class="line">               &lt;value&gt;辐射&lt;/value&gt;</span><br><span class="line">           &lt;/set&gt;</span><br><span class="line">       &lt;/property&gt;</span><br></pre></td></tr></table></figure>

<h4 id="给参数注入空值"><a href="#给参数注入空值" class="headerlink" title="给参数注入空值"></a>给参数注入空值</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;property name=<span class="string">&quot;wife&quot;</span> value=<span class="string">&quot;&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<p>或者写成</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;property name=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">    &lt;value&gt;<span class="keyword">null</span>&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;    </span><br></pre></td></tr></table></figure>

<h4 id="Properties注入"><a href="#Properties注入" class="headerlink" title="Properties注入"></a>Properties注入</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">property name=<span class="string">&quot;info&quot;</span>&gt;</span><br><span class="line">            &lt;props&gt;</span><br><span class="line">                &lt;prop key=<span class="string">&quot;name&quot;</span>&gt;dwx&lt;/prop&gt;</span><br><span class="line">                &lt;prop key=<span class="string">&quot;id&quot;</span>&gt;<span class="number">2008114063</span>&lt;/prop&gt;</span><br><span class="line">                &lt;prop key=<span class="string">&quot;age&quot;</span>&gt;<span class="number">20</span>&lt;/prop&gt;</span><br><span class="line">            &lt;/props&gt;</span><br><span class="line">        &lt;/property&gt;</span><br></pre></td></tr></table></figure>

<p>相当于键值对，key就是但是value在<code>&lt;prop&gt;&lt;/prop&gt;</code>之间</p>
<p><strong>输出结果：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Student&#123;name=<span class="string">&#x27;dwx&#x27;</span>, address=Address&#123;address=<span class="string">&#x27;河南省新乡市&#x27;</span>&#125;, books=[《百年孤独》, 《白鹿原》, 《生死疲劳》, 《挪威的森林》], hobbys=[跑步, 听音乐, 阅读], card=&#123;身份证=<span class="number">123123123</span>, 银行卡=<span class="number">345345123</span>, 一卡通=dasd445645&#125;, games=[英雄联盟, 战意, 辐射], wife=<span class="string">&#x27;null&#x27;</span>, info=&#123;name=dwx, id=<span class="number">2008114063</span>, age=<span class="number">20</span>&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="c命令注入和p命令注入"><a href="#c命令注入和p命令注入" class="headerlink" title="c命令注入和p命令注入"></a>c命令注入和p命令注入</h2><p>c命令对应<code>constructor-arg</code>，是对构造器注入的简化</p>
<p>p命令对应<code>property</code>，是对set注入的简化</p>
<h3 id="P命令注入"><a href="#P命令注入" class="headerlink" title="P命令注入"></a>P命令注入</h3><p>p命令对应<code>property</code>，是对set注入的简化</p>
<p><strong>P命令在使用前需要在xml文件的头文件中加上一个配置</strong></p>
<p><code>  xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</code></p>
<p>加完配置后的xml文件像这样</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>P命令的使用</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dwx.pojo.User&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;dwx&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用时就用<code>P:参数名=&quot;&quot;</code>就可以使用了</p>
<h3 id="c命令注入"><a href="#c命令注入" class="headerlink" title="c命令注入"></a>c命令注入</h3><p>c命令对应<code>constructor-arg</code>，是对构造器注入的简化</p>
<p><strong>c命令在使用前需要在xml文件的头文件中加上一个配置</strong></p>
<p><code>xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</code></p>
<p>加完配置后的xml文件像这样</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:c</span>=<span class="string">&quot;http://www.springframework.org/schema/c&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>C命令的使用：</strong></p>
<p><code>&lt;bean id=&quot;user2&quot; class=&quot;com.dwx.pojo.User&quot; c:age=&quot;19&quot; c:name=&quot;ddd&quot;/&gt;</code></p>
<p>使用时就用<code>c:参数名=&quot;&quot;</code>就可以使用了</p>
]]></content>
  </entry>
  <entry>
    <title>Spring使用注解开发</title>
    <url>/2022/02/09/spring%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="Spring使用注解开发"><a href="#Spring使用注解开发" class="headerlink" title="Spring使用注解开发"></a>Spring使用注解开发</h1><p>Spring完全可以脱离项目里，而使用注解进行开发。</p>
<p>这里我们主要了解Spring对<code>&lt;bean&gt;</code>的替代。</p>
<p>在前面的学习过程中，<code>&lt;bean&gt;</code>可以对java程序的每一曾都有管理，因此使用注解也可以对程序的每一层进行管理。</p>
<h2 id="使用注解开发的要点"><a href="#使用注解开发的要点" class="headerlink" title="使用注解开发的要点"></a>使用注解开发的要点</h2><p>使用注解进行开发必须注意，一定要在xml文件中配置允许注解的配置，一定要开启注解，一定要将需要使用注解的类的包进行扫描</p>
<p><strong>xml依赖</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context/spring-context.xsd&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>开起注解：</strong></p>
<p><code>    &lt;context:annotation-config/&gt;</code></p>
<p><strong>对包进行扫描：</strong></p>
<p><code>&lt;context:component-scan base-package=&quot;包名&quot;/&gt;</code></p>
<h2 id="注解对各层的托管"><a href="#注解对各层的托管" class="headerlink" title="注解对各层的托管"></a>注解对各层的托管</h2><p>这里我们创建一个有多个层的环境进行测试：</p>
<ul>
<li>Dao层</li>
<li>Pojo层</li>
<li>Service层</li>
<li>Controller层</li>
</ul>
<h3 id="对婆婆层的托管"><a href="#对婆婆层的托管" class="headerlink" title="对婆婆层的托管"></a>对婆婆层的托管</h3><p>对pojo层托管使用注解<code>@Component</code></p>
<p>这样pojo层就被注册成功了，而他的id默认是该类名的小写</p>
<p><strong>test</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTset</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContest.xml&quot;</span>);</span><br><span class="line">        User user = context.getBean(<span class="string">&quot;user&quot;</span>, User.class);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>如何给属性赋值（注入）？</strong></p>
<p>对属性进行注入可以再该属性的上边或者在该属性的set方法上加上<code>@Value(&quot;&quot;)</code>来进行赋值</p>
<p><strong>pojo层</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;dwx&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>结果：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User&#123;name=&#x27;dwx&#x27;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="对Dao层的托管"><a href="#对Dao层的托管" class="headerlink" title="对Dao层的托管"></a>对Dao层的托管</h3><p>使用<code>@Repository</code></p>
<p><strong>dao层</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="对Service层的托管"><a href="#对Service层的托管" class="headerlink" title="对Service层的托管"></a>对Service层的托管</h3><p>使用<code>@Service</code></p>
<p><strong>service层</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="对Controller层的托管"><a href="#对Controller层的托管" class="headerlink" title="对Controller层的托管"></a>对Controller层的托管</h3><p>使用<code>@Controller</code></p>
<p><strong>controller层</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="有趣的点"><a href="#有趣的点" class="headerlink" title="有趣的点"></a>有趣的点</h3><p>有趣的是，其实这些层的注解的功能都是一样的。但是为了分层，给他们了名字不同的注解，但是这些注解的实际功能都是一样的。</p>
]]></content>
  </entry>
  <entry>
    <title>Spring预科</title>
    <url>/2022/02/07/spring%E9%A2%84%E7%A7%91/</url>
    <content><![CDATA[<h1 id="spring预科"><a href="#spring预科" class="headerlink" title="spring预科"></a>spring预科</h1><p>spring也是一种框架，mybatis框架是作用于永久层，但是spring是作用于其他的地方的。</p>
<h2 id="spring中文文档"><a href="#spring中文文档" class="headerlink" title="spring中文文档"></a>spring中文文档</h2><p> <a href="https://www.docs4dev.com/docs/zh/spring-framework/5.1.3.RELEASE/reference/core.html#beans">Spring Framework 中文文档 - Core Technologies | Docs4dev</a> </p>
<h2 id="spring的优点"><a href="#spring的优点" class="headerlink" title="spring的优点"></a>spring的优点</h2><ul>
<li>spring是一个开源的免费的开源容器</li>
<li>spring是一个轻量级的，非入侵的框架</li>
<li>spring控制翻转，面向切面编程</li>
<li>支持事务处理（jdbc），对框架整合的支持</li>
</ul>
<h2 id="spring的依赖"><a href="#spring的依赖" class="headerlink" title="spring的依赖"></a>spring的依赖</h2><p>spring需要导两种包：<code>Spring webmvc</code>和<code>Spring jdbc</code></p>
<p>首先<code>Spring webmvc</code>是一个整合了很多spring用到的包</p>
<p><code>Spring jdbc</code>是用于与mybatis整合是需要的包</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="IOC理论推导"><a href="#IOC理论推导" class="headerlink" title="IOC理论推导"></a>IOC理论推导</h2><p>在之前的约我中，如果用户的需求发生了改变，我们就要去修改源代码，但是这种事情处理起来很复杂。如果我们把代码的改变权交给用户，我们就能减少很多的事务。</p>
<p><strong>我们引出下面的实例来解释我们的思想</strong></p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/02/563e3c44e85122f5.jpg" alt="Dao层结构"> </p>
<p>由上图我们可以看到 这个抽象结构有两个实现类，但是在service层调用时，我们只需要调用一个</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dao.MybatisUserDaoImp;</span><br><span class="line"><span class="keyword">import</span> dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> dao.UserDaoImp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImp</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    UserDao userDao =  <span class="keyword">new</span> MybatisUserDaoImp();</span><br><span class="line">    <span class="comment">//UserDao userDao = new UserDaoImp()</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userDao.UserList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>那么 如果用户需要的是不同的service，我们就需要去调整他的UserDao参数。就要去修改源代码。</p>
<p><strong>改变思路：</strong>如果我们把UserDao看作一个参数，然后使用set方法实现赋值，那么用户再有其他的要求时，我们就不需要进行大的改动，只需要用户去按要求赋值即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dao.MybatisUserDaoImp;</span><br><span class="line"><span class="keyword">import</span> dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> dao.UserDaoImp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImp</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line"><span class="comment">//    UserDao userDao =  new MybatisUserDaoImp();</span></span><br><span class="line"><span class="comment">//    //UserDao userDao = new UserDaoImp()</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userDao.UserList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>此时的Test</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> dao.MybatisUserDaoImp;</span><br><span class="line"><span class="keyword">import</span> dao.UserDaoImp;</span><br><span class="line"><span class="keyword">import</span> service.UserServiceImp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        UserServiceImp userServiceImp = <span class="keyword">new</span> UserServiceImp();</span><br><span class="line">        userServiceImp.setUserDao(<span class="keyword">new</span> MybatisUserDaoImp());</span><br><span class="line">        userServiceImp.getUser();</span><br><span class="line">        userServiceImp.setUserDao(<span class="keyword">new</span> UserDaoImp());</span><br><span class="line">        userServiceImp.getUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>通过set方法就能按照用户的要求实现不同的效果</p>
<h2 id="IOC本质"><a href="#IOC本质" class="headerlink" title="IOC本质"></a>IOC本质</h2><p>IOC是Spring框架的核心，可以使用xml配置，使用注解配置，也可以不配置。</p>
<p>控制反转是一种通过描述（xml或注解）并通过第三方生产或获取特定对现货的方式。在Spring中实现控制反转的是IOC容器，其实现方法是依赖注入（DI）。</p>
]]></content>
  </entry>
  <entry>
    <title>三毛别惨案</title>
    <url>/2022/10/31/%E4%B8%89%E6%AF%9B%E5%88%AB%E6%83%A8%E6%A1%88/</url>
    <content><![CDATA[<h1 id="三毛别罴"><a href="#三毛别罴" class="headerlink" title="三毛别罴"></a>三毛别罴</h1><p>在日本沿用的中文里，有一种叫做罴的生物。它们的体型巨大而且盛行狡诈，不仅能够直立行走，还擅长模仿人类的动作，是一种非常危险的存在。传说中罴会将牛粪像帽子一样顶在头上，在远处缓缓的招手，从而吸引路人的注意，一旦靠近，就会立即遭到他们的捕食。古书里描述的这种怪兽，其实就是现在的棕熊。事实上，在大多数情况下，他们不会主动攻击人类，但在一些特殊的情况下，棕熊会变得异常可怕，而其中一些极端的个例甚至会变得完全不再像是一只动物……..</p>
<p>今天，我们来介绍日本历史最诡异的棕熊袭击事件——“三毛别“”事件。</p>
<p>1915年12月9日，日本北海道逐渐步入寒冷的严冬，当地居民们也开始囤积过冬用的粮草和谷物，准备迎接新一天的到来。村民天天完成了上午的劳作回到家里，还没开门一股血腥味扑鼻而来，他在慌忙进屋后，却看到这这生最恐怖的画面，整个茅房屋一片狼藉，到处都是浓稠的血迹，屋内只剩下一个被咬掉脑袋的孩子身体，无力的耷拉在椅子上，墙上破了一个大洞，年轻的的妻子也消失的无影无踪，太田被眼前的惨案吓得惊声大叫，赶紧跑到村子里求援。前来帮忙的村民们从后现场留下的大洞判断，这很可能棕熊导致的，因为在北海道也只有这种野兽有破屋伤人的能力。</p>
<p>但诡异的是，太田家门外挂满了鱼干等食物，却一点都没动，这不符合常理，作为一只棕熊不该忽视近在眼前的食物而选择破屋食人，全民们都匪夷所思，却又都不知道背后的原因，一种恐怖的气氛笼罩着这个小山村。第二天村民们为了躲避熊害组织了集体迁移，老人、女人和孩子往三毛别的下游迁移，另外选择村子里精壮的年轻人组成剩捕猎队，进入雪山寻找这只食人猛兽。</p>
<p>队伍顺着血迹，很快就在深山里寻找到了一具只剩下两条腿的尸体，根据衣服判断正是太田的妻子，残骸被粗糙的埋在雪地里像极了动物储存食物的行为。捕猎队在周围的雪地里找了很久，但除此之外，再也没有找到任何线索。</p>
<p>恐怖的氛围已经笼罩了所有村民，他们找来了著名的猎熊人山本兵吉，这位经验丰富的猎熊人说出了更为恐怖的推论，在正常情况下棕熊不会吃人，但如果这头熊尝过人肉的滋味就会开始忽略其余的食物而首选人类为食，而这只出现在村里的怪物很可能是一只被称作“袈裟悬”的大棕熊。</p>
<p>它胸口有一块斜向的伤疤，特别喜欢直立行走，远看就像是披着一件袈裟一样。这头棕熊已经连续吃掉数人，他现在对人肉的味道上瘾，而且异常喜食女性。这一切都有三毛别的惨案完全吻合。如果真的·是袈裟悬，那么现在所有的村民都非常危险，这只熊的食人经验太过丰富，现在已经变得异常狡诈和恐怖，普通人根本就无法对付。山本让队员赶快疏散居民，在自己取回管用的猎枪后就会赶过去帮忙。而他们不知道的是，一场更为骇人听闻的事件却已经在明景的家里降临。</p>
<p>12月10日晚上，在三毛别下游的一间房舍里，明景的妻子与四个儿子还有几个避难的村民正准备休息，他们的茅屋却开始了剧烈的晃动，一只恐怖的熊头从屋外伸了进来，它的颈部到肩部有着一道巨大的伤疤，正是那只可怕的袈裟悬。棕熊很快破房而入，它熟练地扑灭可能会伤害到自己的炉火，然后就瞄准众人扑了过来，一位老年男子在匆忙跑出屋后，就被快速的仆倒在地，在被咬成重伤后，这只怪物马上就失去了兴趣，它慢慢地靠近其他人，开始了有一场可怕的游戏，明净的三个三个儿子相继死去，三儿子在被棕熊咬了一口后，被棕熊叼起，像玩具一样在地上摔来摔去，当它正准备食用绝望的母亲时，却突然被一种特殊的味道所吸引，紧接着，他就从卧室的角落里拖出了一名躲藏起来的孕妇，在无助的求助声下，棕熊一点一点地啃食其她的身体，凄厉的惨叫声在寂静的山村中回荡着，闻声而来的村民从来没见过这样的场景，当他们回过神知道要围绕房屋时，袈裟悬却叼起了孕妇残破的身体，趁乱跑进了山林。</p>
<p>在不到两天的时间里袈裟悬已经杀吃了7个人，重伤了3人，事情引起了社会动荡，1915年12月12日北海道政府组织了高达600人的捕杀队伍进入深山势必要杀死这只杀人的袈裟悬。</p>
<p>本来以为可以很快的猎杀棕熊，但连续几天的时间都没有找到他的踪影。讨伐对有分别在三毛别村的上下游设立了多种陷阱来诱捕这只凶兽，更加离奇的事情发生了，袈裟悬在陷阱的吸引下出现过两次，但每次在接近射程的时候，却会诡异的突然转身离去。</p>
<p>恐怖已经蔓延了整个北海道，就在这时猎熊人山本兵吉取回自己的猎枪赶到了三毛别，帮助警方拟定了全新的捕猎计划，在一次深夜的行动中搜捕队忽然发现了一个站立不动的黑影，在对其呼喊过后它却没有做出任何回应，山本感觉到不对，然后立即向其开枪，在众人不可思议的目光下，那具黑影突然四脚着地往深山跑去。</p>
<p>12月14日，山里飘起了零碎的雪花，山本也在山里发现了动物被枪机后留下的血迹，为避免惊动袈裟悬，山本独自一人利用泥土掩盖身上的气味，追踪着被猎枪打伤的血迹寻找袈裟悬的踪影，大雪纷飞的深山中山本经过数小时的追踪终于发现了正在树下踱步的棕熊。它被山下的部队所吸引，丝毫没有感觉到危险的到来。</p>
<p>他紧闭呼吸在靠近20米的距离对着袈裟悬的心脏开了一枪，激怒的袈裟悬向山本兵吉扑去，他又对准袈裟悬的眼窝开了一枪，这一枪准确的把袈裟悬穿脑轰然倒地。袈裟悬的尸体被讨伐队抬了回去，经过测量这只食人熊袈裟悬足足有3米之高。</p>
<p>村民把袈裟悬的肚子切开，女人的尸体，衣物和毛发就这样暴露在人们的眼前，愤怒的村民把这头巨熊切割成了无数块，在将其煮熟后宫全村分食。而在一周后，有人在山林里发现袈裟悬大的离奇的洞穴，里边藏匿的很多女人的衣物和用品，这更加使得人们感到毛骨悚然。</p>
]]></content>
  </entry>
  <entry>
    <title>人脸识别尝试</title>
    <url>/2022/10/25/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E5%B0%9D%E8%AF%95/</url>
    <content><![CDATA[<h1 id="人脸识别尝试"><a href="#人脸识别尝试" class="headerlink" title="人脸识别尝试"></a>人脸识别尝试</h1><p><strong>参考材料</strong></p>
<p>[(181条消息) Java实现人脸识别(各项目结构都有案例说明)_高冷小伙的博客-CSDN博客_java实现人脸识别](<a href="https://blog.csdn.net/alpha_xia/article/details/121755220?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=java">https://blog.csdn.net/alpha_xia/article/details/121755220?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=java</a> 人脸识别&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<del>all</del>sobaiduweb~default-0-121755220.nonecase&amp;spm=1018.2226.3001.4187)</p>
<h2 id="下次SDK"><a href="#下次SDK" class="headerlink" title="下次SDK"></a>下次SDK</h2><p>人脸识别核心部分是蚕蛹蓝虹公司免费的SDK</p>
<p><strong>下载地址：</strong></p>
<p><a href="https://ai.arcsoft.com.cn/ucenter/resource/build/index.html#/application/259124">开发者中心 (arcsoft.com.cn)</a></p>
<h2 id="测试阶段"><a href="#测试阶段" class="headerlink" title="测试阶段"></a>测试阶段</h2><p><strong>官方给的程序</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> samplecode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.*;</span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.enums.*;</span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.toolkit.ImageInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.toolkit.ImageInfoEx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.arcsoft.face.toolkit.ImageFactory.getGrayData;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.arcsoft.face.toolkit.ImageFactory.getRGBData;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FaceEngineTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String appId = <span class="string">&quot;7K7KG9zfBVrtyhgdfdfg&quot;</span>;</span><br><span class="line">        String sdkKey = <span class="string">&quot;AuyJsdgsdfhsf&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        FaceEngine faceEngine = <span class="keyword">new</span> FaceEngine(<span class="string">&quot;D:\\AreFace\\libs\\WIN64&quot;</span>);</span><br><span class="line">        <span class="comment">//激活引擎，只需要一次</span></span><br><span class="line">        <span class="keyword">int</span> errorCode = faceEngine.activeOnline(appId, sdkKey);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (errorCode != ErrorInfo.MOK.getValue() &amp;&amp; errorCode != ErrorInfo.MERR_ASF_ALREADY_ACTIVATED.getValue()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;引擎激活失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ActiveFileInfo activeFileInfo=<span class="keyword">new</span> ActiveFileInfo();</span><br><span class="line">        errorCode = faceEngine.getActiveFileInfo(activeFileInfo);</span><br><span class="line">        <span class="keyword">if</span> (errorCode != ErrorInfo.MOK.getValue() &amp;&amp; errorCode != ErrorInfo.MERR_ASF_ALREADY_ACTIVATED.getValue()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;获取激活文件信息失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//引擎配置，保存默认即可</span></span><br><span class="line">        EngineConfiguration engineConfiguration = <span class="keyword">new</span> EngineConfiguration();</span><br><span class="line">        engineConfiguration.setDetectMode(DetectMode.ASF_DETECT_MODE_IMAGE);</span><br><span class="line">        engineConfiguration.setDetectFaceOrientPriority(DetectOrient.ASF_OP_ALL_OUT);</span><br><span class="line">        engineConfiguration.setDetectFaceMaxNum(<span class="number">10</span>);</span><br><span class="line">        engineConfiguration.setDetectFaceScaleVal(<span class="number">16</span>);</span><br><span class="line">        <span class="comment">//功能配置，可以设置面容识别时是否分析年龄、性别、3d等。</span></span><br><span class="line">        FunctionConfiguration functionConfiguration = <span class="keyword">new</span> FunctionConfiguration();</span><br><span class="line">        functionConfiguration.setSupportAge(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportFace3dAngle(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportFaceDetect(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportFaceRecognition(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportGender(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportLiveness(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportIRLiveness(<span class="keyword">true</span>);</span><br><span class="line">        engineConfiguration.setFunctionConfiguration(functionConfiguration);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化引擎</span></span><br><span class="line">        errorCode = faceEngine.init(engineConfiguration);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (errorCode != ErrorInfo.MOK.getValue()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;初始化引擎失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//人脸检测</span></span><br><span class="line">        ImageInfo imageInfo = getRGBData(<span class="keyword">new</span> File(<span class="string">&quot;d:\\aaa.jpg&quot;</span>));</span><br><span class="line">        List&lt;FaceInfo&gt; faceInfoList = <span class="keyword">new</span> ArrayList&lt;FaceInfo&gt;();</span><br><span class="line">        errorCode = faceEngine.detectFaces(imageInfo.getImageData(), imageInfo.getWidth(), imageInfo.getHeight(), imageInfo.getImageFormat(), faceInfoList);</span><br><span class="line">        System.out.println(faceInfoList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//特征提取</span></span><br><span class="line">        FaceFeature faceFeature = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">        errorCode = faceEngine.extractFaceFeature(imageInfo.getImageData(), imageInfo.getWidth(), imageInfo.getHeight(), imageInfo.getImageFormat(), faceInfoList.get(<span class="number">0</span>), faceFeature);</span><br><span class="line">        System.out.println(<span class="string">&quot;特征值大小：&quot;</span> + faceFeature.getFeatureData().length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//人脸检测2</span></span><br><span class="line">        ImageInfo imageInfo2 = getRGBData(<span class="keyword">new</span> File(<span class="string">&quot;d:\\ccc.jpg&quot;</span>));</span><br><span class="line">        List&lt;FaceInfo&gt; faceInfoList2 = <span class="keyword">new</span> ArrayList&lt;FaceInfo&gt;();</span><br><span class="line">        errorCode = faceEngine.detectFaces(imageInfo2.getImageData(), imageInfo2.getWidth(), imageInfo2.getHeight(),imageInfo.getImageFormat(), faceInfoList2);</span><br><span class="line">        System.out.println(faceInfoList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//特征提取2</span></span><br><span class="line">        FaceFeature faceFeature2 = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">        errorCode = faceEngine.extractFaceFeature(imageInfo2.getImageData(), imageInfo2.getWidth(), imageInfo2.getHeight(), imageInfo.getImageFormat(), faceInfoList2.get(<span class="number">0</span>), faceFeature2);</span><br><span class="line">        System.out.println(<span class="string">&quot;特征值大小：&quot;</span> + faceFeature.getFeatureData().length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//特征比对</span></span><br><span class="line">        FaceFeature targetFaceFeature = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">        targetFaceFeature.setFeatureData(faceFeature.getFeatureData());</span><br><span class="line">        FaceFeature sourceFaceFeature = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">        sourceFaceFeature.setFeatureData(faceFeature2.getFeatureData());</span><br><span class="line">        FaceSimilar faceSimilar = <span class="keyword">new</span> FaceSimilar();</span><br><span class="line"></span><br><span class="line">        errorCode = faceEngine.compareFaceFeature(targetFaceFeature, sourceFaceFeature, faceSimilar);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;相似度：&quot;</span> + faceSimilar.getScore());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置活体测试</span></span><br><span class="line">        errorCode = faceEngine.setLivenessParam(<span class="number">0.5f</span>, <span class="number">0.7f</span>);</span><br><span class="line">        <span class="comment">//人脸属性检测，如果上面功能配置没有的话，这里就不可用</span></span><br><span class="line">        FunctionConfiguration configuration = <span class="keyword">new</span> FunctionConfiguration();</span><br><span class="line">        configuration.setSupportAge(<span class="keyword">true</span>);</span><br><span class="line">        configuration.setSupportFace3dAngle(<span class="keyword">true</span>);</span><br><span class="line">        configuration.setSupportGender(<span class="keyword">true</span>);</span><br><span class="line">        configuration.setSupportLiveness(<span class="keyword">true</span>);</span><br><span class="line">        errorCode = faceEngine.process(imageInfo.getImageData(), imageInfo.getWidth(), imageInfo.getHeight(), imageInfo.getImageFormat(), faceInfoList, configuration);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//性别检测，如果上面功能配置没有的话，这里就不可用</span></span><br><span class="line">        List&lt;GenderInfo&gt; genderInfoList = <span class="keyword">new</span> ArrayList&lt;GenderInfo&gt;();</span><br><span class="line">        errorCode = faceEngine.getGender(genderInfoList);</span><br><span class="line">        System.out.println(<span class="string">&quot;性别：&quot;</span> + genderInfoList.get(<span class="number">0</span>).getGender());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//年龄检测，如果上面功能配置没有的话，这里就不可用</span></span><br><span class="line">        List&lt;AgeInfo&gt; ageInfoList = <span class="keyword">new</span> ArrayList&lt;AgeInfo&gt;();</span><br><span class="line">        errorCode = faceEngine.getAge(ageInfoList);</span><br><span class="line">        System.out.println(<span class="string">&quot;年龄：&quot;</span> + ageInfoList.get(<span class="number">0</span>).getAge());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3D信息检测，如果上面功能配置没有的话，这里就不可用</span></span><br><span class="line">        List&lt;Face3DAngle&gt; face3DAngleList = <span class="keyword">new</span> ArrayList&lt;Face3DAngle&gt;();</span><br><span class="line">        errorCode = faceEngine.getFace3DAngle(face3DAngleList);</span><br><span class="line">        System.out.println(<span class="string">&quot;3D角度：&quot;</span> + face3DAngleList.get(<span class="number">0</span>).getPitch() + <span class="string">&quot;,&quot;</span> + face3DAngleList.get(<span class="number">0</span>).getRoll() + <span class="string">&quot;,&quot;</span> + face3DAngleList.get(<span class="number">0</span>).getYaw());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//活体检测，如果上面功能配置没有的话，这里就不可用</span></span><br><span class="line">        List&lt;LivenessInfo&gt; livenessInfoList = <span class="keyword">new</span> ArrayList&lt;LivenessInfo&gt;();</span><br><span class="line">        errorCode = faceEngine.getLiveness(livenessInfoList);</span><br><span class="line">        System.out.println(<span class="string">&quot;活体：&quot;</span> + livenessInfoList.get(<span class="number">0</span>).getLiveness());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//IR属性处理，如果上面功能配置没有的话，这里就不可用</span></span><br><span class="line">        ImageInfo imageInfoGray = getGrayData(<span class="keyword">new</span> File(<span class="string">&quot;d:\\IR_480p.jpg&quot;</span>));</span><br><span class="line">        List&lt;FaceInfo&gt; faceInfoListGray = <span class="keyword">new</span> ArrayList&lt;FaceInfo&gt;();</span><br><span class="line">        errorCode = faceEngine.detectFaces(imageInfoGray.getImageData(), imageInfoGray.getWidth(), imageInfoGray.getHeight(), imageInfoGray.getImageFormat(), faceInfoListGray);</span><br><span class="line"></span><br><span class="line">        FunctionConfiguration configuration2 = <span class="keyword">new</span> FunctionConfiguration();</span><br><span class="line">        configuration2.setSupportIRLiveness(<span class="keyword">true</span>);</span><br><span class="line">        errorCode = faceEngine.processIr(imageInfoGray.getImageData(), imageInfoGray.getWidth(), imageInfoGray.getHeight(), imageInfoGray.getImageFormat(), faceInfoListGray, configuration2);</span><br><span class="line">        <span class="comment">//IR活体检测，如果上面功能配置没有的话，这里就不可用</span></span><br><span class="line">        List&lt;IrLivenessInfo&gt; irLivenessInfo = <span class="keyword">new</span> ArrayList&lt;IrLivenessInfo&gt;();</span><br><span class="line">        errorCode = faceEngine.getLivenessIr(irLivenessInfo);</span><br><span class="line">        System.out.println(<span class="string">&quot;IR活体：&quot;</span> + irLivenessInfo.get(<span class="number">0</span>).getLiveness());</span><br><span class="line"></span><br><span class="line">        ImageInfoEx imageInfoEx = <span class="keyword">new</span> ImageInfoEx();</span><br><span class="line">        imageInfoEx.setHeight(imageInfo.getHeight());</span><br><span class="line">        imageInfoEx.setWidth(imageInfo.getWidth());</span><br><span class="line">        imageInfoEx.setImageFormat(imageInfo.getImageFormat());</span><br><span class="line">        imageInfoEx.setImageDataPlanes(<span class="keyword">new</span> <span class="keyword">byte</span>[][]&#123;imageInfo.getImageData()&#125;);</span><br><span class="line">        imageInfoEx.setImageStrides(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;imageInfo.getWidth() * <span class="number">3</span>&#125;);</span><br><span class="line">        List&lt;FaceInfo&gt; faceInfoList1 = <span class="keyword">new</span> ArrayList&lt;FaceInfo&gt;();</span><br><span class="line">        errorCode = faceEngine.detectFaces(imageInfoEx, DetectModel.ASF_DETECT_MODEL_RGB, faceInfoList1);</span><br><span class="line"></span><br><span class="line">        FunctionConfiguration fun = <span class="keyword">new</span> FunctionConfiguration();</span><br><span class="line">        fun.setSupportAge(<span class="keyword">true</span>);</span><br><span class="line">        errorCode = faceEngine.process(imageInfoEx, faceInfoList1, functionConfiguration);</span><br><span class="line">        List&lt;AgeInfo&gt; ageInfoList1 = <span class="keyword">new</span> ArrayList&lt;AgeInfo&gt;();</span><br><span class="line">        <span class="keyword">int</span> age = faceEngine.getAge(ageInfoList1);</span><br><span class="line">        System.out.println(<span class="string">&quot;年龄：&quot;</span> + ageInfoList1.get(<span class="number">0</span>).getAge());</span><br><span class="line"></span><br><span class="line">        FaceFeature feature = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">        errorCode = faceEngine.extractFaceFeature(imageInfoEx, faceInfoList1.get(<span class="number">0</span>), feature);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//引擎卸载</span></span><br><span class="line">        errorCode = faceEngine.unInit();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>注意 这里需要导包 吧需要的包导到maven里边</strong></p>
<h2 id="学习阶段"><a href="#学习阶段" class="headerlink" title="学习阶段"></a>学习阶段</h2><p>分析官方给的pdf，来分析又什么用法，学会阅读官方文档也是一种能力</p>
<h2 id="使用步奏第一阶段-配置引擎"><a href="#使用步奏第一阶段-配置引擎" class="headerlink" title="使用步奏第一阶段 配置引擎"></a>使用步奏第一阶段 配置引擎</h2><h3 id="获得引擎"><a href="#获得引擎" class="headerlink" title="获得引擎"></a>获得引擎</h3><p>==代码中出现的数组都是乱码，具体值需要自己到官网拷贝==</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String appId = <span class="string">&quot;7asdasfG3cxqKmpF1DwijXxJ73s75v7uZqxoT&quot;</span>;</span><br><span class="line">String sdkKey = <span class="string">&quot;AuyJJasdqwafgadgBnD5wXzSEPtXs5C&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      FaceEngine faceEngine = <span class="keyword">new</span> FaceEngine(<span class="string">&quot;D:\\AreFace\\libs\\WIN64&quot;</span>);</span><br><span class="line">      <span class="comment">//激活引擎，只需要一次</span></span><br><span class="line">      <span class="keyword">int</span> errorCode = faceEngine.activeOnline(appId, sdkKey);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (errorCode != ErrorInfo.MOK.getValue() &amp;&amp; errorCode != ErrorInfo.MERR_ASF_ALREADY_ACTIVATED.getValue()) &#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;引擎激活失败&quot;</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<p><strong>C:\Users\Lenovo\Desktop\人脸识别尝试\libs\WIN64该文件名是从官网拷贝下来的压缩包解压后 xx.dll文件所在的位置</strong></p>
<p><img src="/dwx-tx.github.io/2022/10/25/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E5%B0%9D%E8%AF%95/Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20221025162958075.png" alt="image-20221025162958075"></p>
<h3 id="第二步-获得激活文件"><a href="#第二步-获得激活文件" class="headerlink" title="第二步 获得激活文件"></a>第二步 获得激活文件</h3><p>激活文件是可以直接new 生成 没有对其的配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建激活文件</span></span><br><span class="line">ActiveFileInfo activeFileInfo = <span class="keyword">new</span> ActiveFileInfo();</span><br><span class="line">errorCode = faceEngine.getActiveFileInfo(activeFileInfo);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断激活文件是否获取成功</span></span><br><span class="line"><span class="keyword">if</span> (errorCode != ErrorInfo.MOK.getValue() &amp;&amp; errorCode != ErrorInfo.MERR_ASF_ALREADY_ACTIVATED.getValue()) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;获取激活文件信息失败&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="第三步-配置引擎"><a href="#第三步-配置引擎" class="headerlink" title="第三步 配置引擎"></a>第三步 配置引擎</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//设置配置引擎对象</span><br><span class="line">EngineConfiguration engineConfiguration = new EngineConfiguration();</span><br><span class="line"></span><br><span class="line">//几个比较重要的配置设置</span><br><span class="line"></span><br><span class="line">//检测模式设置</span><br><span class="line">//这里因为我们是对图片进行人脸识别，因此这里我们使用一个IMAGE模式</span><br><span class="line">engineConfiguration.setDetectMode(DetectMode.ASF_DETECT_MODE_IMAGE);</span><br><span class="line"></span><br><span class="line">//可检测图片人脸方向设置</span><br><span class="line">engineConfiguration.setDetectFaceOrientPriority(DetectOrient.ASF_OP_ALL_OUT);//这里我设置的是全方位角设置</span><br></pre></td></tr></table></figure>

<p><strong>具体功能 请参考文档 文档在下载下来的压缩包里有</strong></p>
<h3 id="第四步-配置引擎功能"><a href="#第四步-配置引擎功能" class="headerlink" title="第四步 配置引擎功能"></a>第四步 配置引擎功能</h3><p>引擎功能 即引擎能够干什么；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//功能配置，可以设置面容识别时是否分析年龄、性别、3d等。</span></span><br><span class="line">FunctionConfiguration functionConfiguration = <span class="keyword">new</span> FunctionConfiguration();</span><br><span class="line">functionConfiguration.setSupportAge(<span class="keyword">true</span>);</span><br><span class="line">functionConfiguration.setSupportFace3dAngle(<span class="keyword">true</span>);</span><br><span class="line">functionConfiguration.setSupportFaceDetect(<span class="keyword">true</span>);</span><br><span class="line">functionConfiguration.setSupportFaceRecognition(<span class="keyword">true</span>);</span><br><span class="line">functionConfiguration.setSupportGender(<span class="keyword">true</span>);</span><br><span class="line">functionConfiguration.setSupportLiveness(<span class="keyword">true</span>);</span><br><span class="line">functionConfiguration.setSupportIRLiveness(<span class="keyword">true</span>);</span><br><span class="line">       </span><br><span class="line">engineConfiguration.setFunctionConfiguration(functionConfiguration);</span><br></pre></td></tr></table></figure>

<h3 id="第五步-初始化引擎"><a href="#第五步-初始化引擎" class="headerlink" title="第五步 初始化引擎"></a>第五步 初始化引擎</h3><p>将配置好的引擎和引擎功能的对象都放到引擎里</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//初始化引擎 (将配置设置到引擎中)</span><br><span class="line">     errorCode = faceEngine.init(engineConfiguration);</span><br><span class="line"></span><br><span class="line">     if (errorCode!=ErrorInfo.MOK.getValue())&#123;</span><br><span class="line">         System.out.println(&quot;引擎初始化失败&quot;);</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>

<p>引擎准备阶段就到此结束，下边就是引擎能进行的操作了</p>
<p><strong>再次强调</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">EngineConfiguration engineConfiguration = <span class="keyword">new</span> EngineConfiguration();</span><br><span class="line">engineConfiguration.setDetectMode(DetectMode.ASF_DETECT_MODE_IMAGE);</span><br><span class="line">engineConfiguration.setDetectFaceOrientPriority(DetectOrient.ASF_OP_ALL_OUT);</span><br><span class="line">engineConfiguration.setDetectFaceMaxNum(<span class="number">10</span>);</span><br><span class="line">engineConfiguration.setDetectFaceScaleVal(<span class="number">16</span>);</span><br></pre></td></tr></table></figure>

<p>配置引擎时，这里个配置比较重要</p>
<p>从上到下分别是</p>
<ul>
<li>引擎识别模式，是识别静态图片还是视频流</li>
<li>引擎可以识别的头像角度，这里设置的是都可以识别</li>
<li>引擎识别来拿的最大数量</li>
<li>以及引擎识别等级</li>
</ul>
<h2 id="使用步奏第二部分-使用引擎"><a href="#使用步奏第二部分-使用引擎" class="headerlink" title="使用步奏第二部分 使用引擎"></a>使用步奏第二部分 使用引擎</h2><p><strong>准备图像</strong></p>
<h3 id="人脸特征获取"><a href="#人脸特征获取" class="headerlink" title="人脸特征获取"></a>人脸特征获取</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//准备文件</span></span><br><span class="line">      File file = <span class="keyword">new</span> File(<span class="string">&quot;D:\\aaa.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//这里使用detectFaces方法来对图片进行分析 detectFaces需要很多参数 这里使用getRGBData方法来获得这些参数</span></span><br><span class="line">      ImageInfo imageInfo = getRGBData(file);</span><br><span class="line">      <span class="comment">//分析得到的数据保存在faceInfoList列表中</span></span><br><span class="line">      List&lt;FaceInfo&gt; faceInfoList = <span class="keyword">new</span> ArrayList&lt;FaceInfo&gt;();</span><br><span class="line">      faceEngine.detectFaces(imageInfo.getImageData(), imageInfo.getWidth(), imageInfo.getHeight(), imageInfo.getImageFormat(), faceInfoList);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      System.out.println(faceInfoList);</span><br></pre></td></tr></table></figure>

<p><strong>结果：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[com.arcsoft.face.Rect(<span class="number">245</span>, <span class="number">397</span> - <span class="number">937</span>, <span class="number">1089</span>),<span class="number">1</span>]</span><br></pre></td></tr></table></figure>

<p><strong>如果一个图中有多个人脸也是能够识别的</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">com.arcsoft.face.Rect(<span class="number">1974</span>, <span class="number">213</span> - <span class="number">2749</span>, <span class="number">987</span>),<span class="number">1</span></span><br><span class="line">com.arcsoft.face.Rect(<span class="number">1352</span>, <span class="number">769</span> - <span class="number">1839</span>, <span class="number">1256</span>),<span class="number">1</span></span><br><span class="line">com.arcsoft.face.Rect(<span class="number">1112</span>, <span class="number">550</span> - <span class="number">1417</span>, <span class="number">854</span>),<span class="number">1</span></span><br><span class="line">com.arcsoft.face.Rect(<span class="number">327</span>, <span class="number">692</span> - <span class="number">571</span>, <span class="number">936</span>),<span class="number">1</span></span><br><span class="line">com.arcsoft.face.Rect(<span class="number">950</span>, <span class="number">249</span> - <span class="number">1200</span>, <span class="number">498</span>),<span class="number">1</span></span><br><span class="line">com.arcsoft.face.Rect(<span class="number">961</span>, <span class="number">708</span> - <span class="number">1186</span>, <span class="number">933</span>),<span class="number">1</span></span><br></pre></td></tr></table></figure>

<h3 id="人脸特征提取"><a href="#人脸特征提取" class="headerlink" title="人脸特征提取"></a>人脸特征提取</h3><p><code>extractFaceFeature</code>方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//人脸特征提取</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">//在输入一个图片</span></span><br><span class="line">       File file1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\aaa.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       ImageInfo imageInfo1 = getRGBData(file1);</span><br><span class="line">       <span class="comment">//分析得到的数据保存在faceInfoList列表中</span></span><br><span class="line">       List&lt;FaceInfo&gt; faceInfoList1 = <span class="keyword">new</span> ArrayList&lt;FaceInfo&gt;();</span><br><span class="line">       faceEngine.detectFaces(imageInfo1.getImageData(), imageInfo1.getWidth(), imageInfo1.getHeight(), imageInfo1.getImageFormat(), faceInfoList1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span> (FaceInfo faceInfo : faceInfoList1) &#123;</span><br><span class="line">           System.out.println(faceInfo);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="comment">//人脸信息都存放在这个对象里</span></span><br><span class="line">       FaceFeature faceFeature = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">       faceEngine.extractFaceFeature(imageInfo1.getImageData(),imageInfo1.getWidth(), imageInfo1.getHeight(), imageInfo1.getImageFormat(),faceInfoList1.get(<span class="number">0</span>),faceFeature);</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">&quot;图片AAA.jpg的特征是大小为:&quot;</span>+faceFeature.getFeatureData().length);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="人脸相似度对比"><a href="#人脸相似度对比" class="headerlink" title="人脸相似度对比"></a>人脸相似度对比</h3><p><strong>准备两张图片，按照上述的方法，获得两个feature 来进行比较</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//在输入一个图片</span></span><br><span class="line">File file1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\fff.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ImageInfo imageInfo1 = getRGBData(file1);</span><br><span class="line"><span class="comment">//分析得到的数据保存在faceInfoList列表中</span></span><br><span class="line">List&lt;FaceInfo&gt; faceInfoList1 = <span class="keyword">new</span> ArrayList&lt;FaceInfo&gt;();</span><br><span class="line">faceEngine.detectFaces(imageInfo1.getImageData(), imageInfo1.getWidth(), imageInfo1.getHeight(), imageInfo1.getImageFormat(), faceInfoList1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (FaceInfo faceInfo : faceInfoList1) &#123;</span><br><span class="line">    System.out.print(<span class="string">&quot;第一张图片获得的数据:&quot;</span>);</span><br><span class="line">    System.out.println(faceInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//人脸信息都存放在这个对象里</span></span><br><span class="line">FaceFeature faceFeature = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">faceEngine.extractFaceFeature(imageInfo1.getImageData(),imageInfo1.getWidth(), imageInfo1.getHeight(), imageInfo1.getImageFormat(),faceInfoList1.get(<span class="number">0</span>),faceFeature);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;图片fff.jpg的特征值大小为:&quot;</span>+faceFeature.getFeatureData().length);</span><br><span class="line"></span><br><span class="line"><span class="comment">//第二个图片</span></span><br><span class="line">File file2 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\eee.jpg&quot;</span>);</span><br><span class="line">ImageInfo imageInfo2 = getRGBData(file2);</span><br><span class="line">ArrayList&lt;FaceInfo&gt; faceInfoList2 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">faceEngine.detectFaces(imageInfo2.getImageData(),imageInfo2.getWidth(),imageInfo2.getHeight(),imageInfo2.getImageFormat(),faceInfoList2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (FaceInfo faceInfo : faceInfoList2) &#123;</span><br><span class="line">    System.out.print(<span class="string">&quot;第二张图片获得的数据:&quot;</span>);</span><br><span class="line">    System.out.println(faceInfo);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获得脸部信息</span></span><br><span class="line">FaceFeature faceFeature1 = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">faceEngine.extractFaceFeature(imageInfo2.getImageData(),imageInfo2.getWidth(),imageInfo2.getHeight(),imageInfo2.getImageFormat(),faceInfoList2.get(<span class="number">0</span>),faceFeature1);</span><br><span class="line">System.out.println(<span class="string">&quot;图片eee.jpg的特征值大小为:&quot;</span>+faceFeature1.getFeatureData().length);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @Param faceFeature</span></span><br><span class="line"><span class="comment">* @Param faceFeature1</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">FaceSimilar faceSimilar = <span class="keyword">new</span> FaceSimilar();</span><br><span class="line"><span class="comment">//进行图片对比</span></span><br><span class="line">faceEngine.compareFaceFeature(faceFeature,faceFeature1, CompareModel.ID_PHOTO,faceSimilar);</span><br><span class="line">System.out.println(<span class="string">&quot;两张图片的相似度为:&quot;</span>+faceSimilar.getScore());</span><br></pre></td></tr></table></figure>

<p>通过两个面部特征对象 调用方法进行比较 最后获得值</p>
<h3 id="获得可以获得的数据"><a href="#获得可以获得的数据" class="headerlink" title="获得可以获得的数据"></a>获得可以获得的数据</h3><p><strong>可以获得的数据包括</strong></p>
<ul>
<li>年龄 getAge</li>
<li>性别 getGender</li>
<li>人脸三维角度信息 getFace#DAngle</li>
<li>是否为活物 getLiveness</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获得 年龄 性别</span></span><br><span class="line"></span><br><span class="line">        faceEngine.process(imageInfo2.getImageData(),imageInfo2.getWidth(),imageInfo2.getHeight(),imageInfo2.getImageFormat(),faceInfoList2,functionConfiguration);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ImageInfoEx infoEx = <span class="keyword">new</span> ImageInfoEx();</span><br><span class="line">        infoEx.setHeight(imageInfo2.getHeight());</span><br><span class="line">        infoEx.setWidth(imageInfo2.getWidth());</span><br><span class="line">        infoEx.setImageFormat(imageInfo2.getImageFormat());</span><br><span class="line">        infoEx.setImageDataPlanes(<span class="keyword">new</span> <span class="keyword">byte</span>[][]&#123;imageInfo2.getImageData()&#125;);</span><br><span class="line">        infoEx.setImageStrides(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;imageInfo2.getWidth() * <span class="number">3</span>&#125;);</span><br><span class="line">        List&lt;FaceInfo&gt; faceInfoList3 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        faceEngine.detectFaces(infoEx, DetectModel.ASF_DETECT_MODEL_RGB,faceInfoList3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//这里又设置了一个引擎功能 不知道为何</span></span><br><span class="line">        FunctionConfiguration configuration = <span class="keyword">new</span> FunctionConfiguration();</span><br><span class="line">        configuration.setSupportAge(<span class="keyword">true</span>);</span><br><span class="line">        configuration.setSupportFace3dAngle(<span class="keyword">true</span>);</span><br><span class="line">        configuration.setSupportGender(<span class="keyword">true</span>);</span><br><span class="line">        configuration.setSupportLiveness(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        faceEngine.process(infoEx,faceInfoList3,configuration);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;AgeInfo&gt; ageInfos = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> age = faceEngine.getAge(ageInfos);</span><br><span class="line">        System.out.println(<span class="string">&quot;图片eee.jpg中人物的大致年龄为:&quot;</span>+ageInfos.get(<span class="number">0</span>).getAge());</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;GenderInfo&gt; genderInfos = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        faceEngine.getGender(genderInfos);</span><br><span class="line">        System.out.println(<span class="string">&quot;图片eee.jpg中的人物的性别为:&quot;</span>+genderInfos.get(<span class="number">0</span>).getGender());</span><br></pre></td></tr></table></figure>

<p><strong>中间有一个新建立的FunctionConfiguration()的对象configure，但是我不明白为什么要新建一个 因为之前的程序中已经存在这个对象了，而且设置的配置也是相同的，日后继续学习</strong></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>使用别人的包，固然是一个快速入门的方法，但是具象性太多，只能获得面部数据，年龄，性别，是否为活物，等等等。</p>
<p>做一个人脸识别功能，是能够实现的，但是无法生成标志着红框框的图片，生产那种高大上的好像在追踪分析的图片。（或许是我自己不会）</p>
<p>学完这个包的使用，增加了自己阅读各种依赖官方文档的能力，人工智能涉足，后续会继续向更深处学习，争取能够手搓出一个程序</p>
]]></content>
  </entry>
  <entry>
    <title>人脸识别深入认识</title>
    <url>/2022/10/26/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E5%86%8D%E8%AE%A4%E8%AF%86/</url>
    <content><![CDATA[<h1 id="人脸识别系统再认识"><a href="#人脸识别系统再认识" class="headerlink" title="人脸识别系统再认识"></a>人脸识别系统再认识</h1><p>本次试验，希望能够学习到类似人脸打卡系统，通过一张静态图片可以从数据库中调出该人物的身份。</p>
<h2 id="理论支持"><a href="#理论支持" class="headerlink" title="理论支持"></a>理论支持</h2><p>在第一次的学习中，我发现了SDK提到了一个对象“feature”，里边可能存在人脸部信息的数据</p>
<h3 id="根据上次的学习———-搭建一个项目"><a href="#根据上次的学习———-搭建一个项目" class="headerlink" title="根据上次的学习———-搭建一个项目"></a>根据上次的学习———-搭建一个项目</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> dwx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.ActiveFileInfo;</span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.EngineConfiguration;</span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.FaceEngine;</span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.FunctionConfiguration;</span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.enums.DetectMode;</span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.enums.DetectOrient;</span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.enums.ErrorInfo;</span><br><span class="line"><span class="keyword">import</span> com.arcsoft.face.toolkit.ImageInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.arcsoft.face.toolkit.ImageFactory.getRGBData;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAreFaceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//启动引擎</span></span><br><span class="line">        String appId = <span class="string">&quot;7K7KG9zfBVXbxoG3cxqKmpF1DwijXxJ73s75v7uZqxoT&quot;</span>;</span><br><span class="line">        String sdkKey = <span class="string">&quot;AuyJJAcGDtzSnK8wz2Dekrk28QmK1BnD5wXzSEPtXs5C&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//启动引擎的地址</span></span><br><span class="line">        String dllAddress = <span class="string">&quot;D:\\AreFace\\libs\\WIN64&quot;</span>;</span><br><span class="line">        FaceEngine faceEngine = <span class="keyword">new</span> FaceEngine(dllAddress);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> errorCode = faceEngine.activeOnline(appId, sdkKey);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (errorCode != ErrorInfo.MOK.getValue() &amp;&amp; errorCode != ErrorInfo.MERR_ASF_ALREADY_ACTIVATED.getValue()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;引擎激活失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ActiveFileInfo activeFileInfo = <span class="keyword">new</span> ActiveFileInfo();</span><br><span class="line"></span><br><span class="line">        errorCode = faceEngine.getActiveFileInfo(activeFileInfo);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (errorCode != ErrorInfo.MOK.getValue() &amp;&amp; errorCode != ErrorInfo.MERR_ASF_ALREADY_ACTIVATED.getValue()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;获取激活文件信息失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化引擎</span></span><br><span class="line">        EngineConfiguration engineConfiguration = <span class="keyword">new</span> EngineConfiguration();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//检测模式设置</span></span><br><span class="line">        <span class="comment">//这里因为我们是对图片进行人脸识别，因此这里我们使用一个IMAGE模式</span></span><br><span class="line">        engineConfiguration.setDetectMode(DetectMode.ASF_DETECT_MODE_IMAGE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//可检测图片人脸方向设置</span></span><br><span class="line">        engineConfiguration.setDetectFaceOrientPriority(DetectOrient.ASF_OP_ALL_OUT);<span class="comment">//这里我设置的是全方位角设置</span></span><br><span class="line">        engineConfiguration.setDetectFaceMaxNum(<span class="number">40</span>);<span class="comment">//最大识别人脸数量</span></span><br><span class="line">        engineConfiguration.setDetectFaceScaleVal(<span class="number">16</span>);<span class="comment">//识别等级</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置引擎功能</span></span><br><span class="line">        <span class="comment">//功能配置，可以设置面容识别时是否分析年龄、性别、3d等。</span></span><br><span class="line">        FunctionConfiguration functionConfiguration = <span class="keyword">new</span> FunctionConfiguration();</span><br><span class="line">        functionConfiguration.setSupportAge(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportFace3dAngle(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportFaceDetect(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportFaceRecognition(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportGender(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportLiveness(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportIRLiveness(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        engineConfiguration.setFunctionConfiguration(functionConfiguration);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化引擎 (将配置设置到引擎中)</span></span><br><span class="line">        errorCode = faceEngine.init(engineConfiguration);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (errorCode != ErrorInfo.MOK.getValue()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;引擎初始化失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭引擎</span></span><br><span class="line">        faceEngine.unInit();</span><br><span class="line">        System.out.println(<span class="string">&quot;=================程序结束===================&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="提取图片中的信息"><a href="#提取图片中的信息" class="headerlink" title="提取图片中的信息"></a>提取图片中的信息</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//图片所在的文件路径</span></span><br><span class="line">   String fileUrl = <span class="string">&quot;D:\\AreFace\\AreFaceTest\\&quot;</span>;</span><br><span class="line">   <span class="comment">//文件名称</span></span><br><span class="line">   String fileName = <span class="string">&quot;aaa.jpg&quot;</span>;</span><br><span class="line">   File file1 = <span class="keyword">new</span> File(fileUrl + fileName);</span><br><span class="line">   ImageInfo imageInfo = getRGBData(file1);</span><br><span class="line">   <span class="comment">//获得一个图片里的所有人脸信息</span></span><br><span class="line">   List&lt;FaceInfo&gt; faceInfos = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">   faceEngine.detectFaces(imageInfo.getImageData(), imageInfo.getWidth(),imageInfo.getHeight() ,imageInfo.getImageFormat(),faceInfos);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//展示所有的人脸信息</span></span><br><span class="line">   <span class="keyword">for</span> (FaceInfo faceInfo : faceInfos) &#123;</span><br><span class="line">       System.out.println(faceInfo);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">//获得feature</span></span><br><span class="line">   FaceFeature faceFeature = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">   faceEngine.extractFaceFeature(imageInfo.getImageData(), imageInfo.getWidth(),imageInfo.getHeight() ,imageInfo.getImageFormat(),faceInfos.get(<span class="number">0</span>),faceFeature);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//输出特征值</span></span><br><span class="line">   System.out.println(<span class="string">&quot;feature数据位:&quot;</span>+ Arrays.toString(faceFeature.getFeatureData()));</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>获得的数据不知道是什么意思</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">feature数据位:[<span class="number">0</span>, -<span class="number">128</span>, -<span class="number">6</span>, <span class="number">68</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">96</span>, <span class="number">65</span>, -<span class="number">68</span>, -<span class="number">21</span>, <span class="number">67</span>, <span class="number">61</span>, -<span class="number">114</span>, -<span class="number">43</span>, <span class="number">119</span>, -<span class="number">68</span>, -<span class="number">121</span>, <span class="number">0</span>, -<span class="number">42</span>, <span class="number">61</span>, <span class="number">4</span>, <span class="number">7</span>, -<span class="number">46</span>, -<span class="number">68</span>, <span class="number">42</span>, -<span class="number">1</span>, -<span class="number">110</span>, <span class="number">61</span>, -<span class="number">69</span>, -<span class="number">114</span>, -<span class="number">91</span>, -<span class="number">67</span>, <span class="number">49</span>, -<span class="number">60</span>, <span class="number">8</span>, <span class="number">60</span>, <span class="number">71</span>, <span class="number">71</span>, -<span class="number">41</span>, -<span class="number">67</span>, -<span class="number">102</span>, -<span class="number">119</span>, <span class="number">71</span>, <span class="number">57</span>, <span class="number">108</span>, -<span class="number">77</span>, -<span class="number">59</span>, <span class="number">61</span>, <span class="number">115</span>, -<span class="number">20</span>, <span class="number">4</span>, -<span class="number">67</span>, <span class="number">112</span>, -<span class="number">28</span>, <span class="number">30</span>, <span class="number">58</span>, -<span class="number">64</span>, <span class="number">48</span>, <span class="number">110</span>, -<span class="number">67</span>, <span class="number">119</span>, <span class="number">84</span>, -<span class="number">31</span>, <span class="number">61</span>, <span class="number">34</span>, <span class="number">96</span>, -<span class="number">92</span>, -<span class="number">67</span>, <span class="number">119</span>, -<span class="number">3</span>, -<span class="number">65</span>, <span class="number">61</span>, <span class="number">5</span>, <span class="number">123</span>, -<span class="number">124</span>, <span class="number">61</span>, <span class="number">101</span>, -<span class="number">97</span>, <span class="number">117</span>, -<span class="number">67</span>, -<span class="number">79</span>, <span class="number">53</span>, <span class="number">35</span>, <span class="number">61</span>, -<span class="number">76</span>, -<span class="number">124</span>, -<span class="number">114</span>, <span class="number">61</span>, -<span class="number">32</span>, <span class="number">85</span>, <span class="number">114</span>, <span class="number">60</span>, <span class="number">95</span>, -<span class="number">89</span>, -<span class="number">52</span>, -<span class="number">67</span>, <span class="number">36</span>, <span class="number">93</span>, <span class="number">90</span>, -<span class="number">67</span>, -<span class="number">121</span>, -<span class="number">20</span>, -<span class="number">109</span>, -<span class="number">68</span>, -<span class="number">55</span>, -<span class="number">91</span>, <span class="number">16</span>, <span class="number">61</span>, -<span class="number">75</span>, -<span class="number">64</span>, <span class="number">120</span>, <span class="number">59</span>, <span class="number">95</span>, -<span class="number">80</span>, -<span class="number">54</span>, -<span class="number">67</span>, -<span class="number">109</span>, -<span class="number">92</span>, <span class="number">32</span>, -<span class="number">67</span>, <span class="number">53</span>, -<span class="number">99</span>, <span class="number">0</span>, -<span class="number">67</span>, -<span class="number">92</span>, <span class="number">74</span>, -<span class="number">118</span>, <span class="number">61</span>, <span class="number">12</span>, <span class="number">97</span>, -<span class="number">65</span>, <span class="number">60</span>, -<span class="number">5</span>, -<span class="number">60</span>, <span class="number">61</span>, <span class="number">60</span>, <span class="number">55</span>, <span class="number">111</span>, -<span class="number">58</span>, -<span class="number">67</span>, <span class="number">81</span>, <span class="number">36</span>, <span class="number">53</span>, -<span class="number">68</span>, <span class="number">35</span>, <span class="number">114</span>, <span class="number">15</span>, -<span class="number">68</span>, <span class="number">66</span>, <span class="number">100</span>, -<span class="number">25</span>, -<span class="number">68</span>, -<span class="number">75</span>, -<span class="number">118</span>, -<span class="number">109</span>, -<span class="number">67</span>, <span class="number">98</span>, -<span class="number">12</span>, -<span class="number">74</span>, <span class="number">58</span>, <span class="number">67</span>, <span class="number">13</span>, <span class="number">28</span>, -<span class="number">67</span>, -<span class="number">61</span>, -<span class="number">65</span>, <span class="number">4</span>, -<span class="number">67</span>, <span class="number">82</span>, -<span class="number">8</span>, <span class="number">67</span>, <span class="number">60</span>, -<span class="number">14</span>, -<span class="number">58</span>, -<span class="number">102</span>, -<span class="number">67</span>, -<span class="number">110</span>, -<span class="number">32</span>, -<span class="number">84</span>, <span class="number">61</span>, <span class="number">9</span>, -<span class="number">110</span>, <span class="number">36</span>, <span class="number">62</span>, <span class="number">91</span>, -<span class="number">81</span>, <span class="number">30</span>, <span class="number">61</span>, <span class="number">52</span>, -<span class="number">77</span>, <span class="number">3</span>, -<span class="number">67</span>, -<span class="number">121</span>, <span class="number">29</span>, <span class="number">78</span>, <span class="number">61</span>, -<span class="number">83</span>, <span class="number">70</span>, -<span class="number">92</span>, <span class="number">61</span>, <span class="number">77</span>, -<span class="number">71</span>, <span class="number">26</span>, -<span class="number">66</span>, -<span class="number">89</span>, -<span class="number">59</span>, -<span class="number">18</span>, -<span class="number">68</span>, <span class="number">32</span>, -<span class="number">115</span>, -<span class="number">113</span>, <span class="number">61</span>, <span class="number">113</span>, <span class="number">61</span>, <span class="number">48</span>, <span class="number">61</span>, <span class="number">29</span>, <span class="number">121</span>, -<span class="number">104</span>, <span class="number">61</span>, -<span class="number">128</span>, <span class="number">21</span>, -<span class="number">42</span>, -<span class="number">68</span>, -<span class="number">109</span>, <span class="number">97</span>, -<span class="number">61</span>, -<span class="number">68</span>, -<span class="number">123</span>, <span class="number">121</span>, -<span class="number">128</span>, <span class="number">60</span>, <span class="number">54</span>, -<span class="number">72</span>, <span class="number">41</span>, -<span class="number">67</span>, <span class="number">3</span>, <span class="number">37</span>, -<span class="number">55</span>, <span class="number">61</span>, -<span class="number">67</span>, -<span class="number">59</span>, <span class="number">8</span>, <span class="number">61</span>, <span class="number">89</span>, <span class="number">126</span>, -<span class="number">125</span>, <span class="number">60</span>, -<span class="number">43</span>, <span class="number">30</span>, <span class="number">9</span>, <span class="number">59</span>, -<span class="number">81</span>, <span class="number">51</span>, -<span class="number">110</span>, -<span class="number">67</span>, -<span class="number">4</span>, -<span class="number">94</span>, -<span class="number">84</span>, -<span class="number">68</span>, -<span class="number">47</span>, <span class="number">109</span>, -<span class="number">38</span>, -<span class="number">70</span>, -<span class="number">50</span>, -<span class="number">64</span>, -<span class="number">70</span>, <span class="number">60</span>, -<span class="number">50</span>, <span class="number">60</span>, <span class="number">30</span>, -<span class="number">68</span>, <span class="number">36</span>, <span class="number">84</span>, -<span class="number">62</span>, -<span class="number">67</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">61</span>, <span class="number">20</span>, -<span class="number">47</span>, -<span class="number">119</span>, -<span class="number">67</span>, -<span class="number">7</span>, <span class="number">5</span>, <span class="number">126</span>, <span class="number">60</span>, <span class="number">45</span>, <span class="number">96</span>, <span class="number">45</span>, -<span class="number">67</span>, -<span class="number">127</span>, -<span class="number">124</span>, -<span class="number">72</span>, -<span class="number">69</span>, -<span class="number">59</span>, -<span class="number">112</span>, -<span class="number">77</span>, <span class="number">61</span>, -<span class="number">83</span>, <span class="number">79</span>, <span class="number">36</span>, -<span class="number">66</span>, -<span class="number">87</span>, -<span class="number">77</span>, -<span class="number">30</span>, <span class="number">61</span>, -<span class="number">16</span>, -<span class="number">107</span>, -<span class="number">90</span>, -<span class="number">67</span>, <span class="number">27</span>, -<span class="number">36</span>, <span class="number">116</span>, -<span class="number">68</span>, -<span class="number">65</span>, <span class="number">114</span>, -<span class="number">105</span>, -<span class="number">67</span>, -<span class="number">93</span>, <span class="number">60</span>, <span class="number">6</span>, -<span class="number">67</span>, -<span class="number">20</span>, -<span class="number">64</span>, -<span class="number">125</span>, -<span class="number">67</span>, -<span class="number">81</span>, <span class="number">24</span>, -<span class="number">72</span>, -<span class="number">67</span>, <span class="number">19</span>, -<span class="number">124</span>, <span class="number">35</span>, -<span class="number">67</span>, -<span class="number">22</span>, <span class="number">16</span>, -<span class="number">126</span>, <span class="number">61</span>, -<span class="number">46</span>, <span class="number">115</span>, <span class="number">107</span>, <span class="number">61</span>, <span class="number">77</span>, <span class="number">20</span>, -<span class="number">40</span>, -<span class="number">67</span>, -<span class="number">27</span>, <span class="number">35</span>, <span class="number">90</span>, -<span class="number">67</span>, <span class="number">78</span>, -<span class="number">2</span>, -<span class="number">65</span>, <span class="number">59</span>, <span class="number">68</span>, -<span class="number">31</span>, -<span class="number">128</span>, <span class="number">61</span>, <span class="number">58</span>, -<span class="number">60</span>, -<span class="number">99</span>, -<span class="number">68</span>, -<span class="number">127</span>, -<span class="number">48</span>, -<span class="number">76</span>, -<span class="number">67</span>, <span class="number">83</span>, -<span class="number">8</span>, -<span class="number">108</span>, -<span class="number">69</span>, <span class="number">12</span>, -<span class="number">115</span>, -<span class="number">89</span>, -<span class="number">69</span>, <span class="number">95</span>, <span class="number">107</span>, <span class="number">116</span>, -<span class="number">67</span>, -<span class="number">95</span>, -<span class="number">84</span>, <span class="number">109</span>, -<span class="number">69</span>, <span class="number">69</span>, <span class="number">34</span>, <span class="number">22</span>, <span class="number">61</span>, <span class="number">79</span>, -<span class="number">121</span>, -<span class="number">71</span>, -<span class="number">67</span>, -<span class="number">36</span>, -<span class="number">121</span>, <span class="number">61</span>, <span class="number">61</span>, <span class="number">113</span>, -<span class="number">98</span>, <span class="number">48</span>, -<span class="number">67</span>, -<span class="number">13</span>, <span class="number">65</span>, -<span class="number">47</span>, -<span class="number">67</span>, -<span class="number">48</span>, <span class="number">123</span>, -<span class="number">1</span>, -<span class="number">67</span>, -<span class="number">127</span>, -<span class="number">6</span>, <span class="number">60</span>, -<span class="number">67</span>, <span class="number">44</span>, <span class="number">126</span>, -<span class="number">50</span>, -<span class="number">71</span>, <span class="number">18</span>, -<span class="number">78</span>, <span class="number">10</span>, -<span class="number">67</span>, <span class="number">98</span>, -<span class="number">51</span>, -<span class="number">116</span>, -<span class="number">69</span>, <span class="number">90</span>, -<span class="number">92</span>, <span class="number">50</span>, <span class="number">61</span>, -<span class="number">30</span>, <span class="number">115</span>, <span class="number">41</span>, -<span class="number">67</span>, -<span class="number">99</span>, -<span class="number">26</span>, -<span class="number">104</span>, <span class="number">61</span>, <span class="number">48</span>, -<span class="number">82</span>, -<span class="number">18</span>, <span class="number">61</span>, <span class="number">48</span>, -<span class="number">104</span>, <span class="number">39</span>, -<span class="number">66</span>, -<span class="number">63</span>, <span class="number">35</span>, <span class="number">13</span>, -<span class="number">69</span>, <span class="number">67</span>, <span class="number">60</span>, -<span class="number">105</span>, -<span class="number">67</span>, -<span class="number">85</span>, -<span class="number">38</span>, <span class="number">15</span>, <span class="number">61</span>, -<span class="number">73</span>, <span class="number">4</span>, -<span class="number">101</span>, <span class="number">60</span>, -<span class="number">124</span>, <span class="number">16</span>, -<span class="number">43</span>, <span class="number">61</span>, -<span class="number">37</span>, <span class="number">114</span>, <span class="number">77</span>, <span class="number">60</span>, -<span class="number">106</span>, <span class="number">9</span>, -<span class="number">120</span>, <span class="number">61</span>, -<span class="number">113</span>, -<span class="number">26</span>, <span class="number">78</span>, -<span class="number">69</span>, -<span class="number">127</span>, <span class="number">26</span>, <span class="number">32</span>, <span class="number">62</span>, -<span class="number">62</span>, -<span class="number">77</span>, -<span class="number">80</span>, <span class="number">61</span>, -<span class="number">115</span>, -<span class="number">86</span>, <span class="number">105</span>, <span class="number">61</span>, -<span class="number">61</span>, <span class="number">22</span>, <span class="number">38</span>, <span class="number">61</span>, <span class="number">62</span>, -<span class="number">19</span>, -<span class="number">48</span>, -<span class="number">68</span>, -<span class="number">55</span>, <span class="number">36</span>, <span class="number">58</span>, -<span class="number">67</span>, <span class="number">21</span>, -<span class="number">77</span>, -<span class="number">70</span>, <span class="number">60</span>, <span class="number">73</span>, -<span class="number">41</span>, -<span class="number">101</span>, <span class="number">59</span>, -<span class="number">34</span>, <span class="number">14</span>, -<span class="number">110</span>, -<span class="number">67</span>, -<span class="number">94</span>, <span class="number">124</span>, <span class="number">46</span>, <span class="number">61</span>, <span class="number">111</span>, -<span class="number">12</span>, <span class="number">11</span>, <span class="number">61</span>, <span class="number">82</span>, <span class="number">99</span>, -<span class="number">10</span>, <span class="number">58</span>, -<span class="number">103</span>, -<span class="number">84</span>, -<span class="number">99</span>, <span class="number">61</span>, <span class="number">76</span>, -<span class="number">70</span>, -<span class="number">94</span>, <span class="number">61</span>, -<span class="number">18</span>, -<span class="number">79</span>, <span class="number">100</span>, <span class="number">59</span>, -<span class="number">46</span>, -<span class="number">22</span>, <span class="number">59</span>, <span class="number">61</span>, -<span class="number">23</span>, <span class="number">26</span>, -<span class="number">42</span>, -<span class="number">67</span>, <span class="number">112</span>, <span class="number">102</span>, <span class="number">78</span>, <span class="number">60</span>, -<span class="number">50</span>, -<span class="number">79</span>, <span class="number">76</span>, -<span class="number">67</span>, -<span class="number">117</span>, <span class="number">70</span>, -<span class="number">27</span>, -<span class="number">70</span>, <span class="number">100</span>, <span class="number">35</span>, -<span class="number">37</span>, -<span class="number">67</span>, -<span class="number">81</span>, -<span class="number">98</span>, <span class="number">42</span>, -<span class="number">67</span>, <span class="number">100</span>, <span class="number">18</span>, <span class="number">127</span>, -<span class="number">67</span>, <span class="number">89</span>, -<span class="number">28</span>, -<span class="number">48</span>, <span class="number">61</span>, -<span class="number">60</span>, <span class="number">72</span>, -<span class="number">50</span>, <span class="number">61</span>, <span class="number">16</span>, <span class="number">22</span>, <span class="number">62</span>, <span class="number">61</span>, <span class="number">116</span>, <span class="number">104</span>, <span class="number">75</span>, <span class="number">61</span>, <span class="number">23</span>, <span class="number">75</span>, <span class="number">18</span>, <span class="number">61</span>, <span class="number">18</span>, -<span class="number">17</span>, -<span class="number">118</span>, -<span class="number">68</span>, <span class="number">92</span>, <span class="number">47</span>, <span class="number">70</span>, -<span class="number">67</span>, <span class="number">93</span>, -<span class="number">97</span>, <span class="number">40</span>, -<span class="number">67</span>, <span class="number">31</span>, <span class="number">50</span>, <span class="number">94</span>, -<span class="number">68</span>, -<span class="number">96</span>, -<span class="number">6</span>, -<span class="number">106</span>, -<span class="number">67</span>, -<span class="number">39</span>, <span class="number">90</span>, <span class="number">85</span>, <span class="number">59</span>, <span class="number">61</span>, <span class="number">116</span>, <span class="number">94</span>, <span class="number">61</span>, -<span class="number">114</span>, <span class="number">75</span>, <span class="number">35</span>, <span class="number">61</span>, <span class="number">116</span>, <span class="number">30</span>, <span class="number">123</span>, -<span class="number">67</span>, -<span class="number">99</span>, <span class="number">60</span>, -<span class="number">64</span>, -<span class="number">68</span>, <span class="number">16</span>, <span class="number">120</span>, -<span class="number">80</span>, -<span class="number">67</span>, <span class="number">105</span>, -<span class="number">9</span>, <span class="number">25</span>, -<span class="number">66</span>, <span class="number">62</span>, <span class="number">49</span>, <span class="number">3</span>, -<span class="number">66</span>, -<span class="number">52</span>, <span class="number">11</span>, <span class="number">17</span>, <span class="number">59</span>, <span class="number">63</span>, <span class="number">87</span>, <span class="number">76</span>, -<span class="number">68</span>, <span class="number">34</span>, -<span class="number">102</span>, <span class="number">51</span>, -<span class="number">68</span>, <span class="number">20</span>, -<span class="number">91</span>, -<span class="number">97</span>, -<span class="number">67</span>, <span class="number">103</span>, <span class="number">18</span>, -<span class="number">85</span>, <span class="number">60</span>, <span class="number">94</span>, -<span class="number">8</span>, <span class="number">104</span>, <span class="number">58</span>, <span class="number">28</span>, <span class="number">75</span>, -<span class="number">76</span>, <span class="number">61</span>, -<span class="number">41</span>, -<span class="number">121</span>, -<span class="number">29</span>, -<span class="number">67</span>, <span class="number">46</span>, <span class="number">27</span>, -<span class="number">3</span>, <span class="number">60</span>, <span class="number">122</span>, -<span class="number">95</span>, -<span class="number">63</span>, -<span class="number">67</span>, <span class="number">5</span>, <span class="number">39</span>, <span class="number">89</span>, <span class="number">61</span>, -<span class="number">18</span>, <span class="number">72</span>, -<span class="number">18</span>, <span class="number">58</span>, <span class="number">124</span>, -<span class="number">51</span>, -<span class="number">125</span>, <span class="number">58</span>, -<span class="number">3</span>, -<span class="number">47</span>, <span class="number">27</span>, -<span class="number">68</span>, <span class="number">49</span>, <span class="number">94</span>, <span class="number">99</span>, <span class="number">61</span>, <span class="number">100</span>, <span class="number">54</span>, -<span class="number">34</span>, <span class="number">61</span>, <span class="number">114</span>, -<span class="number">106</span>, <span class="number">62</span>, <span class="number">61</span>, <span class="number">15</span>, -<span class="number">34</span>, <span class="number">57</span>, <span class="number">59</span>, -<span class="number">101</span>, -<span class="number">8</span>, <span class="number">76</span>, <span class="number">60</span>, <span class="number">20</span>, -<span class="number">70</span>, -<span class="number">55</span>, <span class="number">59</span>, <span class="number">124</span>, <span class="number">42</span>, <span class="number">58</span>, -<span class="number">67</span>, <span class="number">47</span>, <span class="number">38</span>, <span class="number">2</span>, <span class="number">61</span>, -<span class="number">37</span>, -<span class="number">24</span>, -<span class="number">67</span>, <span class="number">61</span>, <span class="number">69</span>, -<span class="number">35</span>, -<span class="number">128</span>, <span class="number">61</span>, <span class="number">54</span>, <span class="number">17</span>, <span class="number">115</span>, -<span class="number">68</span>, -<span class="number">100</span>, <span class="number">110</span>, -<span class="number">93</span>, <span class="number">60</span>, -<span class="number">57</span>, <span class="number">116</span>, -<span class="number">12</span>, -<span class="number">67</span>, <span class="number">34</span>, <span class="number">48</span>, <span class="number">70</span>, <span class="number">61</span>, -<span class="number">78</span>, -<span class="number">16</span>, <span class="number">21</span>, -<span class="number">68</span>, <span class="number">50</span>, -<span class="number">19</span>, -<span class="number">15</span>, <span class="number">60</span>, -<span class="number">28</span>, <span class="number">3</span>, <span class="number">117</span>, -<span class="number">67</span>, -<span class="number">76</span>, -<span class="number">124</span>, -<span class="number">73</span>, <span class="number">60</span>, -<span class="number">2</span>, <span class="number">46</span>, -<span class="number">82</span>, -<span class="number">69</span>, <span class="number">55</span>, -<span class="number">105</span>, <span class="number">126</span>, -<span class="number">67</span>, -<span class="number">65</span>, -<span class="number">120</span>, -<span class="number">82</span>, <span class="number">61</span>, -<span class="number">42</span>, <span class="number">108</span>, <span class="number">107</span>, -<span class="number">68</span>, -<span class="number">101</span>, -<span class="number">48</span>, -<span class="number">111</span>, -<span class="number">67</span>, -<span class="number">95</span>, -<span class="number">22</span>, <span class="number">114</span>, -<span class="number">67</span>, -<span class="number">31</span>, <span class="number">127</span>, <span class="number">97</span>, <span class="number">61</span>, <span class="number">93</span>, -<span class="number">122</span>, -<span class="number">87</span>, -<span class="number">67</span>, <span class="number">76</span>, -<span class="number">5</span>, -<span class="number">76</span>, -<span class="number">68</span>, <span class="number">99</span>, <span class="number">12</span>, <span class="number">113</span>, -<span class="number">68</span>, -<span class="number">2</span>, -<span class="number">5</span>, <span class="number">79</span>, -<span class="number">68</span>, <span class="number">79</span>, -<span class="number">17</span>, <span class="number">8</span>, -<span class="number">67</span>, <span class="number">3</span>, <span class="number">89</span>, -<span class="number">44</span>, -<span class="number">68</span>, <span class="number">50</span>, -<span class="number">120</span>, -<span class="number">112</span>, <span class="number">61</span>, -<span class="number">115</span>, <span class="number">20</span>, <span class="number">11</span>, <span class="number">60</span>, <span class="number">124</span>, -<span class="number">118</span>, <span class="number">47</span>, <span class="number">61</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">105</span>, -<span class="number">67</span>, <span class="number">122</span>, -<span class="number">15</span>, <span class="number">4</span>, <span class="number">62</span>, <span class="number">67</span>, <span class="number">64</span>, -<span class="number">97</span>, <span class="number">60</span>, -<span class="number">44</span>, <span class="number">85</span>, -<span class="number">79</span>, <span class="number">60</span>, <span class="number">105</span>, <span class="number">40</span>, <span class="number">100</span>, <span class="number">61</span>, <span class="number">122</span>, -<span class="number">95</span>, <span class="number">118</span>, -<span class="number">67</span>, <span class="number">12</span>, -<span class="number">99</span>, -<span class="number">83</span>, -<span class="number">67</span>, -<span class="number">96</span>, <span class="number">94</span>, -<span class="number">115</span>, <span class="number">60</span>, -<span class="number">75</span>, -<span class="number">39</span>, -<span class="number">109</span>, <span class="number">61</span>, -<span class="number">7</span>, <span class="number">79</span>, -<span class="number">29</span>, <span class="number">61</span>, -<span class="number">125</span>, -<span class="number">79</span>, -<span class="number">126</span>, <span class="number">61</span>, -<span class="number">126</span>, -<span class="number">77</span>, <span class="number">102</span>, -<span class="number">67</span>, -<span class="number">1</span>, -<span class="number">7</span>, -<span class="number">76</span>, -<span class="number">67</span>, -<span class="number">66</span>, -<span class="number">30</span>, <span class="number">44</span>, -<span class="number">67</span>, <span class="number">4</span>, -<span class="number">91</span>, -<span class="number">45</span>, <span class="number">61</span>, -<span class="number">66</span>, -<span class="number">36</span>, <span class="number">59</span>, -<span class="number">67</span>, -<span class="number">31</span>, <span class="number">120</span>, <span class="number">47</span>, -<span class="number">67</span>, <span class="number">80</span>, <span class="number">63</span>, -<span class="number">116</span>, -<span class="number">67</span>, <span class="number">108</span>, -<span class="number">74</span>, -<span class="number">38</span>, -<span class="number">67</span>, -<span class="number">127</span>, <span class="number">51</span>, -<span class="number">13</span>, <span class="number">61</span>, <span class="number">109</span>, <span class="number">111</span>, -<span class="number">111</span>, <span class="number">61</span>, -<span class="number">87</span>, <span class="number">106</span>, -<span class="number">116</span>, -<span class="number">67</span>, -<span class="number">111</span>, -<span class="number">91</span>, <span class="number">91</span>, -<span class="number">67</span>, -<span class="number">23</span>, <span class="number">120</span>, -<span class="number">118</span>, -<span class="number">67</span>, -<span class="number">48</span>, -<span class="number">34</span>, <span class="number">114</span>, <span class="number">60</span>, -<span class="number">99</span>, -<span class="number">124</span>, <span class="number">25</span>, <span class="number">59</span>, <span class="number">94</span>, <span class="number">44</span>, -<span class="number">77</span>, -<span class="number">68</span>, <span class="number">17</span>, <span class="number">12</span>, -<span class="number">77</span>, -<span class="number">68</span>, <span class="number">27</span>, <span class="number">108</span>, <span class="number">65</span>, <span class="number">61</span>, <span class="number">85</span>, <span class="number">12</span>, <span class="number">40</span>, <span class="number">60</span>, -<span class="number">79</span>, -<span class="number">63</span>, <span class="number">4</span>, <span class="number">61</span>, <span class="number">65</span>, -<span class="number">79</span>, -<span class="number">55</span>, -<span class="number">67</span>, -<span class="number">79</span>, -<span class="number">23</span>, -<span class="number">46</span>, <span class="number">61</span>, <span class="number">1</span>, -<span class="number">122</span>, -<span class="number">106</span>, -<span class="number">68</span>, -<span class="number">84</span>, <span class="number">40</span>, -<span class="number">44</span>, -<span class="number">67</span>, <span class="number">83</span>, -<span class="number">24</span>, <span class="number">99</span>, -<span class="number">67</span>, <span class="number">20</span>, <span class="number">37</span>, -<span class="number">81</span>, <span class="number">61</span>, -<span class="number">59</span>, <span class="number">84</span>, -<span class="number">67</span>, -<span class="number">70</span>, -<span class="number">86</span>, <span class="number">74</span>, -<span class="number">1</span>, <span class="number">60</span>, -<span class="number">50</span>, -<span class="number">118</span>, <span class="number">11</span>, -<span class="number">68</span>, -<span class="number">31</span>, -<span class="number">16</span>, -<span class="number">39</span>, -<span class="number">68</span>, -<span class="number">92</span>, -<span class="number">64</span>, -<span class="number">92</span>, -<span class="number">68</span>, -<span class="number">125</span>, <span class="number">12</span>, -<span class="number">128</span>, -<span class="number">67</span>, -<span class="number">125</span>, -<span class="number">72</span>, -<span class="number">17</span>, <span class="number">60</span>, -<span class="number">118</span>, <span class="number">41</span>, <span class="number">49</span>, -<span class="number">67</span>, <span class="number">18</span>, <span class="number">78</span>, <span class="number">121</span>, <span class="number">61</span>, <span class="number">95</span>, -<span class="number">31</span>, -<span class="number">48</span>, <span class="number">60</span>, <span class="number">63</span>, <span class="number">113</span>, -<span class="number">108</span>, -<span class="number">68</span>, <span class="number">126</span>, -<span class="number">13</span>, <span class="number">99</span>, <span class="number">61</span>, <span class="number">35</span>, <span class="number">21</span>, <span class="number">72</span>, <span class="number">58</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>继续分析其他的图片的feature来获得这个数据的意义</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获得第二张图片的人脸数据</span></span><br><span class="line">        String fileName2 = <span class="string">&quot;bbb.jpg&quot;</span>;</span><br><span class="line">        File file2 = <span class="keyword">new</span> File(fileUrl + fileName2);</span><br><span class="line"></span><br><span class="line">        ImageInfo imageInfo1 = getRGBData(file2);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;FaceInfo&gt; faceInfos1 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        faceEngine.detectFaces(imageInfo1.getImageData(), imageInfo.getWidth(),imageInfo1.getHeight(),imageInfo1.getImageFormat(),faceInfos1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (FaceInfo faceInfo : faceInfos1) &#123;</span><br><span class="line">            System.out.println(faceInfo);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        FaceFeature faceFeature1 = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">        faceEngine.extractFaceFeature(imageInfo1.getImageData(), imageInfo.getWidth(),imageInfo1.getHeight(),imageInfo1.getImageFormat(),faceInfos1.get(<span class="number">0</span>),faceFeature1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出第二正图片的feature</span></span><br><span class="line">        System.out.println(Arrays.toString(faceFeature1.getFeatureData()));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[<span class="number">0</span>, -<span class="number">128</span>, -<span class="number">6</span>, <span class="number">68</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">96</span>, <span class="number">65</span>, <span class="number">11</span>, -<span class="number">80</span>, -<span class="number">119</span>, <span class="number">61</span>, -<span class="number">75</span>, -<span class="number">91</span>, <span class="number">56</span>, -<span class="number">69</span>, <span class="number">6</span>, <span class="number">119</span>, <span class="number">23</span>, <span class="number">62</span>, -<span class="number">14</span>, <span class="number">33</span>, -<span class="number">43</span>, -<span class="number">67</span>, -<span class="number">35</span>, -<span class="number">127</span>, <span class="number">45</span>, -<span class="number">68</span>, -<span class="number">104</span>, -<span class="number">2</span>, <span class="number">82</span>, -<span class="number">67</span>, -<span class="number">68</span>, -<span class="number">121</span>, <span class="number">91</span>, -<span class="number">68</span>, <span class="number">102</span>, <span class="number">92</span>, -<span class="number">93</span>, -<span class="number">67</span>, <span class="number">52</span>, <span class="number">9</span>, -<span class="number">123</span>, -<span class="number">67</span>, -<span class="number">125</span>, -<span class="number">37</span>, <span class="number">95</span>, <span class="number">61</span>, -<span class="number">6</span>, <span class="number">103</span>, <span class="number">40</span>, -<span class="number">67</span>, <span class="number">33</span>, <span class="number">115</span>, <span class="number">50</span>, -<span class="number">68</span>, -<span class="number">37</span>, <span class="number">28</span>, -<span class="number">34</span>, -<span class="number">67</span>, -<span class="number">61</span>, <span class="number">100</span>, -<span class="number">76</span>, <span class="number">61</span>, -<span class="number">40</span>, -<span class="number">54</span>, -<span class="number">85</span>, -<span class="number">67</span>, -<span class="number">104</span>, <span class="number">107</span>, -<span class="number">50</span>, <span class="number">61</span>, <span class="number">46</span>, -<span class="number">52</span>, -<span class="number">116</span>, <span class="number">61</span>, -<span class="number">21</span>, -<span class="number">53</span>, -<span class="number">78</span>, -<span class="number">67</span>, <span class="number">26</span>, <span class="number">19</span>, -<span class="number">34</span>, <span class="number">61</span>, -<span class="number">104</span>, -<span class="number">53</span>, -<span class="number">96</span>, <span class="number">61</span>, -<span class="number">82</span>, -<span class="number">64</span>, -<span class="number">95</span>, <span class="number">60</span>, -<span class="number">4</span>, -<span class="number">55</span>, -<span class="number">67</span>, -<span class="number">67</span>, <span class="number">120</span>, -<span class="number">89</span>, <span class="number">106</span>, -<span class="number">67</span>, -<span class="number">37</span>, <span class="number">72</span>, -<span class="number">17</span>, -<span class="number">68</span>, -<span class="number">16</span>, -<span class="number">19</span>, -<span class="number">55</span>, <span class="number">60</span>, <span class="number">30</span>, <span class="number">123</span>, -<span class="number">19</span>, <span class="number">61</span>, <span class="number">119</span>, -<span class="number">28</span>, -<span class="number">63</span>, -<span class="number">67</span>, <span class="number">53</span>, -<span class="number">90</span>, -<span class="number">72</span>, -<span class="number">67</span>, -<span class="number">2</span>, -<span class="number">32</span>, -<span class="number">6</span>, <span class="number">60</span>, <span class="number">96</span>, -<span class="number">69</span>, -<span class="number">67</span>, <span class="number">61</span>, -<span class="number">61</span>, -<span class="number">64</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">9</span>, -<span class="number">123</span>, -<span class="number">117</span>, -<span class="number">68</span>, <span class="number">75</span>, -<span class="number">106</span>, <span class="number">41</span>, -<span class="number">67</span>, <span class="number">70</span>, <span class="number">107</span>, -<span class="number">21</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">116</span>, <span class="number">37</span>, -<span class="number">67</span>, -<span class="number">3</span>, -<span class="number">124</span>, <span class="number">6</span>, -<span class="number">70</span>, -<span class="number">8</span>, <span class="number">66</span>, -<span class="number">20</span>, -<span class="number">69</span>, -<span class="number">39</span>, <span class="number">75</span>, <span class="number">108</span>, -<span class="number">68</span>, -<span class="number">27</span>, <span class="number">103</span>, -<span class="number">72</span>, -<span class="number">67</span>, -<span class="number">17</span>, <span class="number">73</span>, <span class="number">73</span>, -<span class="number">67</span>, <span class="number">37</span>, <span class="number">114</span>, <span class="number">64</span>, <span class="number">61</span>, <span class="number">26</span>, <span class="number">25</span>, -<span class="number">80</span>, -<span class="number">67</span>, -<span class="number">90</span>, -<span class="number">71</span>, <span class="number">97</span>, <span class="number">61</span>, -<span class="number">28</span>, -<span class="number">77</span>, -<span class="number">20</span>, <span class="number">61</span>, <span class="number">66</span>, -<span class="number">111</span>, -<span class="number">59</span>, -<span class="number">70</span>, -<span class="number">98</span>, -<span class="number">6</span>, -<span class="number">88</span>, -<span class="number">68</span>, <span class="number">119</span>, -<span class="number">42</span>, -<span class="number">37</span>, <span class="number">60</span>, <span class="number">37</span>, -<span class="number">92</span>, -<span class="number">90</span>, <span class="number">60</span>, -<span class="number">50</span>, -<span class="number">94</span>, <span class="number">39</span>, -<span class="number">66</span>, <span class="number">0</span>, -<span class="number">69</span>, -<span class="number">107</span>, -<span class="number">68</span>, -<span class="number">13</span>, <span class="number">64</span>, -<span class="number">42</span>, <span class="number">61</span>, <span class="number">60</span>, -<span class="number">103</span>, -<span class="number">121</span>, <span class="number">61</span>, <span class="number">106</span>, <span class="number">118</span>, -<span class="number">1</span>, <span class="number">61</span>, <span class="number">60</span>, -<span class="number">82</span>, -<span class="number">127</span>, -<span class="number">67</span>, -<span class="number">69</span>, <span class="number">21</span>, -<span class="number">84</span>, -<span class="number">68</span>, <span class="number">14</span>, -<span class="number">2</span>, <span class="number">18</span>, <span class="number">61</span>, <span class="number">22</span>, -<span class="number">36</span>, <span class="number">0</span>, -<span class="number">68</span>, <span class="number">71</span>, -<span class="number">33</span>, -<span class="number">62</span>, <span class="number">61</span>, <span class="number">123</span>, <span class="number">21</span>, -<span class="number">55</span>, <span class="number">60</span>, -<span class="number">126</span>, -<span class="number">60</span>, <span class="number">41</span>, <span class="number">61</span>, -<span class="number">124</span>, -<span class="number">79</span>, -<span class="number">60</span>, -<span class="number">71</span>, <span class="number">65</span>, <span class="number">85</span>, -<span class="number">93</span>, -<span class="number">67</span>, <span class="number">48</span>, <span class="number">105</span>, -<span class="number">101</span>, <span class="number">59</span>, -<span class="number">116</span>, <span class="number">118</span>, -<span class="number">42</span>, -<span class="number">68</span>, -<span class="number">39</span>, -<span class="number">54</span>, -<span class="number">84</span>, <span class="number">59</span>, -<span class="number">28</span>, <span class="number">33</span>, <span class="number">73</span>, <span class="number">61</span>, <span class="number">79</span>, -<span class="number">71</span>, -<span class="number">9</span>, -<span class="number">67</span>, <span class="number">6</span>, -<span class="number">66</span>, <span class="number">65</span>, <span class="number">61</span>, -<span class="number">79</span>, -<span class="number">66</span>, -<span class="number">8</span>, -<span class="number">67</span>, -<span class="number">99</span>, -<span class="number">42</span>, -<span class="number">123</span>, <span class="number">61</span>, <span class="number">27</span>, <span class="number">61</span>, <span class="number">50</span>, -<span class="number">67</span>, -<span class="number">118</span>, -<span class="number">89</span>, <span class="number">41</span>, <span class="number">61</span>, -<span class="number">90</span>, <span class="number">76</span>, -<span class="number">2</span>, <span class="number">61</span>, <span class="number">78</span>, <span class="number">107</span>, <span class="number">35</span>, -<span class="number">66</span>, <span class="number">57</span>, <span class="number">80</span>, -<span class="number">107</span>, <span class="number">61</span>, -<span class="number">124</span>, <span class="number">77</span>, <span class="number">30</span>, -<span class="number">67</span>, <span class="number">82</span>, -<span class="number">25</span>, <span class="number">123</span>, -<span class="number">67</span>, <span class="number">1</span>, -<span class="number">85</span>, -<span class="number">105</span>, -<span class="number">67</span>, <span class="number">66</span>, -<span class="number">29</span>, <span class="number">54</span>, <span class="number">60</span>, -<span class="number">39</span>, <span class="number">77</span>, -<span class="number">65</span>, -<span class="number">69</span>, <span class="number">64</span>, -<span class="number">89</span>, -<span class="number">29</span>, -<span class="number">68</span>, <span class="number">78</span>, <span class="number">77</span>, <span class="number">56</span>, -<span class="number">67</span>, -<span class="number">8</span>, -<span class="number">82</span>, -<span class="number">98</span>, <span class="number">60</span>, <span class="number">83</span>, <span class="number">51</span>, <span class="number">115</span>, <span class="number">61</span>, <span class="number">37</span>, -<span class="number">62</span>, <span class="number">27</span>, -<span class="number">67</span>, <span class="number">70</span>, -<span class="number">89</span>, -<span class="number">122</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">14</span>, -<span class="number">43</span>, -<span class="number">68</span>, -<span class="number">7</span>, -<span class="number">71</span>, <span class="number">15</span>, <span class="number">62</span>, <span class="number">5</span>, -<span class="number">26</span>, <span class="number">53</span>, <span class="number">60</span>, <span class="number">74</span>, -<span class="number">19</span>, -<span class="number">58</span>, -<span class="number">67</span>, <span class="number">52</span>, -<span class="number">22</span>, <span class="number">2</span>, <span class="number">61</span>, <span class="number">89</span>, -<span class="number">18</span>, -<span class="number">36</span>, -<span class="number">69</span>, -<span class="number">77</span>, <span class="number">86</span>, <span class="number">82</span>, -<span class="number">67</span>, -<span class="number">36</span>, -<span class="number">81</span>, <span class="number">52</span>, <span class="number">60</span>, <span class="number">49</span>, -<span class="number">115</span>, <span class="number">124</span>, <span class="number">61</span>, -<span class="number">30</span>, <span class="number">116</span>, -<span class="number">62</span>, -<span class="number">67</span>, <span class="number">29</span>, <span class="number">116</span>, <span class="number">25</span>, <span class="number">61</span>, -<span class="number">20</span>, -<span class="number">47</span>, <span class="number">43</span>, -<span class="number">67</span>, -<span class="number">10</span>, -<span class="number">120</span>, <span class="number">3</span>, -<span class="number">66</span>, -<span class="number">38</span>, -<span class="number">28</span>, <span class="number">0</span>, -<span class="number">66</span>, <span class="number">67</span>, <span class="number">78</span>, <span class="number">42</span>, -<span class="number">67</span>, -<span class="number">75</span>, <span class="number">83</span>, -<span class="number">32</span>, -<span class="number">68</span>, -<span class="number">102</span>, <span class="number">87</span>, -<span class="number">97</span>, -<span class="number">67</span>, -<span class="number">112</span>, -<span class="number">81</span>, <span class="number">80</span>, <span class="number">59</span>, -<span class="number">76</span>, -<span class="number">39</span>, <span class="number">94</span>, <span class="number">61</span>, <span class="number">66</span>, <span class="number">106</span>, <span class="number">16</span>, -<span class="number">67</span>, <span class="number">1</span>, -<span class="number">104</span>, <span class="number">37</span>, <span class="number">60</span>, -<span class="number">105</span>, <span class="number">84</span>, -<span class="number">36</span>, <span class="number">61</span>, -<span class="number">78</span>, -<span class="number">76</span>, -<span class="number">37</span>, -<span class="number">67</span>, <span class="number">60</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">58</span>, -<span class="number">82</span>, -<span class="number">76</span>, -<span class="number">112</span>, -<span class="number">67</span>, -<span class="number">105</span>, -<span class="number">18</span>, <span class="number">25</span>, <span class="number">61</span>, -<span class="number">18</span>, <span class="number">94</span>, -<span class="number">120</span>, -<span class="number">68</span>, <span class="number">84</span>, <span class="number">35</span>, -<span class="number">69</span>, <span class="number">61</span>, <span class="number">15</span>, <span class="number">36</span>, -<span class="number">128</span>, -<span class="number">69</span>, <span class="number">103</span>, <span class="number">122</span>, <span class="number">54</span>, <span class="number">60</span>, -<span class="number">98</span>, <span class="number">30</span>, -<span class="number">123</span>, <span class="number">61</span>, <span class="number">34</span>, <span class="number">125</span>, <span class="number">13</span>, <span class="number">62</span>, -<span class="number">2</span>, -<span class="number">60</span>, -<span class="number">123</span>, <span class="number">61</span>, <span class="number">6</span>, <span class="number">49</span>, -<span class="number">121</span>, <span class="number">61</span>, -<span class="number">93</span>, <span class="number">25</span>, -<span class="number">71</span>, <span class="number">60</span>, <span class="number">31</span>, -<span class="number">124</span>, <span class="number">109</span>, -<span class="number">67</span>, -<span class="number">24</span>, <span class="number">97</span>, <span class="number">75</span>, -<span class="number">67</span>, <span class="number">26</span>, <span class="number">40</span>, -<span class="number">117</span>, <span class="number">61</span>, <span class="number">102</span>, <span class="number">36</span>, -<span class="number">107</span>, <span class="number">61</span>, -<span class="number">39</span>, <span class="number">87</span>, <span class="number">100</span>, -<span class="number">67</span>, <span class="number">64</span>, -<span class="number">64</span>, <span class="number">18</span>, <span class="number">61</span>, -<span class="number">87</span>, <span class="number">110</span>, -<span class="number">126</span>, <span class="number">60</span>, -<span class="number">62</span>, -<span class="number">24</span>, <span class="number">15</span>, -<span class="number">67</span>, -<span class="number">122</span>, <span class="number">106</span>, -<span class="number">127</span>, <span class="number">61</span>, <span class="number">35</span>, -<span class="number">4</span>, -<span class="number">51</span>, <span class="number">61</span>, -<span class="number">40</span>, -<span class="number">81</span>, <span class="number">55</span>, -<span class="number">67</span>, -<span class="number">111</span>, -<span class="number">5</span>, <span class="number">43</span>, -<span class="number">68</span>, <span class="number">65</span>, -<span class="number">51</span>, <span class="number">2</span>, -<span class="number">66</span>, -<span class="number">13</span>, <span class="number">60</span>, <span class="number">45</span>, <span class="number">61</span>, -<span class="number">108</span>, -<span class="number">109</span>, -<span class="number">6</span>, -<span class="number">68</span>, -<span class="number">73</span>, <span class="number">53</span>, <span class="number">21</span>, -<span class="number">67</span>, -<span class="number">68</span>, <span class="number">36</span>, -<span class="number">58</span>, -<span class="number">67</span>, -<span class="number">112</span>, -<span class="number">83</span>, <span class="number">1</span>, <span class="number">61</span>, -<span class="number">98</span>, <span class="number">45</span>, -<span class="number">5</span>, -<span class="number">67</span>, -<span class="number">61</span>, -<span class="number">59</span>, -<span class="number">63</span>, <span class="number">61</span>, <span class="number">82</span>, -<span class="number">107</span>, <span class="number">27</span>, <span class="number">61</span>, -<span class="number">20</span>, <span class="number">2</span>, -<span class="number">109</span>, <span class="number">61</span>, -<span class="number">37</span>, <span class="number">56</span>, <span class="number">26</span>, -<span class="number">67</span>, <span class="number">106</span>, -<span class="number">119</span>, -<span class="number">33</span>, -<span class="number">68</span>, -<span class="number">7</span>, <span class="number">75</span>, -<span class="number">14</span>, <span class="number">58</span>, <span class="number">64</span>, -<span class="number">76</span>, <span class="number">3</span>, -<span class="number">67</span>, <span class="number">41</span>, -<span class="number">35</span>, <span class="number">38</span>, -<span class="number">67</span>, -<span class="number">51</span>, -<span class="number">24</span>, <span class="number">60</span>, -<span class="number">68</span>, <span class="number">44</span>, <span class="number">67</span>, <span class="number">11</span>, -<span class="number">67</span>, <span class="number">87</span>, <span class="number">103</span>, <span class="number">108</span>, <span class="number">60</span>, -<span class="number">12</span>, -<span class="number">5</span>, <span class="number">84</span>, <span class="number">61</span>, -<span class="number">2</span>, <span class="number">70</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">54</span>, <span class="number">41</span>, -<span class="number">67</span>, -<span class="number">68</span>, <span class="number">16</span>, <span class="number">107</span>, -<span class="number">85</span>, -<span class="number">68</span>, -<span class="number">21</span>, -<span class="number">29</span>, -<span class="number">14</span>, -<span class="number">67</span>, <span class="number">61</span>, -<span class="number">107</span>, <span class="number">6</span>, -<span class="number">66</span>, -<span class="number">56</span>, -<span class="number">74</span>, -<span class="number">40</span>, -<span class="number">67</span>, -<span class="number">77</span>, <span class="number">30</span>, -<span class="number">17</span>, -<span class="number">68</span>, -<span class="number">61</span>, -<span class="number">56</span>, -<span class="number">85</span>, <span class="number">60</span>, -<span class="number">79</span>, <span class="number">81</span>, -<span class="number">120</span>, -<span class="number">67</span>, -<span class="number">5</span>, -<span class="number">45</span>, <span class="number">108</span>, -<span class="number">67</span>, <span class="number">102</span>, -<span class="number">54</span>, -<span class="number">71</span>, <span class="number">60</span>, <span class="number">82</span>, <span class="number">62</span>, <span class="number">4</span>, <span class="number">61</span>, -<span class="number">107</span>, -<span class="number">12</span>, <span class="number">80</span>, <span class="number">61</span>, <span class="number">93</span>, <span class="number">20</span>, -<span class="number">99</span>, -<span class="number">68</span>, -<span class="number">92</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">59</span>, -<span class="number">24</span>, -<span class="number">76</span>, <span class="number">5</span>, -<span class="number">67</span>, -<span class="number">29</span>, -<span class="number">13</span>, <span class="number">44</span>, <span class="number">61</span>, -<span class="number">95</span>, -<span class="number">93</span>, -<span class="number">44</span>, -<span class="number">68</span>, <span class="number">82</span>, -<span class="number">108</span>, <span class="number">25</span>, -<span class="number">67</span>, -<span class="number">101</span>, <span class="number">93</span>, <span class="number">53</span>, <span class="number">60</span>, -<span class="number">119</span>, -<span class="number">59</span>, <span class="number">11</span>, <span class="number">61</span>, <span class="number">11</span>, <span class="number">67</span>, -<span class="number">38</span>, <span class="number">60</span>, <span class="number">93</span>, -<span class="number">107</span>, -<span class="number">123</span>, <span class="number">60</span>, <span class="number">9</span>, -<span class="number">18</span>, <span class="number">29</span>, -<span class="number">67</span>, -<span class="number">24</span>, -<span class="number">33</span>, -<span class="number">84</span>, <span class="number">61</span>, <span class="number">5</span>, -<span class="number">47</span>, -<span class="number">116</span>, -<span class="number">67</span>, <span class="number">38</span>, -<span class="number">97</span>, -<span class="number">62</span>, -<span class="number">67</span>, <span class="number">101</span>, -<span class="number">26</span>, <span class="number">30</span>, <span class="number">60</span>, -<span class="number">79</span>, <span class="number">85</span>, -<span class="number">66</span>, <span class="number">61</span>, -<span class="number">64</span>, <span class="number">76</span>, -<span class="number">8</span>, <span class="number">60</span>, -<span class="number">110</span>, -<span class="number">112</span>, -<span class="number">126</span>, <span class="number">58</span>, <span class="number">32</span>, -<span class="number">5</span>, -<span class="number">1</span>, <span class="number">59</span>, -<span class="number">67</span>, -<span class="number">105</span>, <span class="number">15</span>, -<span class="number">66</span>, -<span class="number">126</span>, -<span class="number">23</span>, -<span class="number">77</span>, <span class="number">61</span>, -<span class="number">95</span>, -<span class="number">37</span>, <span class="number">33</span>, <span class="number">60</span>, -<span class="number">44</span>, -<span class="number">80</span>, -<span class="number">9</span>, -<span class="number">69</span>, -<span class="number">59</span>, -<span class="number">15</span>, -<span class="number">101</span>, -<span class="number">67</span>, <span class="number">52</span>, -<span class="number">27</span>, -<span class="number">82</span>, <span class="number">60</span>, <span class="number">94</span>, <span class="number">100</span>, <span class="number">6</span>, -<span class="number">68</span>, -<span class="number">58</span>, -<span class="number">79</span>, <span class="number">114</span>, -<span class="number">68</span>, -<span class="number">109</span>, <span class="number">16</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">94</span>, -<span class="number">106</span>, <span class="number">0</span>, -<span class="number">67</span>, <span class="number">86</span>, -<span class="number">42</span>, -<span class="number">22</span>, -<span class="number">68</span>, -<span class="number">96</span>, <span class="number">107</span>, -<span class="number">92</span>, -<span class="number">67</span>, -<span class="number">86</span>, <span class="number">121</span>, <span class="number">64</span>, <span class="number">61</span>, -<span class="number">120</span>, -<span class="number">75</span>, -<span class="number">63</span>, -<span class="number">67</span>, -<span class="number">105</span>, -<span class="number">92</span>, <span class="number">85</span>, -<span class="number">67</span>, <span class="number">93</span>, <span class="number">120</span>, <span class="number">34</span>, -<span class="number">67</span>, -<span class="number">54</span>, <span class="number">12</span>, -<span class="number">28</span>, -<span class="number">68</span>, <span class="number">23</span>, <span class="number">43</span>, <span class="number">16</span>, -<span class="number">67</span>, -<span class="number">120</span>, <span class="number">89</span>, <span class="number">47</span>, -<span class="number">68</span>, <span class="number">56</span>, <span class="number">126</span>, <span class="number">15</span>, <span class="number">62</span>, -<span class="number">18</span>, <span class="number">42</span>, -<span class="number">99</span>, <span class="number">60</span>, -<span class="number">11</span>, <span class="number">52</span>, <span class="number">28</span>, <span class="number">61</span>, -<span class="number">84</span>, <span class="number">123</span>, <span class="number">118</span>, -<span class="number">67</span>, <span class="number">117</span>, <span class="number">36</span>, <span class="number">16</span>, <span class="number">62</span>, -<span class="number">59</span>, <span class="number">28</span>, -<span class="number">61</span>, <span class="number">61</span>, -<span class="number">95</span>, <span class="number">122</span>, <span class="number">102</span>, <span class="number">61</span>, <span class="number">60</span>, <span class="number">38</span>, -<span class="number">99</span>, <span class="number">61</span>, -<span class="number">38</span>, -<span class="number">80</span>, <span class="number">32</span>, -<span class="number">68</span>, <span class="number">118</span>, <span class="number">69</span>, -<span class="number">65</span>, -<span class="number">67</span>, -<span class="number">7</span>, -<span class="number">33</span>, <span class="number">9</span>, <span class="number">61</span>, <span class="number">9</span>, <span class="number">36</span>, -<span class="number">13</span>, <span class="number">61</span>, -<span class="number">61</span>, -<span class="number">87</span>, -<span class="number">66</span>, <span class="number">61</span>, <span class="number">112</span>, <span class="number">114</span>, -<span class="number">124</span>, <span class="number">61</span>, <span class="number">29</span>, <span class="number">112</span>, -<span class="number">111</span>, -<span class="number">67</span>, -<span class="number">39</span>, <span class="number">91</span>, <span class="number">0</span>, -<span class="number">66</span>, <span class="number">121</span>, -<span class="number">38</span>, -<span class="number">55</span>, -<span class="number">67</span>, -<span class="number">63</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">61</span>, -<span class="number">51</span>, <span class="number">89</span>, -<span class="number">115</span>, -<span class="number">67</span>, <span class="number">28</span>, -<span class="number">74</span>, <span class="number">58</span>, <span class="number">60</span>, <span class="number">14</span>, <span class="number">122</span>, -<span class="number">105</span>, -<span class="number">67</span>, <span class="number">84</span>, <span class="number">108</span>, <span class="number">5</span>, -<span class="number">66</span>, -<span class="number">91</span>, <span class="number">35</span>, -<span class="number">41</span>, <span class="number">61</span>, <span class="number">100</span>, <span class="number">13</span>, -<span class="number">38</span>, <span class="number">61</span>, -<span class="number">33</span>, <span class="number">125</span>, <span class="number">85</span>, -<span class="number">68</span>, <span class="number">93</span>, <span class="number">25</span>, -<span class="number">111</span>, -<span class="number">67</span>, <span class="number">107</span>, -<span class="number">30</span>, <span class="number">37</span>, -<span class="number">67</span>, <span class="number">63</span>, -<span class="number">117</span>, <span class="number">57</span>, <span class="number">60</span>, -<span class="number">1</span>, <span class="number">68</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">115</span>, <span class="number">5</span>, -<span class="number">120</span>, <span class="number">61</span>, -<span class="number">26</span>, <span class="number">50</span>, -<span class="number">103</span>, <span class="number">60</span>, -<span class="number">60</span>, <span class="number">39</span>, -<span class="number">122</span>, <span class="number">61</span>, <span class="number">84</span>, <span class="number">117</span>, -<span class="number">71</span>, -<span class="number">69</span>, <span class="number">29</span>, <span class="number">98</span>, <span class="number">110</span>, <span class="number">61</span>, <span class="number">54</span>, <span class="number">108</span>, -<span class="number">67</span>, -<span class="number">67</span>, -<span class="number">115</span>, -<span class="number">125</span>, -<span class="number">111</span>, <span class="number">61</span>, -<span class="number">117</span>, <span class="number">91</span>, -<span class="number">99</span>, <span class="number">60</span>, <span class="number">68</span>, -<span class="number">79</span>, -<span class="number">112</span>, -<span class="number">67</span>, <span class="number">16</span>, -<span class="number">67</span>, -<span class="number">122</span>, -<span class="number">68</span>, <span class="number">62</span>, -<span class="number">26</span>, -<span class="number">8</span>, <span class="number">60</span>, -<span class="number">57</span>, <span class="number">79</span>, <span class="number">105</span>, -<span class="number">68</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">48</span>, -<span class="number">67</span>, <span class="number">41</span>, <span class="number">9</span>, <span class="number">123</span>, <span class="number">61</span>, -<span class="number">29</span>, -<span class="number">61</span>, -<span class="number">97</span>, -<span class="number">69</span>, -<span class="number">95</span>, <span class="number">84</span>, <span class="number">114</span>, -<span class="number">67</span>, -<span class="number">45</span>, <span class="number">11</span>, -<span class="number">6</span>, -<span class="number">68</span>, -<span class="number">90</span>, -<span class="number">107</span>, -<span class="number">90</span>, -<span class="number">68</span>, <span class="number">119</span>, -<span class="number">122</span>, <span class="number">82</span>, -<span class="number">67</span>, -<span class="number">58</span>, -<span class="number">71</span>, -<span class="number">122</span>, <span class="number">60</span>, -<span class="number">42</span>, -<span class="number">102</span>, <span class="number">120</span>, <span class="number">60</span>, <span class="number">56</span>, <span class="number">58</span>, <span class="number">105</span>, -<span class="number">67</span>, <span class="number">32</span>, -<span class="number">99</span>, -<span class="number">49</span>, <span class="number">61</span>, -<span class="number">67</span>, <span class="number">108</span>, <span class="number">56</span>, <span class="number">60</span>]</span><br></pre></td></tr></table></figure>

<p>不明白feature,但是这个东西可以存储</p>
<p><strong>程序源码</strong></p>
<p><a href="https://imgse.com/i/xWv9Xj"><img src="https://s1.ax1x.com/2022/10/26/xWv9Xj.png" alt="xWv9Xj.png"></a></p>
<p>源码说存储的是byte形式</p>
<p><strong>构造器张这个样子 只有一个byte[]数组</strong></p>
<p><a href="https://imgse.com/i/xWv9Xj"><img src="https://s1.ax1x.com/2022/10/26/xWv9Xj.png" alt="xWv9Xj.png"></a></p>
<p><a href="https://imgse.com/i/xWvUjH"><img src="https://s1.ax1x.com/2022/10/26/xWvUjH.png" alt="xWvUjH.png"></a></p>
<p><strong>也可以这样创建</strong></p>
<p><a href="https://imgse.com/i/xWvdud"><img src="https://s1.ax1x.com/2022/10/26/xWvdud.png" alt="xWvdud.png"></a></p>
<p><strong>因此我们可以知道</strong></p>
<p>我们可以获得一个对比图片的feature的人脸数据,一个byte[]，我们可以将它转为String类型存储在数据库中，</p>
<p>然后如果需要人脸对比，从数据库中得到这个String，转换成byte[]再整合成一个feature对象</p>
<h3 id="尝试一下这种方法"><a href="#尝试一下这种方法" class="headerlink" title="尝试一下这种方法"></a>尝试一下这种方法</h3><p><strong>存储数据 即将超长数据存入String 从超长String获得byte[]中的方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String data;</span><br><span class="line">  data = <span class="string">&quot;0, -128, -6, 68, 0, 0, -96, 65, 11, -80, -119, 61, -75, -91, 56, -69, 6, 119, 23, 62, -14, 33, -43, -67, -35, -127, 45, -68, -104, -2, 82, -67, -68, -121, 91, -68, 102, 92, -93, -67, 52, 9, -123, -67, -125, -37, 95, 61, -6, 103, 40, -67, 33, 115, 50, -68, -37, 28, -34, -67, -61, 100, -76, 61, -40, -54, -85, -67, -104, 107, -50, 61, 46, -52, -116, 61, -21, -53, -78, -67, 26, 19, -34, 61, -104, -53, -96, 61, -82, -64, -95, 60, -4, -55, -67, -67, 120, -89, 106, -67, -37, 72, -17, -68, -16, -19, -55, 60, 30, 123, -19, 61, 119, -28, -63, -67, 53, -90, -72, -67, -2, -32, -6, 60, 96, -69, -67, 61, -61, -64, 48, 61, -9, -123, -117, -68, 75, -106, 41, -67, 70, 107, -21, 60, 60, 116, 37, -67, -3, -124, 6, -70, -8, 66, -20, -69, -39, 75, 108, -68, -27, 103, -72, -67, -17, 73, 73, -67, 37, 114, 64, 61, 26, 25, -80, -67, -90, -71, 97, 61, -28, -77, -20, 61, 66, -111, -59, -70, -98, -6, -88, -68, 119, -42, -37, 60, 37, -92, -90, 60, -50, -94, 39, -66, 0, -69, -107, -68, -13, 64, -42, 61, 60, -103, -121, 61, 106, 118, -1, 61, 60, -82, -127, -67, -69, 21, -84, -68, 14, -2, 18, 61, 22, -36, 0, -68, 71, -33, -62, 61, 123, 21, -55, 60, -126, -60, 41, 61, -124, -79, -60, -71, 65, 85, -93, -67, 48, 105, -101, 59, -116, 118, -42, -68, -39, -54, -84, 59, -28, 33, 73, 61, 79, -71, -9, -67, 6, -66, 65, 61, -79, -66, -8, -67, -99, -42, -123, 61, 27, 61, 50, -67, -118, -89, 41, 61, -90, 76, -2, 61, 78, 107, 35, -66, 57, 80, -107, 61, -124, 77, 30, -67, 82, -25, 123, -67, 1, -85, -105, -67, 66, -29, 54, 60, -39, 77, -65, -69, 64, -89, -29, -68, 78, 77, 56, -67, -8, -82, -98, 60, 83, 51, 115, 61, 37, -62, 27, -67, 70, -89, -122, -67, 0, 14, -43, -68, -7, -71, 15, 62, 5, -26, 53, 60, 74, -19, -58, -67, 52, -22, 2, 61, 89, -18, -36, -69, -77, 86, 82, -67, -36, -81, 52, 60, 49, -115, 124, 61, -30, 116, -62, -67, 29, 116, 25, 61, -20, -47, 43, -67, -10, -120, 3, -66, -38, -28, 0, -66, 67, 78, 42, -67, -75, 83, -32, -68, -102, 87, -97, -67, -112, -81, 80, 59, -76, -39, 94, 61, 66, 106, 16, -67, 1, -104, 37, 60, -105, 84, -36, 61, -78, -76, -37, -67, 60, 0, 84, 58, -82, -76, -112, -67, -105, -18, 25, 61, -18, 94, -120, -68, 84, 35, -69, 61, 15, 36, -128, -69, 103, 122, 54, 60, -98, 30, -123, 61, 34, 125, 13, 62, -2, -60, -123, 61, 6, 49, -121, 61, -93, 25, -71, 60, 31, -124, 109, -67, -24, 97, 75, -67, 26, 40, -117, 61, 102, 36, -107, 61, -39, 87, 100, -67, 64, -64, 18, 61, -87, 110, -126, 60, -62, -24, 15, -67, -122, 106, -127, 61, 35, -4, -51, 61, -40, -81, 55, -67, -111, -5, 43, -68, 65, -51, 2, -66, -13, 60, 45, 61, -108, -109, -6, -68, -73, 53, 21, -67, -68, 36, -58, -67, -112, -83, 1, 61, -98, 45, -5, -67, -61, -59, -63, 61, 82, -107, 27, 61, -20, 2, -109, 61, -37, 56, 26, -67, 106, -119, -33, -68, -7, 75, -14, 58, 64, -76, 3, -67, 41, -35, 38, -67, -51, -24, 60, -68, 44, 67, 11, -67, 87, 103, 108, 60, -12, -5, 84, 61, -2, 70, 48, 61, -54, 41, -67, -68, 16, 107, -85, -68, -21, -29, -14, -67, 61, -107, 6, -66, -56, -74, -40, -67, -77, 30, -17, -68, -61, -56, -85, 60, -79, 81, -120, -67, -5, -45, 108, -67, 102, -54, -71, 60, 82, 62, 4, 61, -107, -12, 80, 61, 93, 20, -99, -68, -92, 104, 97, 59, -24, -76, 5, -67, -29, -13, 44, 61, -95, -93, -44, -68, 82, -108, 25, -67, -101, 93, 53, 60, -119, -59, 11, 61, 11, 67, -38, 60, 93, -107, -123, 60, 9, -18, 29, -67, -24, -33, -84, 61, 5, -47, -116, -67, 38, -97, -62, -67, 101, -26, 30, 60, -79, 85, -66, 61, -64, 76, -8, 60, -110, -112, -126, 58, 32, -5, -1, 59, -67, -105, 15, -66, -126, -23, -77, 61, -95, -37, 33, 60, -44, -80, -9, -69, -59, -15, -101, -67, 52, -27, -82, 60, 94, 100, 6, -68, -58, -79, 114, -68, -109, 16, 48, 61, -94, -106, 0, -67, 86, -42, -22, -68, -96, 107, -92, -67, -86, 121, 64, 61, -120, -75, -63, -67, -105, -92, 85, -67, 93, 120, 34, -67, -54, 12, -28, -68, 23, 43, 16, -67, -120, 89, 47, -68, 56, 126, 15, 62, -18, 42, -99, 60, -11, 52, 28, 61, -84, 123, 118, -67, 117, 36, 16, 62, -59, 28, -61, 61, -95, 122, 102, 61, 60, 38, -99, 61, -38, -80, 32, -68, 118, 69, -65, -67, -7, -33, 9, 61, 9, 36, -13, 61, -61, -87, -66, 61, 112, 114, -124, 61, 29, 112, -111, -67, -39, 91, 0, -66, 121, -38, -55, -67, -63, 11, 4, 61, -51, 89, -115, -67, 28, -74, 58, 60, 14, 122, -105, -67, 84, 108, 5, -66, -91, 35, -41, 61, 100, 13, -38, 61, -33, 125, 85, -68, 93, 25, -111, -67, 107, -30, 37, -67, 63, -117, 57, 60, -1, 68, 48, 61, -115, 5, -120, 61, -26, 50, -103, 60, -60, 39, -122, 61, 84, 117, -71, -69, 29, 98, 110, 61, 54, 108, -67, -67, -115, -125, -111, 61, -117, 91, -99, 60, 68, -79, -112, -67, 16, -67, -122, -68, 62, -26, -8, 60, -57, 79, 105, -68, 7, 8, 48, -67, 41, 9, 123, 61, -29, -61, -97, -69, -95, 84, 114, -67, -45, 11, -6, -68, -90, -107, -90, -68, 119, -122, 82, -67, -58, -71, -122, 60, -42, -102, 120, 60, 56, 58, 105, -67, 32, -99, -49, 61, -67, 108, 56, 60&quot;</span>;</span><br><span class="line"></span><br><span class="line">  String[] test01 = data.split(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">  System.out.println(<span class="string">&quot;===============原始数据====================&quot;</span>);</span><br><span class="line">  System.out.println(Arrays.toString(test01));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//对byte[]进行赋值</span></span><br><span class="line">  <span class="keyword">int</span> size = test01.length;</span><br><span class="line">  <span class="keyword">byte</span>[] demo = <span class="keyword">new</span> <span class="keyword">byte</span>[size];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;size;i++)&#123;</span><br><span class="line">      demo[i] = Byte.parseByte(test01[i]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  System.out.println(<span class="string">&quot;================存放好的数据==================&quot;</span>);</span><br><span class="line">  System.out.println(Arrays.toString(demo));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>结果</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">===============原始数据====================</span><br><span class="line">[<span class="number">0</span>, -<span class="number">128</span>, -<span class="number">6</span>, <span class="number">68</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">96</span>, <span class="number">65</span>, <span class="number">11</span>, -<span class="number">80</span>, -<span class="number">119</span>, <span class="number">61</span>, -<span class="number">75</span>, -<span class="number">91</span>, <span class="number">56</span>, -<span class="number">69</span>, <span class="number">6</span>, <span class="number">119</span>, <span class="number">23</span>, <span class="number">62</span>, -<span class="number">14</span>, <span class="number">33</span>, -<span class="number">43</span>, -<span class="number">67</span>, -<span class="number">35</span>, -<span class="number">127</span>, <span class="number">45</span>, -<span class="number">68</span>, -<span class="number">104</span>, -<span class="number">2</span>, <span class="number">82</span>, -<span class="number">67</span>, -<span class="number">68</span>, -<span class="number">121</span>, <span class="number">91</span>, -<span class="number">68</span>, <span class="number">102</span>, <span class="number">92</span>, -<span class="number">93</span>, -<span class="number">67</span>, <span class="number">52</span>, <span class="number">9</span>, -<span class="number">123</span>, -<span class="number">67</span>, -<span class="number">125</span>, -<span class="number">37</span>, <span class="number">95</span>, <span class="number">61</span>, -<span class="number">6</span>, <span class="number">103</span>, <span class="number">40</span>, -<span class="number">67</span>, <span class="number">33</span>, <span class="number">115</span>, <span class="number">50</span>, -<span class="number">68</span>, -<span class="number">37</span>, <span class="number">28</span>, -<span class="number">34</span>, -<span class="number">67</span>, -<span class="number">61</span>, <span class="number">100</span>, -<span class="number">76</span>, <span class="number">61</span>, -<span class="number">40</span>, -<span class="number">54</span>, -<span class="number">85</span>, -<span class="number">67</span>, -<span class="number">104</span>, <span class="number">107</span>, -<span class="number">50</span>, <span class="number">61</span>, <span class="number">46</span>, -<span class="number">52</span>, -<span class="number">116</span>, <span class="number">61</span>, -<span class="number">21</span>, -<span class="number">53</span>, -<span class="number">78</span>, -<span class="number">67</span>, <span class="number">26</span>, <span class="number">19</span>, -<span class="number">34</span>, <span class="number">61</span>, -<span class="number">104</span>, -<span class="number">53</span>, -<span class="number">96</span>, <span class="number">61</span>, -<span class="number">82</span>, -<span class="number">64</span>, -<span class="number">95</span>, <span class="number">60</span>, -<span class="number">4</span>, -<span class="number">55</span>, -<span class="number">67</span>, -<span class="number">67</span>, <span class="number">120</span>, -<span class="number">89</span>, <span class="number">106</span>, -<span class="number">67</span>, -<span class="number">37</span>, <span class="number">72</span>, -<span class="number">17</span>, -<span class="number">68</span>, -<span class="number">16</span>, -<span class="number">19</span>, -<span class="number">55</span>, <span class="number">60</span>, <span class="number">30</span>, <span class="number">123</span>, -<span class="number">19</span>, <span class="number">61</span>, <span class="number">119</span>, -<span class="number">28</span>, -<span class="number">63</span>, -<span class="number">67</span>, <span class="number">53</span>, -<span class="number">90</span>, -<span class="number">72</span>, -<span class="number">67</span>, -<span class="number">2</span>, -<span class="number">32</span>, -<span class="number">6</span>, <span class="number">60</span>, <span class="number">96</span>, -<span class="number">69</span>, -<span class="number">67</span>, <span class="number">61</span>, -<span class="number">61</span>, -<span class="number">64</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">9</span>, -<span class="number">123</span>, -<span class="number">117</span>, -<span class="number">68</span>, <span class="number">75</span>, -<span class="number">106</span>, <span class="number">41</span>, -<span class="number">67</span>, <span class="number">70</span>, <span class="number">107</span>, -<span class="number">21</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">116</span>, <span class="number">37</span>, -<span class="number">67</span>, -<span class="number">3</span>, -<span class="number">124</span>, <span class="number">6</span>, -<span class="number">70</span>, -<span class="number">8</span>, <span class="number">66</span>, -<span class="number">20</span>, -<span class="number">69</span>, -<span class="number">39</span>, <span class="number">75</span>, <span class="number">108</span>, -<span class="number">68</span>, -<span class="number">27</span>, <span class="number">103</span>, -<span class="number">72</span>, -<span class="number">67</span>, -<span class="number">17</span>, <span class="number">73</span>, <span class="number">73</span>, -<span class="number">67</span>, <span class="number">37</span>, <span class="number">114</span>, <span class="number">64</span>, <span class="number">61</span>, <span class="number">26</span>, <span class="number">25</span>, -<span class="number">80</span>, -<span class="number">67</span>, -<span class="number">90</span>, -<span class="number">71</span>, <span class="number">97</span>, <span class="number">61</span>, -<span class="number">28</span>, -<span class="number">77</span>, -<span class="number">20</span>, <span class="number">61</span>, <span class="number">66</span>, -<span class="number">111</span>, -<span class="number">59</span>, -<span class="number">70</span>, -<span class="number">98</span>, -<span class="number">6</span>, -<span class="number">88</span>, -<span class="number">68</span>, <span class="number">119</span>, -<span class="number">42</span>, -<span class="number">37</span>, <span class="number">60</span>, <span class="number">37</span>, -<span class="number">92</span>, -<span class="number">90</span>, <span class="number">60</span>, -<span class="number">50</span>, -<span class="number">94</span>, <span class="number">39</span>, -<span class="number">66</span>, <span class="number">0</span>, -<span class="number">69</span>, -<span class="number">107</span>, -<span class="number">68</span>, -<span class="number">13</span>, <span class="number">64</span>, -<span class="number">42</span>, <span class="number">61</span>, <span class="number">60</span>, -<span class="number">103</span>, -<span class="number">121</span>, <span class="number">61</span>, <span class="number">106</span>, <span class="number">118</span>, -<span class="number">1</span>, <span class="number">61</span>, <span class="number">60</span>, -<span class="number">82</span>, -<span class="number">127</span>, -<span class="number">67</span>, -<span class="number">69</span>, <span class="number">21</span>, -<span class="number">84</span>, -<span class="number">68</span>, <span class="number">14</span>, -<span class="number">2</span>, <span class="number">18</span>, <span class="number">61</span>, <span class="number">22</span>, -<span class="number">36</span>, <span class="number">0</span>, -<span class="number">68</span>, <span class="number">71</span>, -<span class="number">33</span>, -<span class="number">62</span>, <span class="number">61</span>, <span class="number">123</span>, <span class="number">21</span>, -<span class="number">55</span>, <span class="number">60</span>, -<span class="number">126</span>, -<span class="number">60</span>, <span class="number">41</span>, <span class="number">61</span>, -<span class="number">124</span>, -<span class="number">79</span>, -<span class="number">60</span>, -<span class="number">71</span>, <span class="number">65</span>, <span class="number">85</span>, -<span class="number">93</span>, -<span class="number">67</span>, <span class="number">48</span>, <span class="number">105</span>, -<span class="number">101</span>, <span class="number">59</span>, -<span class="number">116</span>, <span class="number">118</span>, -<span class="number">42</span>, -<span class="number">68</span>, -<span class="number">39</span>, -<span class="number">54</span>, -<span class="number">84</span>, <span class="number">59</span>, -<span class="number">28</span>, <span class="number">33</span>, <span class="number">73</span>, <span class="number">61</span>, <span class="number">79</span>, -<span class="number">71</span>, -<span class="number">9</span>, -<span class="number">67</span>, <span class="number">6</span>, -<span class="number">66</span>, <span class="number">65</span>, <span class="number">61</span>, -<span class="number">79</span>, -<span class="number">66</span>, -<span class="number">8</span>, -<span class="number">67</span>, -<span class="number">99</span>, -<span class="number">42</span>, -<span class="number">123</span>, <span class="number">61</span>, <span class="number">27</span>, <span class="number">61</span>, <span class="number">50</span>, -<span class="number">67</span>, -<span class="number">118</span>, -<span class="number">89</span>, <span class="number">41</span>, <span class="number">61</span>, -<span class="number">90</span>, <span class="number">76</span>, -<span class="number">2</span>, <span class="number">61</span>, <span class="number">78</span>, <span class="number">107</span>, <span class="number">35</span>, -<span class="number">66</span>, <span class="number">57</span>, <span class="number">80</span>, -<span class="number">107</span>, <span class="number">61</span>, -<span class="number">124</span>, <span class="number">77</span>, <span class="number">30</span>, -<span class="number">67</span>, <span class="number">82</span>, -<span class="number">25</span>, <span class="number">123</span>, -<span class="number">67</span>, <span class="number">1</span>, -<span class="number">85</span>, -<span class="number">105</span>, -<span class="number">67</span>, <span class="number">66</span>, -<span class="number">29</span>, <span class="number">54</span>, <span class="number">60</span>, -<span class="number">39</span>, <span class="number">77</span>, -<span class="number">65</span>, -<span class="number">69</span>, <span class="number">64</span>, -<span class="number">89</span>, -<span class="number">29</span>, -<span class="number">68</span>, <span class="number">78</span>, <span class="number">77</span>, <span class="number">56</span>, -<span class="number">67</span>, -<span class="number">8</span>, -<span class="number">82</span>, -<span class="number">98</span>, <span class="number">60</span>, <span class="number">83</span>, <span class="number">51</span>, <span class="number">115</span>, <span class="number">61</span>, <span class="number">37</span>, -<span class="number">62</span>, <span class="number">27</span>, -<span class="number">67</span>, <span class="number">70</span>, -<span class="number">89</span>, -<span class="number">122</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">14</span>, -<span class="number">43</span>, -<span class="number">68</span>, -<span class="number">7</span>, -<span class="number">71</span>, <span class="number">15</span>, <span class="number">62</span>, <span class="number">5</span>, -<span class="number">26</span>, <span class="number">53</span>, <span class="number">60</span>, <span class="number">74</span>, -<span class="number">19</span>, -<span class="number">58</span>, -<span class="number">67</span>, <span class="number">52</span>, -<span class="number">22</span>, <span class="number">2</span>, <span class="number">61</span>, <span class="number">89</span>, -<span class="number">18</span>, -<span class="number">36</span>, -<span class="number">69</span>, -<span class="number">77</span>, <span class="number">86</span>, <span class="number">82</span>, -<span class="number">67</span>, -<span class="number">36</span>, -<span class="number">81</span>, <span class="number">52</span>, <span class="number">60</span>, <span class="number">49</span>, -<span class="number">115</span>, <span class="number">124</span>, <span class="number">61</span>, -<span class="number">30</span>, <span class="number">116</span>, -<span class="number">62</span>, -<span class="number">67</span>, <span class="number">29</span>, <span class="number">116</span>, <span class="number">25</span>, <span class="number">61</span>, -<span class="number">20</span>, -<span class="number">47</span>, <span class="number">43</span>, -<span class="number">67</span>, -<span class="number">10</span>, -<span class="number">120</span>, <span class="number">3</span>, -<span class="number">66</span>, -<span class="number">38</span>, -<span class="number">28</span>, <span class="number">0</span>, -<span class="number">66</span>, <span class="number">67</span>, <span class="number">78</span>, <span class="number">42</span>, -<span class="number">67</span>, -<span class="number">75</span>, <span class="number">83</span>, -<span class="number">32</span>, -<span class="number">68</span>, -<span class="number">102</span>, <span class="number">87</span>, -<span class="number">97</span>, -<span class="number">67</span>, -<span class="number">112</span>, -<span class="number">81</span>, <span class="number">80</span>, <span class="number">59</span>, -<span class="number">76</span>, -<span class="number">39</span>, <span class="number">94</span>, <span class="number">61</span>, <span class="number">66</span>, <span class="number">106</span>, <span class="number">16</span>, -<span class="number">67</span>, <span class="number">1</span>, -<span class="number">104</span>, <span class="number">37</span>, <span class="number">60</span>, -<span class="number">105</span>, <span class="number">84</span>, -<span class="number">36</span>, <span class="number">61</span>, -<span class="number">78</span>, -<span class="number">76</span>, -<span class="number">37</span>, -<span class="number">67</span>, <span class="number">60</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">58</span>, -<span class="number">82</span>, -<span class="number">76</span>, -<span class="number">112</span>, -<span class="number">67</span>, -<span class="number">105</span>, -<span class="number">18</span>, <span class="number">25</span>, <span class="number">61</span>, -<span class="number">18</span>, <span class="number">94</span>, -<span class="number">120</span>, -<span class="number">68</span>, <span class="number">84</span>, <span class="number">35</span>, -<span class="number">69</span>, <span class="number">61</span>, <span class="number">15</span>, <span class="number">36</span>, -<span class="number">128</span>, -<span class="number">69</span>, <span class="number">103</span>, <span class="number">122</span>, <span class="number">54</span>, <span class="number">60</span>, -<span class="number">98</span>, <span class="number">30</span>, -<span class="number">123</span>, <span class="number">61</span>, <span class="number">34</span>, <span class="number">125</span>, <span class="number">13</span>, <span class="number">62</span>, -<span class="number">2</span>, -<span class="number">60</span>, -<span class="number">123</span>, <span class="number">61</span>, <span class="number">6</span>, <span class="number">49</span>, -<span class="number">121</span>, <span class="number">61</span>, -<span class="number">93</span>, <span class="number">25</span>, -<span class="number">71</span>, <span class="number">60</span>, <span class="number">31</span>, -<span class="number">124</span>, <span class="number">109</span>, -<span class="number">67</span>, -<span class="number">24</span>, <span class="number">97</span>, <span class="number">75</span>, -<span class="number">67</span>, <span class="number">26</span>, <span class="number">40</span>, -<span class="number">117</span>, <span class="number">61</span>, <span class="number">102</span>, <span class="number">36</span>, -<span class="number">107</span>, <span class="number">61</span>, -<span class="number">39</span>, <span class="number">87</span>, <span class="number">100</span>, -<span class="number">67</span>, <span class="number">64</span>, -<span class="number">64</span>, <span class="number">18</span>, <span class="number">61</span>, -<span class="number">87</span>, <span class="number">110</span>, -<span class="number">126</span>, <span class="number">60</span>, -<span class="number">62</span>, -<span class="number">24</span>, <span class="number">15</span>, -<span class="number">67</span>, -<span class="number">122</span>, <span class="number">106</span>, -<span class="number">127</span>, <span class="number">61</span>, <span class="number">35</span>, -<span class="number">4</span>, -<span class="number">51</span>, <span class="number">61</span>, -<span class="number">40</span>, -<span class="number">81</span>, <span class="number">55</span>, -<span class="number">67</span>, -<span class="number">111</span>, -<span class="number">5</span>, <span class="number">43</span>, -<span class="number">68</span>, <span class="number">65</span>, -<span class="number">51</span>, <span class="number">2</span>, -<span class="number">66</span>, -<span class="number">13</span>, <span class="number">60</span>, <span class="number">45</span>, <span class="number">61</span>, -<span class="number">108</span>, -<span class="number">109</span>, -<span class="number">6</span>, -<span class="number">68</span>, -<span class="number">73</span>, <span class="number">53</span>, <span class="number">21</span>, -<span class="number">67</span>, -<span class="number">68</span>, <span class="number">36</span>, -<span class="number">58</span>, -<span class="number">67</span>, -<span class="number">112</span>, -<span class="number">83</span>, <span class="number">1</span>, <span class="number">61</span>, -<span class="number">98</span>, <span class="number">45</span>, -<span class="number">5</span>, -<span class="number">67</span>, -<span class="number">61</span>, -<span class="number">59</span>, -<span class="number">63</span>, <span class="number">61</span>, <span class="number">82</span>, -<span class="number">107</span>, <span class="number">27</span>, <span class="number">61</span>, -<span class="number">20</span>, <span class="number">2</span>, -<span class="number">109</span>, <span class="number">61</span>, -<span class="number">37</span>, <span class="number">56</span>, <span class="number">26</span>, -<span class="number">67</span>, <span class="number">106</span>, -<span class="number">119</span>, -<span class="number">33</span>, -<span class="number">68</span>, -<span class="number">7</span>, <span class="number">75</span>, -<span class="number">14</span>, <span class="number">58</span>, <span class="number">64</span>, -<span class="number">76</span>, <span class="number">3</span>, -<span class="number">67</span>, <span class="number">41</span>, -<span class="number">35</span>, <span class="number">38</span>, -<span class="number">67</span>, -<span class="number">51</span>, -<span class="number">24</span>, <span class="number">60</span>, -<span class="number">68</span>, <span class="number">44</span>, <span class="number">67</span>, <span class="number">11</span>, -<span class="number">67</span>, <span class="number">87</span>, <span class="number">103</span>, <span class="number">108</span>, <span class="number">60</span>, -<span class="number">12</span>, -<span class="number">5</span>, <span class="number">84</span>, <span class="number">61</span>, -<span class="number">2</span>, <span class="number">70</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">54</span>, <span class="number">41</span>, -<span class="number">67</span>, -<span class="number">68</span>, <span class="number">16</span>, <span class="number">107</span>, -<span class="number">85</span>, -<span class="number">68</span>, -<span class="number">21</span>, -<span class="number">29</span>, -<span class="number">14</span>, -<span class="number">67</span>, <span class="number">61</span>, -<span class="number">107</span>, <span class="number">6</span>, -<span class="number">66</span>, -<span class="number">56</span>, -<span class="number">74</span>, -<span class="number">40</span>, -<span class="number">67</span>, -<span class="number">77</span>, <span class="number">30</span>, -<span class="number">17</span>, -<span class="number">68</span>, -<span class="number">61</span>, -<span class="number">56</span>, -<span class="number">85</span>, <span class="number">60</span>, -<span class="number">79</span>, <span class="number">81</span>, -<span class="number">120</span>, -<span class="number">67</span>, -<span class="number">5</span>, -<span class="number">45</span>, <span class="number">108</span>, -<span class="number">67</span>, <span class="number">102</span>, -<span class="number">54</span>, -<span class="number">71</span>, <span class="number">60</span>, <span class="number">82</span>, <span class="number">62</span>, <span class="number">4</span>, <span class="number">61</span>, -<span class="number">107</span>, -<span class="number">12</span>, <span class="number">80</span>, <span class="number">61</span>, <span class="number">93</span>, <span class="number">20</span>, -<span class="number">99</span>, -<span class="number">68</span>, -<span class="number">92</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">59</span>, -<span class="number">24</span>, -<span class="number">76</span>, <span class="number">5</span>, -<span class="number">67</span>, -<span class="number">29</span>, -<span class="number">13</span>, <span class="number">44</span>, <span class="number">61</span>, -<span class="number">95</span>, -<span class="number">93</span>, -<span class="number">44</span>, -<span class="number">68</span>, <span class="number">82</span>, -<span class="number">108</span>, <span class="number">25</span>, -<span class="number">67</span>, -<span class="number">101</span>, <span class="number">93</span>, <span class="number">53</span>, <span class="number">60</span>, -<span class="number">119</span>, -<span class="number">59</span>, <span class="number">11</span>, <span class="number">61</span>, <span class="number">11</span>, <span class="number">67</span>, -<span class="number">38</span>, <span class="number">60</span>, <span class="number">93</span>, -<span class="number">107</span>, -<span class="number">123</span>, <span class="number">60</span>, <span class="number">9</span>, -<span class="number">18</span>, <span class="number">29</span>, -<span class="number">67</span>, -<span class="number">24</span>, -<span class="number">33</span>, -<span class="number">84</span>, <span class="number">61</span>, <span class="number">5</span>, -<span class="number">47</span>, -<span class="number">116</span>, -<span class="number">67</span>, <span class="number">38</span>, -<span class="number">97</span>, -<span class="number">62</span>, -<span class="number">67</span>, <span class="number">101</span>, -<span class="number">26</span>, <span class="number">30</span>, <span class="number">60</span>, -<span class="number">79</span>, <span class="number">85</span>, -<span class="number">66</span>, <span class="number">61</span>, -<span class="number">64</span>, <span class="number">76</span>, -<span class="number">8</span>, <span class="number">60</span>, -<span class="number">110</span>, -<span class="number">112</span>, -<span class="number">126</span>, <span class="number">58</span>, <span class="number">32</span>, -<span class="number">5</span>, -<span class="number">1</span>, <span class="number">59</span>, -<span class="number">67</span>, -<span class="number">105</span>, <span class="number">15</span>, -<span class="number">66</span>, -<span class="number">126</span>, -<span class="number">23</span>, -<span class="number">77</span>, <span class="number">61</span>, -<span class="number">95</span>, -<span class="number">37</span>, <span class="number">33</span>, <span class="number">60</span>, -<span class="number">44</span>, -<span class="number">80</span>, -<span class="number">9</span>, -<span class="number">69</span>, -<span class="number">59</span>, -<span class="number">15</span>, -<span class="number">101</span>, -<span class="number">67</span>, <span class="number">52</span>, -<span class="number">27</span>, -<span class="number">82</span>, <span class="number">60</span>, <span class="number">94</span>, <span class="number">100</span>, <span class="number">6</span>, -<span class="number">68</span>, -<span class="number">58</span>, -<span class="number">79</span>, <span class="number">114</span>, -<span class="number">68</span>, -<span class="number">109</span>, <span class="number">16</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">94</span>, -<span class="number">106</span>, <span class="number">0</span>, -<span class="number">67</span>, <span class="number">86</span>, -<span class="number">42</span>, -<span class="number">22</span>, -<span class="number">68</span>, -<span class="number">96</span>, <span class="number">107</span>, -<span class="number">92</span>, -<span class="number">67</span>, -<span class="number">86</span>, <span class="number">121</span>, <span class="number">64</span>, <span class="number">61</span>, -<span class="number">120</span>, -<span class="number">75</span>, -<span class="number">63</span>, -<span class="number">67</span>, -<span class="number">105</span>, -<span class="number">92</span>, <span class="number">85</span>, -<span class="number">67</span>, <span class="number">93</span>, <span class="number">120</span>, <span class="number">34</span>, -<span class="number">67</span>, -<span class="number">54</span>, <span class="number">12</span>, -<span class="number">28</span>, -<span class="number">68</span>, <span class="number">23</span>, <span class="number">43</span>, <span class="number">16</span>, -<span class="number">67</span>, -<span class="number">120</span>, <span class="number">89</span>, <span class="number">47</span>, -<span class="number">68</span>, <span class="number">56</span>, <span class="number">126</span>, <span class="number">15</span>, <span class="number">62</span>, -<span class="number">18</span>, <span class="number">42</span>, -<span class="number">99</span>, <span class="number">60</span>, -<span class="number">11</span>, <span class="number">52</span>, <span class="number">28</span>, <span class="number">61</span>, -<span class="number">84</span>, <span class="number">123</span>, <span class="number">118</span>, -<span class="number">67</span>, <span class="number">117</span>, <span class="number">36</span>, <span class="number">16</span>, <span class="number">62</span>, -<span class="number">59</span>, <span class="number">28</span>, -<span class="number">61</span>, <span class="number">61</span>, -<span class="number">95</span>, <span class="number">122</span>, <span class="number">102</span>, <span class="number">61</span>, <span class="number">60</span>, <span class="number">38</span>, -<span class="number">99</span>, <span class="number">61</span>, -<span class="number">38</span>, -<span class="number">80</span>, <span class="number">32</span>, -<span class="number">68</span>, <span class="number">118</span>, <span class="number">69</span>, -<span class="number">65</span>, -<span class="number">67</span>, -<span class="number">7</span>, -<span class="number">33</span>, <span class="number">9</span>, <span class="number">61</span>, <span class="number">9</span>, <span class="number">36</span>, -<span class="number">13</span>, <span class="number">61</span>, -<span class="number">61</span>, -<span class="number">87</span>, -<span class="number">66</span>, <span class="number">61</span>, <span class="number">112</span>, <span class="number">114</span>, -<span class="number">124</span>, <span class="number">61</span>, <span class="number">29</span>, <span class="number">112</span>, -<span class="number">111</span>, -<span class="number">67</span>, -<span class="number">39</span>, <span class="number">91</span>, <span class="number">0</span>, -<span class="number">66</span>, <span class="number">121</span>, -<span class="number">38</span>, -<span class="number">55</span>, -<span class="number">67</span>, -<span class="number">63</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">61</span>, -<span class="number">51</span>, <span class="number">89</span>, -<span class="number">115</span>, -<span class="number">67</span>, <span class="number">28</span>, -<span class="number">74</span>, <span class="number">58</span>, <span class="number">60</span>, <span class="number">14</span>, <span class="number">122</span>, -<span class="number">105</span>, -<span class="number">67</span>, <span class="number">84</span>, <span class="number">108</span>, <span class="number">5</span>, -<span class="number">66</span>, -<span class="number">91</span>, <span class="number">35</span>, -<span class="number">41</span>, <span class="number">61</span>, <span class="number">100</span>, <span class="number">13</span>, -<span class="number">38</span>, <span class="number">61</span>, -<span class="number">33</span>, <span class="number">125</span>, <span class="number">85</span>, -<span class="number">68</span>, <span class="number">93</span>, <span class="number">25</span>, -<span class="number">111</span>, -<span class="number">67</span>, <span class="number">107</span>, -<span class="number">30</span>, <span class="number">37</span>, -<span class="number">67</span>, <span class="number">63</span>, -<span class="number">117</span>, <span class="number">57</span>, <span class="number">60</span>, -<span class="number">1</span>, <span class="number">68</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">115</span>, <span class="number">5</span>, -<span class="number">120</span>, <span class="number">61</span>, -<span class="number">26</span>, <span class="number">50</span>, -<span class="number">103</span>, <span class="number">60</span>, -<span class="number">60</span>, <span class="number">39</span>, -<span class="number">122</span>, <span class="number">61</span>, <span class="number">84</span>, <span class="number">117</span>, -<span class="number">71</span>, -<span class="number">69</span>, <span class="number">29</span>, <span class="number">98</span>, <span class="number">110</span>, <span class="number">61</span>, <span class="number">54</span>, <span class="number">108</span>, -<span class="number">67</span>, -<span class="number">67</span>, -<span class="number">115</span>, -<span class="number">125</span>, -<span class="number">111</span>, <span class="number">61</span>, -<span class="number">117</span>, <span class="number">91</span>, -<span class="number">99</span>, <span class="number">60</span>, <span class="number">68</span>, -<span class="number">79</span>, -<span class="number">112</span>, -<span class="number">67</span>, <span class="number">16</span>, -<span class="number">67</span>, -<span class="number">122</span>, -<span class="number">68</span>, <span class="number">62</span>, -<span class="number">26</span>, -<span class="number">8</span>, <span class="number">60</span>, -<span class="number">57</span>, <span class="number">79</span>, <span class="number">105</span>, -<span class="number">68</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">48</span>, -<span class="number">67</span>, <span class="number">41</span>, <span class="number">9</span>, <span class="number">123</span>, <span class="number">61</span>, -<span class="number">29</span>, -<span class="number">61</span>, -<span class="number">97</span>, -<span class="number">69</span>, -<span class="number">95</span>, <span class="number">84</span>, <span class="number">114</span>, -<span class="number">67</span>, -<span class="number">45</span>, <span class="number">11</span>, -<span class="number">6</span>, -<span class="number">68</span>, -<span class="number">90</span>, -<span class="number">107</span>, -<span class="number">90</span>, -<span class="number">68</span>, <span class="number">119</span>, -<span class="number">122</span>, <span class="number">82</span>, -<span class="number">67</span>, -<span class="number">58</span>, -<span class="number">71</span>, -<span class="number">122</span>, <span class="number">60</span>, -<span class="number">42</span>, -<span class="number">102</span>, <span class="number">120</span>, <span class="number">60</span>, <span class="number">56</span>, <span class="number">58</span>, <span class="number">105</span>, -<span class="number">67</span>, <span class="number">32</span>, -<span class="number">99</span>, -<span class="number">49</span>, <span class="number">61</span>, -<span class="number">67</span>, <span class="number">108</span>, <span class="number">56</span>, <span class="number">60</span>]</span><br><span class="line">================存放好的数据==================</span><br><span class="line">[<span class="number">0</span>, -<span class="number">128</span>, -<span class="number">6</span>, <span class="number">68</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">96</span>, <span class="number">65</span>, <span class="number">11</span>, -<span class="number">80</span>, -<span class="number">119</span>, <span class="number">61</span>, -<span class="number">75</span>, -<span class="number">91</span>, <span class="number">56</span>, -<span class="number">69</span>, <span class="number">6</span>, <span class="number">119</span>, <span class="number">23</span>, <span class="number">62</span>, -<span class="number">14</span>, <span class="number">33</span>, -<span class="number">43</span>, -<span class="number">67</span>, -<span class="number">35</span>, -<span class="number">127</span>, <span class="number">45</span>, -<span class="number">68</span>, -<span class="number">104</span>, -<span class="number">2</span>, <span class="number">82</span>, -<span class="number">67</span>, -<span class="number">68</span>, -<span class="number">121</span>, <span class="number">91</span>, -<span class="number">68</span>, <span class="number">102</span>, <span class="number">92</span>, -<span class="number">93</span>, -<span class="number">67</span>, <span class="number">52</span>, <span class="number">9</span>, -<span class="number">123</span>, -<span class="number">67</span>, -<span class="number">125</span>, -<span class="number">37</span>, <span class="number">95</span>, <span class="number">61</span>, -<span class="number">6</span>, <span class="number">103</span>, <span class="number">40</span>, -<span class="number">67</span>, <span class="number">33</span>, <span class="number">115</span>, <span class="number">50</span>, -<span class="number">68</span>, -<span class="number">37</span>, <span class="number">28</span>, -<span class="number">34</span>, -<span class="number">67</span>, -<span class="number">61</span>, <span class="number">100</span>, -<span class="number">76</span>, <span class="number">61</span>, -<span class="number">40</span>, -<span class="number">54</span>, -<span class="number">85</span>, -<span class="number">67</span>, -<span class="number">104</span>, <span class="number">107</span>, -<span class="number">50</span>, <span class="number">61</span>, <span class="number">46</span>, -<span class="number">52</span>, -<span class="number">116</span>, <span class="number">61</span>, -<span class="number">21</span>, -<span class="number">53</span>, -<span class="number">78</span>, -<span class="number">67</span>, <span class="number">26</span>, <span class="number">19</span>, -<span class="number">34</span>, <span class="number">61</span>, -<span class="number">104</span>, -<span class="number">53</span>, -<span class="number">96</span>, <span class="number">61</span>, -<span class="number">82</span>, -<span class="number">64</span>, -<span class="number">95</span>, <span class="number">60</span>, -<span class="number">4</span>, -<span class="number">55</span>, -<span class="number">67</span>, -<span class="number">67</span>, <span class="number">120</span>, -<span class="number">89</span>, <span class="number">106</span>, -<span class="number">67</span>, -<span class="number">37</span>, <span class="number">72</span>, -<span class="number">17</span>, -<span class="number">68</span>, -<span class="number">16</span>, -<span class="number">19</span>, -<span class="number">55</span>, <span class="number">60</span>, <span class="number">30</span>, <span class="number">123</span>, -<span class="number">19</span>, <span class="number">61</span>, <span class="number">119</span>, -<span class="number">28</span>, -<span class="number">63</span>, -<span class="number">67</span>, <span class="number">53</span>, -<span class="number">90</span>, -<span class="number">72</span>, -<span class="number">67</span>, -<span class="number">2</span>, -<span class="number">32</span>, -<span class="number">6</span>, <span class="number">60</span>, <span class="number">96</span>, -<span class="number">69</span>, -<span class="number">67</span>, <span class="number">61</span>, -<span class="number">61</span>, -<span class="number">64</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">9</span>, -<span class="number">123</span>, -<span class="number">117</span>, -<span class="number">68</span>, <span class="number">75</span>, -<span class="number">106</span>, <span class="number">41</span>, -<span class="number">67</span>, <span class="number">70</span>, <span class="number">107</span>, -<span class="number">21</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">116</span>, <span class="number">37</span>, -<span class="number">67</span>, -<span class="number">3</span>, -<span class="number">124</span>, <span class="number">6</span>, -<span class="number">70</span>, -<span class="number">8</span>, <span class="number">66</span>, -<span class="number">20</span>, -<span class="number">69</span>, -<span class="number">39</span>, <span class="number">75</span>, <span class="number">108</span>, -<span class="number">68</span>, -<span class="number">27</span>, <span class="number">103</span>, -<span class="number">72</span>, -<span class="number">67</span>, -<span class="number">17</span>, <span class="number">73</span>, <span class="number">73</span>, -<span class="number">67</span>, <span class="number">37</span>, <span class="number">114</span>, <span class="number">64</span>, <span class="number">61</span>, <span class="number">26</span>, <span class="number">25</span>, -<span class="number">80</span>, -<span class="number">67</span>, -<span class="number">90</span>, -<span class="number">71</span>, <span class="number">97</span>, <span class="number">61</span>, -<span class="number">28</span>, -<span class="number">77</span>, -<span class="number">20</span>, <span class="number">61</span>, <span class="number">66</span>, -<span class="number">111</span>, -<span class="number">59</span>, -<span class="number">70</span>, -<span class="number">98</span>, -<span class="number">6</span>, -<span class="number">88</span>, -<span class="number">68</span>, <span class="number">119</span>, -<span class="number">42</span>, -<span class="number">37</span>, <span class="number">60</span>, <span class="number">37</span>, -<span class="number">92</span>, -<span class="number">90</span>, <span class="number">60</span>, -<span class="number">50</span>, -<span class="number">94</span>, <span class="number">39</span>, -<span class="number">66</span>, <span class="number">0</span>, -<span class="number">69</span>, -<span class="number">107</span>, -<span class="number">68</span>, -<span class="number">13</span>, <span class="number">64</span>, -<span class="number">42</span>, <span class="number">61</span>, <span class="number">60</span>, -<span class="number">103</span>, -<span class="number">121</span>, <span class="number">61</span>, <span class="number">106</span>, <span class="number">118</span>, -<span class="number">1</span>, <span class="number">61</span>, <span class="number">60</span>, -<span class="number">82</span>, -<span class="number">127</span>, -<span class="number">67</span>, -<span class="number">69</span>, <span class="number">21</span>, -<span class="number">84</span>, -<span class="number">68</span>, <span class="number">14</span>, -<span class="number">2</span>, <span class="number">18</span>, <span class="number">61</span>, <span class="number">22</span>, -<span class="number">36</span>, <span class="number">0</span>, -<span class="number">68</span>, <span class="number">71</span>, -<span class="number">33</span>, -<span class="number">62</span>, <span class="number">61</span>, <span class="number">123</span>, <span class="number">21</span>, -<span class="number">55</span>, <span class="number">60</span>, -<span class="number">126</span>, -<span class="number">60</span>, <span class="number">41</span>, <span class="number">61</span>, -<span class="number">124</span>, -<span class="number">79</span>, -<span class="number">60</span>, -<span class="number">71</span>, <span class="number">65</span>, <span class="number">85</span>, -<span class="number">93</span>, -<span class="number">67</span>, <span class="number">48</span>, <span class="number">105</span>, -<span class="number">101</span>, <span class="number">59</span>, -<span class="number">116</span>, <span class="number">118</span>, -<span class="number">42</span>, -<span class="number">68</span>, -<span class="number">39</span>, -<span class="number">54</span>, -<span class="number">84</span>, <span class="number">59</span>, -<span class="number">28</span>, <span class="number">33</span>, <span class="number">73</span>, <span class="number">61</span>, <span class="number">79</span>, -<span class="number">71</span>, -<span class="number">9</span>, -<span class="number">67</span>, <span class="number">6</span>, -<span class="number">66</span>, <span class="number">65</span>, <span class="number">61</span>, -<span class="number">79</span>, -<span class="number">66</span>, -<span class="number">8</span>, -<span class="number">67</span>, -<span class="number">99</span>, -<span class="number">42</span>, -<span class="number">123</span>, <span class="number">61</span>, <span class="number">27</span>, <span class="number">61</span>, <span class="number">50</span>, -<span class="number">67</span>, -<span class="number">118</span>, -<span class="number">89</span>, <span class="number">41</span>, <span class="number">61</span>, -<span class="number">90</span>, <span class="number">76</span>, -<span class="number">2</span>, <span class="number">61</span>, <span class="number">78</span>, <span class="number">107</span>, <span class="number">35</span>, -<span class="number">66</span>, <span class="number">57</span>, <span class="number">80</span>, -<span class="number">107</span>, <span class="number">61</span>, -<span class="number">124</span>, <span class="number">77</span>, <span class="number">30</span>, -<span class="number">67</span>, <span class="number">82</span>, -<span class="number">25</span>, <span class="number">123</span>, -<span class="number">67</span>, <span class="number">1</span>, -<span class="number">85</span>, -<span class="number">105</span>, -<span class="number">67</span>, <span class="number">66</span>, -<span class="number">29</span>, <span class="number">54</span>, <span class="number">60</span>, -<span class="number">39</span>, <span class="number">77</span>, -<span class="number">65</span>, -<span class="number">69</span>, <span class="number">64</span>, -<span class="number">89</span>, -<span class="number">29</span>, -<span class="number">68</span>, <span class="number">78</span>, <span class="number">77</span>, <span class="number">56</span>, -<span class="number">67</span>, -<span class="number">8</span>, -<span class="number">82</span>, -<span class="number">98</span>, <span class="number">60</span>, <span class="number">83</span>, <span class="number">51</span>, <span class="number">115</span>, <span class="number">61</span>, <span class="number">37</span>, -<span class="number">62</span>, <span class="number">27</span>, -<span class="number">67</span>, <span class="number">70</span>, -<span class="number">89</span>, -<span class="number">122</span>, -<span class="number">67</span>, <span class="number">0</span>, <span class="number">14</span>, -<span class="number">43</span>, -<span class="number">68</span>, -<span class="number">7</span>, -<span class="number">71</span>, <span class="number">15</span>, <span class="number">62</span>, <span class="number">5</span>, -<span class="number">26</span>, <span class="number">53</span>, <span class="number">60</span>, <span class="number">74</span>, -<span class="number">19</span>, -<span class="number">58</span>, -<span class="number">67</span>, <span class="number">52</span>, -<span class="number">22</span>, <span class="number">2</span>, <span class="number">61</span>, <span class="number">89</span>, -<span class="number">18</span>, -<span class="number">36</span>, -<span class="number">69</span>, -<span class="number">77</span>, <span class="number">86</span>, <span class="number">82</span>, -<span class="number">67</span>, -<span class="number">36</span>, -<span class="number">81</span>, <span class="number">52</span>, <span class="number">60</span>, <span class="number">49</span>, -<span class="number">115</span>, <span class="number">124</span>, <span class="number">61</span>, -<span class="number">30</span>, <span class="number">116</span>, -<span class="number">62</span>, -<span class="number">67</span>, <span class="number">29</span>, <span class="number">116</span>, <span class="number">25</span>, <span class="number">61</span>, -<span class="number">20</span>, -<span class="number">47</span>, <span class="number">43</span>, -<span class="number">67</span>, -<span class="number">10</span>, -<span class="number">120</span>, <span class="number">3</span>, -<span class="number">66</span>, -<span class="number">38</span>, -<span class="number">28</span>, <span class="number">0</span>, -<span class="number">66</span>, <span class="number">67</span>, <span class="number">78</span>, <span class="number">42</span>, -<span class="number">67</span>, -<span class="number">75</span>, <span class="number">83</span>, -<span class="number">32</span>, -<span class="number">68</span>, -<span class="number">102</span>, <span class="number">87</span>, -<span class="number">97</span>, -<span class="number">67</span>, -<span class="number">112</span>, -<span class="number">81</span>, <span class="number">80</span>, <span class="number">59</span>, -<span class="number">76</span>, -<span class="number">39</span>, <span class="number">94</span>, <span class="number">61</span>, <span class="number">66</span>, <span class="number">106</span>, <span class="number">16</span>, -<span class="number">67</span>, <span class="number">1</span>, -<span class="number">104</span>, <span class="number">37</span>, <span class="number">60</span>, -<span class="number">105</span>, <span class="number">84</span>, -<span class="number">36</span>, <span class="number">61</span>, -<span class="number">78</span>, -<span class="number">76</span>, -<span class="number">37</span>, -<span class="number">67</span>, <span class="number">60</span>, <span class="number">0</span>, <span class="number">84</span>, <span class="number">58</span>, -<span class="number">82</span>, -<span class="number">76</span>, -<span class="number">112</span>, -<span class="number">67</span>, -<span class="number">105</span>, -<span class="number">18</span>, <span class="number">25</span>, <span class="number">61</span>, -<span class="number">18</span>, <span class="number">94</span>, -<span class="number">120</span>, -<span class="number">68</span>, <span class="number">84</span>, <span class="number">35</span>, -<span class="number">69</span>, <span class="number">61</span>, <span class="number">15</span>, <span class="number">36</span>, -<span class="number">128</span>, -<span class="number">69</span>, <span class="number">103</span>, <span class="number">122</span>, <span class="number">54</span>, <span class="number">60</span>, -<span class="number">98</span>, <span class="number">30</span>, -<span class="number">123</span>, <span class="number">61</span>, <span class="number">34</span>, <span class="number">125</span>, <span class="number">13</span>, <span class="number">62</span>, -<span class="number">2</span>, -<span class="number">60</span>, -<span class="number">123</span>, <span class="number">61</span>, <span class="number">6</span>, <span class="number">49</span>, -<span class="number">121</span>, <span class="number">61</span>, -<span class="number">93</span>, <span class="number">25</span>, -<span class="number">71</span>, <span class="number">60</span>, <span class="number">31</span>, -<span class="number">124</span>, <span class="number">109</span>, -<span class="number">67</span>, -<span class="number">24</span>, <span class="number">97</span>, <span class="number">75</span>, -<span class="number">67</span>, <span class="number">26</span>, <span class="number">40</span>, -<span class="number">117</span>, <span class="number">61</span>, <span class="number">102</span>, <span class="number">36</span>, -<span class="number">107</span>, <span class="number">61</span>, -<span class="number">39</span>, <span class="number">87</span>, <span class="number">100</span>, -<span class="number">67</span>, <span class="number">64</span>, -<span class="number">64</span>, <span class="number">18</span>, <span class="number">61</span>, -<span class="number">87</span>, <span class="number">110</span>, -<span class="number">126</span>, <span class="number">60</span>, -<span class="number">62</span>, -<span class="number">24</span>, <span class="number">15</span>, -<span class="number">67</span>, -<span class="number">122</span>, <span class="number">106</span>, -<span class="number">127</span>, <span class="number">61</span>, <span class="number">35</span>, -<span class="number">4</span>, -<span class="number">51</span>, <span class="number">61</span>, -<span class="number">40</span>, -<span class="number">81</span>, <span class="number">55</span>, -<span class="number">67</span>, -<span class="number">111</span>, -<span class="number">5</span>, <span class="number">43</span>, -<span class="number">68</span>, <span class="number">65</span>, -<span class="number">51</span>, <span class="number">2</span>, -<span class="number">66</span>, -<span class="number">13</span>, <span class="number">60</span>, <span class="number">45</span>, <span class="number">61</span>, -<span class="number">108</span>, -<span class="number">109</span>, -<span class="number">6</span>, -<span class="number">68</span>, -<span class="number">73</span>, <span class="number">53</span>, <span class="number">21</span>, -<span class="number">67</span>, -<span class="number">68</span>, <span class="number">36</span>, -<span class="number">58</span>, -<span class="number">67</span>, -<span class="number">112</span>, -<span class="number">83</span>, <span class="number">1</span>, <span class="number">61</span>, -<span class="number">98</span>, <span class="number">45</span>, -<span class="number">5</span>, -<span class="number">67</span>, -<span class="number">61</span>, -<span class="number">59</span>, -<span class="number">63</span>, <span class="number">61</span>, <span class="number">82</span>, -<span class="number">107</span>, <span class="number">27</span>, <span class="number">61</span>, -<span class="number">20</span>, <span class="number">2</span>, -<span class="number">109</span>, <span class="number">61</span>, -<span class="number">37</span>, <span class="number">56</span>, <span class="number">26</span>, -<span class="number">67</span>, <span class="number">106</span>, -<span class="number">119</span>, -<span class="number">33</span>, -<span class="number">68</span>, -<span class="number">7</span>, <span class="number">75</span>, -<span class="number">14</span>, <span class="number">58</span>, <span class="number">64</span>, -<span class="number">76</span>, <span class="number">3</span>, -<span class="number">67</span>, <span class="number">41</span>, -<span class="number">35</span>, <span class="number">38</span>, -<span class="number">67</span>, -<span class="number">51</span>, -<span class="number">24</span>, <span class="number">60</span>, -<span class="number">68</span>, <span class="number">44</span>, <span class="number">67</span>, <span class="number">11</span>, -<span class="number">67</span>, <span class="number">87</span>, <span class="number">103</span>, <span class="number">108</span>, <span class="number">60</span>, -<span class="number">12</span>, -<span class="number">5</span>, <span class="number">84</span>, <span class="number">61</span>, -<span class="number">2</span>, <span class="number">70</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">54</span>, <span class="number">41</span>, -<span class="number">67</span>, -<span class="number">68</span>, <span class="number">16</span>, <span class="number">107</span>, -<span class="number">85</span>, -<span class="number">68</span>, -<span class="number">21</span>, -<span class="number">29</span>, -<span class="number">14</span>, -<span class="number">67</span>, <span class="number">61</span>, -<span class="number">107</span>, <span class="number">6</span>, -<span class="number">66</span>, -<span class="number">56</span>, -<span class="number">74</span>, -<span class="number">40</span>, -<span class="number">67</span>, -<span class="number">77</span>, <span class="number">30</span>, -<span class="number">17</span>, -<span class="number">68</span>, -<span class="number">61</span>, -<span class="number">56</span>, -<span class="number">85</span>, <span class="number">60</span>, -<span class="number">79</span>, <span class="number">81</span>, -<span class="number">120</span>, -<span class="number">67</span>, -<span class="number">5</span>, -<span class="number">45</span>, <span class="number">108</span>, -<span class="number">67</span>, <span class="number">102</span>, -<span class="number">54</span>, -<span class="number">71</span>, <span class="number">60</span>, <span class="number">82</span>, <span class="number">62</span>, <span class="number">4</span>, <span class="number">61</span>, -<span class="number">107</span>, -<span class="number">12</span>, <span class="number">80</span>, <span class="number">61</span>, <span class="number">93</span>, <span class="number">20</span>, -<span class="number">99</span>, -<span class="number">68</span>, -<span class="number">92</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">59</span>, -<span class="number">24</span>, -<span class="number">76</span>, <span class="number">5</span>, -<span class="number">67</span>, -<span class="number">29</span>, -<span class="number">13</span>, <span class="number">44</span>, <span class="number">61</span>, -<span class="number">95</span>, -<span class="number">93</span>, -<span class="number">44</span>, -<span class="number">68</span>, <span class="number">82</span>, -<span class="number">108</span>, <span class="number">25</span>, -<span class="number">67</span>, -<span class="number">101</span>, <span class="number">93</span>, <span class="number">53</span>, <span class="number">60</span>, -<span class="number">119</span>, -<span class="number">59</span>, <span class="number">11</span>, <span class="number">61</span>, <span class="number">11</span>, <span class="number">67</span>, -<span class="number">38</span>, <span class="number">60</span>, <span class="number">93</span>, -<span class="number">107</span>, -<span class="number">123</span>, <span class="number">60</span>, <span class="number">9</span>, -<span class="number">18</span>, <span class="number">29</span>, -<span class="number">67</span>, -<span class="number">24</span>, -<span class="number">33</span>, -<span class="number">84</span>, <span class="number">61</span>, <span class="number">5</span>, -<span class="number">47</span>, -<span class="number">116</span>, -<span class="number">67</span>, <span class="number">38</span>, -<span class="number">97</span>, -<span class="number">62</span>, -<span class="number">67</span>, <span class="number">101</span>, -<span class="number">26</span>, <span class="number">30</span>, <span class="number">60</span>, -<span class="number">79</span>, <span class="number">85</span>, -<span class="number">66</span>, <span class="number">61</span>, -<span class="number">64</span>, <span class="number">76</span>, -<span class="number">8</span>, <span class="number">60</span>, -<span class="number">110</span>, -<span class="number">112</span>, -<span class="number">126</span>, <span class="number">58</span>, <span class="number">32</span>, -<span class="number">5</span>, -<span class="number">1</span>, <span class="number">59</span>, -<span class="number">67</span>, -<span class="number">105</span>, <span class="number">15</span>, -<span class="number">66</span>, -<span class="number">126</span>, -<span class="number">23</span>, -<span class="number">77</span>, <span class="number">61</span>, -<span class="number">95</span>, -<span class="number">37</span>, <span class="number">33</span>, <span class="number">60</span>, -<span class="number">44</span>, -<span class="number">80</span>, -<span class="number">9</span>, -<span class="number">69</span>, -<span class="number">59</span>, -<span class="number">15</span>, -<span class="number">101</span>, -<span class="number">67</span>, <span class="number">52</span>, -<span class="number">27</span>, -<span class="number">82</span>, <span class="number">60</span>, <span class="number">94</span>, <span class="number">100</span>, <span class="number">6</span>, -<span class="number">68</span>, -<span class="number">58</span>, -<span class="number">79</span>, <span class="number">114</span>, -<span class="number">68</span>, -<span class="number">109</span>, <span class="number">16</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">94</span>, -<span class="number">106</span>, <span class="number">0</span>, -<span class="number">67</span>, <span class="number">86</span>, -<span class="number">42</span>, -<span class="number">22</span>, -<span class="number">68</span>, -<span class="number">96</span>, <span class="number">107</span>, -<span class="number">92</span>, -<span class="number">67</span>, -<span class="number">86</span>, <span class="number">121</span>, <span class="number">64</span>, <span class="number">61</span>, -<span class="number">120</span>, -<span class="number">75</span>, -<span class="number">63</span>, -<span class="number">67</span>, -<span class="number">105</span>, -<span class="number">92</span>, <span class="number">85</span>, -<span class="number">67</span>, <span class="number">93</span>, <span class="number">120</span>, <span class="number">34</span>, -<span class="number">67</span>, -<span class="number">54</span>, <span class="number">12</span>, -<span class="number">28</span>, -<span class="number">68</span>, <span class="number">23</span>, <span class="number">43</span>, <span class="number">16</span>, -<span class="number">67</span>, -<span class="number">120</span>, <span class="number">89</span>, <span class="number">47</span>, -<span class="number">68</span>, <span class="number">56</span>, <span class="number">126</span>, <span class="number">15</span>, <span class="number">62</span>, -<span class="number">18</span>, <span class="number">42</span>, -<span class="number">99</span>, <span class="number">60</span>, -<span class="number">11</span>, <span class="number">52</span>, <span class="number">28</span>, <span class="number">61</span>, -<span class="number">84</span>, <span class="number">123</span>, <span class="number">118</span>, -<span class="number">67</span>, <span class="number">117</span>, <span class="number">36</span>, <span class="number">16</span>, <span class="number">62</span>, -<span class="number">59</span>, <span class="number">28</span>, -<span class="number">61</span>, <span class="number">61</span>, -<span class="number">95</span>, <span class="number">122</span>, <span class="number">102</span>, <span class="number">61</span>, <span class="number">60</span>, <span class="number">38</span>, -<span class="number">99</span>, <span class="number">61</span>, -<span class="number">38</span>, -<span class="number">80</span>, <span class="number">32</span>, -<span class="number">68</span>, <span class="number">118</span>, <span class="number">69</span>, -<span class="number">65</span>, -<span class="number">67</span>, -<span class="number">7</span>, -<span class="number">33</span>, <span class="number">9</span>, <span class="number">61</span>, <span class="number">9</span>, <span class="number">36</span>, -<span class="number">13</span>, <span class="number">61</span>, -<span class="number">61</span>, -<span class="number">87</span>, -<span class="number">66</span>, <span class="number">61</span>, <span class="number">112</span>, <span class="number">114</span>, -<span class="number">124</span>, <span class="number">61</span>, <span class="number">29</span>, <span class="number">112</span>, -<span class="number">111</span>, -<span class="number">67</span>, -<span class="number">39</span>, <span class="number">91</span>, <span class="number">0</span>, -<span class="number">66</span>, <span class="number">121</span>, -<span class="number">38</span>, -<span class="number">55</span>, -<span class="number">67</span>, -<span class="number">63</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">61</span>, -<span class="number">51</span>, <span class="number">89</span>, -<span class="number">115</span>, -<span class="number">67</span>, <span class="number">28</span>, -<span class="number">74</span>, <span class="number">58</span>, <span class="number">60</span>, <span class="number">14</span>, <span class="number">122</span>, -<span class="number">105</span>, -<span class="number">67</span>, <span class="number">84</span>, <span class="number">108</span>, <span class="number">5</span>, -<span class="number">66</span>, -<span class="number">91</span>, <span class="number">35</span>, -<span class="number">41</span>, <span class="number">61</span>, <span class="number">100</span>, <span class="number">13</span>, -<span class="number">38</span>, <span class="number">61</span>, -<span class="number">33</span>, <span class="number">125</span>, <span class="number">85</span>, -<span class="number">68</span>, <span class="number">93</span>, <span class="number">25</span>, -<span class="number">111</span>, -<span class="number">67</span>, <span class="number">107</span>, -<span class="number">30</span>, <span class="number">37</span>, -<span class="number">67</span>, <span class="number">63</span>, -<span class="number">117</span>, <span class="number">57</span>, <span class="number">60</span>, -<span class="number">1</span>, <span class="number">68</span>, <span class="number">48</span>, <span class="number">61</span>, -<span class="number">115</span>, <span class="number">5</span>, -<span class="number">120</span>, <span class="number">61</span>, -<span class="number">26</span>, <span class="number">50</span>, -<span class="number">103</span>, <span class="number">60</span>, -<span class="number">60</span>, <span class="number">39</span>, -<span class="number">122</span>, <span class="number">61</span>, <span class="number">84</span>, <span class="number">117</span>, -<span class="number">71</span>, -<span class="number">69</span>, <span class="number">29</span>, <span class="number">98</span>, <span class="number">110</span>, <span class="number">61</span>, <span class="number">54</span>, <span class="number">108</span>, -<span class="number">67</span>, -<span class="number">67</span>, -<span class="number">115</span>, -<span class="number">125</span>, -<span class="number">111</span>, <span class="number">61</span>, -<span class="number">117</span>, <span class="number">91</span>, -<span class="number">99</span>, <span class="number">60</span>, <span class="number">68</span>, -<span class="number">79</span>, -<span class="number">112</span>, -<span class="number">67</span>, <span class="number">16</span>, -<span class="number">67</span>, -<span class="number">122</span>, -<span class="number">68</span>, <span class="number">62</span>, -<span class="number">26</span>, -<span class="number">8</span>, <span class="number">60</span>, -<span class="number">57</span>, <span class="number">79</span>, <span class="number">105</span>, -<span class="number">68</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">48</span>, -<span class="number">67</span>, <span class="number">41</span>, <span class="number">9</span>, <span class="number">123</span>, <span class="number">61</span>, -<span class="number">29</span>, -<span class="number">61</span>, -<span class="number">97</span>, -<span class="number">69</span>, -<span class="number">95</span>, <span class="number">84</span>, <span class="number">114</span>, -<span class="number">67</span>, -<span class="number">45</span>, <span class="number">11</span>, -<span class="number">6</span>, -<span class="number">68</span>, -<span class="number">90</span>, -<span class="number">107</span>, -<span class="number">90</span>, -<span class="number">68</span>, <span class="number">119</span>, -<span class="number">122</span>, <span class="number">82</span>, -<span class="number">67</span>, -<span class="number">58</span>, -<span class="number">71</span>, -<span class="number">122</span>, <span class="number">60</span>, -<span class="number">42</span>, -<span class="number">102</span>, <span class="number">120</span>, <span class="number">60</span>, <span class="number">56</span>, <span class="number">58</span>, <span class="number">105</span>, -<span class="number">67</span>, <span class="number">32</span>, -<span class="number">99</span>, -<span class="number">49</span>, <span class="number">61</span>, -<span class="number">67</span>, <span class="number">108</span>, <span class="number">56</span>, <span class="number">60</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>获得对比图片的人信息</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//初始化引擎</span></span><br><span class="line">        EngineConfiguration engineConfiguration = <span class="keyword">new</span> EngineConfiguration();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//检测模式设置</span></span><br><span class="line">        <span class="comment">//这里因为我们是对图片进行人脸识别，因此这里我们使用一个IMAGE模式</span></span><br><span class="line">        engineConfiguration.setDetectMode(DetectMode.ASF_DETECT_MODE_IMAGE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//可检测图片人脸方向设置</span></span><br><span class="line">        engineConfiguration.setDetectFaceOrientPriority(DetectOrient.ASF_OP_ALL_OUT);<span class="comment">//这里我设置的是全方位角设置</span></span><br><span class="line">        engineConfiguration.setDetectFaceMaxNum(<span class="number">40</span>);<span class="comment">//最大识别人脸数量</span></span><br><span class="line">        engineConfiguration.setDetectFaceScaleVal(<span class="number">16</span>);<span class="comment">//识别等级</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置引擎功能</span></span><br><span class="line">        <span class="comment">//功能配置，可以设置面容识别时是否分析年龄、性别、3d等。</span></span><br><span class="line">        FunctionConfiguration functionConfiguration = <span class="keyword">new</span> FunctionConfiguration();</span><br><span class="line">        functionConfiguration.setSupportAge(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportFace3dAngle(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportFaceDetect(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportFaceRecognition(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportGender(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportLiveness(<span class="keyword">true</span>);</span><br><span class="line">        functionConfiguration.setSupportIRLiveness(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        engineConfiguration.setFunctionConfiguration(functionConfiguration);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化引擎 (将配置设置到引擎中)</span></span><br><span class="line">        errorCode = faceEngine.init(engineConfiguration);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (errorCode != ErrorInfo.MOK.getValue()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;引擎初始化失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=================以下是aaa.jpg的数据========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//图片所在的文件路径</span></span><br><span class="line">        String fileUrl = <span class="string">&quot;D:\\AreFace\\AreFaceTest\\&quot;</span>;</span><br><span class="line">        <span class="comment">//文件名称</span></span><br><span class="line">        String fileName = <span class="string">&quot;aaa.jpg&quot;</span>;</span><br><span class="line">        File file1 = <span class="keyword">new</span> File(fileUrl + fileName);</span><br><span class="line">        ImageInfo imageInfo = getRGBData(file1);</span><br><span class="line">        <span class="comment">//获得一个图片里的所有人脸信息</span></span><br><span class="line">        List&lt;FaceInfo&gt; faceInfos = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        faceEngine.detectFaces(imageInfo.getImageData(), imageInfo.getWidth(),imageInfo.getHeight() ,imageInfo.getImageFormat(),faceInfos);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得feature</span></span><br><span class="line">        FaceFeature faceFeature1 = <span class="keyword">new</span> FaceFeature();</span><br><span class="line">        faceEngine.extractFaceFeature(imageInfo.getImageData(), imageInfo.getWidth(),imageInfo.getHeight() ,imageInfo.getImageFormat(),faceInfos.get(<span class="number">0</span>),faceFeature1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出特征值</span></span><br><span class="line">        System.out.println(Arrays.toString(faceFeature1.getFeatureData()));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>调用方法进行对比获得相似度</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//调用程序 通过对比faceFeature 获得脸部信息的相似度</span></span><br><span class="line">        FaceSimilar faceSimilar = <span class="keyword">new</span> FaceSimilar();</span><br><span class="line">        faceEngine.compareFaceFeature(faceFeature,faceFeature1,faceSimilar);</span><br><span class="line">        <span class="comment">//输出相似度 大抵应该是1</span></span><br><span class="line">        System.out.println(faceSimilar.getScore());</span><br></pre></td></tr></table></figure>

<p><strong>这种方法的结果</strong></p>
<p><a href="https://imgse.com/i/xWvDEt"><img src="https://s1.ax1x.com/2022/10/26/xWvDEt.png" alt="xWvDEt.png"></a></p>
<p><strong>正常两张图片对比的结果</strong></p>
<p><a href="https://imgse.com/i/xWvrUP"><img src="https://s1.ax1x.com/2022/10/26/xWvrUP.png" alt="xWvrUP.png"></a></p>
<p>一模一样 可以说是成功了</p>
<h2 id="人脸识别类型"><a href="#人脸识别类型" class="headerlink" title="人脸识别类型"></a>人脸识别类型</h2><p>根据官网介绍，人脸识别大致可以分为两种</p>
<ul>
<li>你是谁 （一对多）</li>
<li>你是不是照片上这个人（一对一）</li>
</ul>
<h3 id="对于“你是谁”问题"><a href="#对于“你是谁”问题" class="headerlink" title="对于“你是谁”问题"></a>对于“你是谁”问题</h3><p>“你是谁”在我的想法里，是一个一对多的过程，很多人的照片faceFeature存储在一个数据库中，当有人上传了他的照片，到数据库中找数据，查找到相似度最高<strong>且超过阈值</strong>的人，认为是查找到的人。</p>
<p><strong>阈值：</strong>即相似度，对于这个相似度的把控，我还没有查询到资料，不知道多少合适暂定为0.9</p>
<h3 id="对于”是不是你”问题"><a href="#对于”是不是你”问题" class="headerlink" title="对于”是不是你”问题"></a>对于”是不是你”问题</h3><p>这个问题很明显是一个一对一问题，而且很好操作，是一对多题的简化。</p>
]]></content>
  </entry>
  <entry>
    <title>使用子查询</title>
    <url>/2021/12/16/%E4%BD%BF%E7%94%A8%E5%AD%90%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="使用子查询"><a href="#使用子查询" class="headerlink" title="使用子查询"></a>使用子查询</h1><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p><strong>查询</strong>：任何SQL语句都是查询。但此术语一般指SELECT语句</p>
<h2 id="利用子查询进行过滤"><a href="#利用子查询进行过滤" class="headerlink" title="利用子查询进行过滤"></a>利用子查询进行过滤</h2><p>通过多重的子查询，可以实现从多个表格中调用其中的某些列</p>
<p><strong>使用子查询的原理</strong>：在SELECT语句中，子查询总是从内向外处理。在处理上面的SELECT语句时，MySQL实际上执行了两个操作。</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 表格1中的列名</span><br><span class="line">FROM 表格1</span><br><span class="line">WHERE 列名 IN(</span><br><span class="line">		SELECT 表格2中的列名</span><br><span class="line">		FROM 表格2</span><br><span class="line">		WHERE 限制条件);</span><br></pre></td></tr></table></figure>

<p>从上边的语法结构可以看出，子查询的套用就是用另一个SELECT子句来替换了WHERE子句的过滤的作用</p>
<p><strong>格式化SQL</strong>：包含子查询的SELECT语句难以阅读和调试，特别是它们较为复杂时更是如此。如上所示把子查询分解为多行并且适当地进行缩进，能极大地简化子查询的使用。</p>
<p>在WHERE子句中使用子查询能够编写出功能很强并且很灵活地SQL语句。对于能嵌套的子查询的数目没有限制。</p>
<p><strong>子嵌套的要求</strong>：</p>
<p>列必须匹配，在WHERE子句中使用子查询应该保证SELECT语句具有与WHERE子句中相同数目的列。</p>
<h2 id="作为计算字段使用子查询"><a href="#作为计算字段使用子查询" class="headerlink" title="作为计算字段使用子查询"></a>作为计算字段使用子查询</h2><p><strong>相关子查询</strong></p>
<p>涉及外部查询的子查询。这种类型的子查询称为相关子查询。任何时候只要列名可能有多义性，就必须使用这种语法。</p>
]]></content>
  </entry>
  <entry>
    <title>使用数据处理函数</title>
    <url>/2021/12/16/%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="使用数据处理函数"><a href="#使用数据处理函数" class="headerlink" title="使用数据处理函数"></a>使用数据处理函数</h1><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>与其他计算机语言一样，SQL支持利用函数来处理数据。</p>
<h2 id="使用函数"><a href="#使用函数" class="headerlink" title="使用函数"></a>使用函数</h2><ul>
<li>用于处理文本串（如删除或填充值，转换值为大写或小写）的文本函数</li>
<li>用于在数值数据上进行算术操作（如返回绝对值，进行代数运算）的数值函数</li>
<li>用于处理日期和时间值并从这些值中提取特点成分（例如，返回两个日期之差，检查日期有效性等）的日期和时间函数</li>
<li>返回DBMS正使用的特殊信息（如返回用户登录信息，检查版本细节）的系统函数</li>
</ul>
<h2 id="文本处理函数"><a href="#文本处理函数" class="headerlink" title="文本处理函数"></a>文本处理函数</h2><p><strong>常见的文本处理函数</strong></p>
<table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Left()</td>
<td>返回串左边的字符</td>
</tr>
<tr>
<td>Length()</td>
<td>返回串的长度</td>
</tr>
<tr>
<td>Locate()</td>
<td>找出串的一个子串</td>
</tr>
<tr>
<td>Lower()</td>
<td>将串转换为小写</td>
</tr>
<tr>
<td>LTrim()</td>
<td>去掉串左边的空格</td>
</tr>
<tr>
<td>Right()</td>
<td>返回串右边的字符</td>
</tr>
<tr>
<td>RTrim()</td>
<td>去掉串右边的空格</td>
</tr>
<tr>
<td>Soundex()</td>
<td>返回串的SOUNDEX值</td>
</tr>
<tr>
<td>SubString()</td>
<td>返回子串的字符</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Upper()</td>
<td>将串转换为大写</td>
</tr>
</tbody></table>
<p><strong>重点</strong>：我们这里要注意一个非常有去的函数<strong>Soundex</strong>函数</p>
<p>**SOUNDEX( )**函数，可以返回发音相同的列值，（应该只限于英文文本）</p>
<h2 id="日期和时间处理函数"><a href="#日期和时间处理函数" class="headerlink" title="日期和时间处理函数"></a>日期和时间处理函数</h2><p><strong>常用日期和时间处理函数</strong></p>
<p>由于MySQL中的日期和时间是采用相应的数据类型和特殊的格式储存，所以，通过函数可以快速且方便地对时间数据进行处理</p>
<p><strong>常用日期和时间处理函数</strong></p>
<table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>AddDate()</td>
<td>增加一个日期</td>
</tr>
<tr>
<td>AddTime()</td>
<td>增加一个时间</td>
</tr>
<tr>
<td>CurDate()</td>
<td>返回当前日期</td>
</tr>
<tr>
<td>CurTime()</td>
<td>返回当前时间</td>
</tr>
<tr>
<td>Date()</td>
<td>返回日期时间的日期部分</td>
</tr>
<tr>
<td>DateDiff()</td>
<td>计算两个日期之差</td>
</tr>
<tr>
<td>Date_Add()</td>
<td>高度灵活地日期运算函数</td>
</tr>
<tr>
<td>Date_Format</td>
<td>返回一个格式化的日期或时间串</td>
</tr>
<tr>
<td>Day()</td>
<td>返回一个日期的天数部分</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>DayOfweek()</td>
<td>对于一个日期，返回对应的星期几</td>
</tr>
<tr>
<td>Hour()</td>
<td>返回一个时间的小时部分</td>
</tr>
<tr>
<td>Minute()</td>
<td>返回一个时间的分钟部分</td>
</tr>
<tr>
<td>Month()</td>
<td>返回一个日期的月份部分</td>
</tr>
<tr>
<td>Now()</td>
<td>返回当前日期和时间</td>
</tr>
<tr>
<td>Second()</td>
<td>返回一个时间的秒部分</td>
</tr>
<tr>
<td>Time()</td>
<td>返回一个日期时间的时间部分</td>
</tr>
<tr>
<td>Year()</td>
<td>返回一个日期的年份部分</td>
</tr>
</tbody></table>
<p><strong>不管是插入或更新表值还是用WHERE子句进行过滤，日期必须为格式yyyy-mm-dd，这样的好处是可以排除多义性</strong></p>
<h2 id="数值处理函数"><a href="#数值处理函数" class="headerlink" title="数值处理函数"></a>数值处理函数</h2><p>数值函数是最一致最统一的函数</p>
<p><strong>常用数值处理函数</strong></p>
<table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Abs()</td>
<td>返回一个数的绝对值</td>
</tr>
<tr>
<td>Cos()</td>
<td>返回一个角度的余弦</td>
</tr>
<tr>
<td>Exp()</td>
<td>返回一个数的指数值</td>
</tr>
<tr>
<td>Mod()</td>
<td>返回除操作的余数</td>
</tr>
<tr>
<td>Pi()</td>
<td>返回圆周率</td>
</tr>
<tr>
<td>Rand()</td>
<td>返回一个随机数</td>
</tr>
<tr>
<td>Sin()</td>
<td>返回一个角度的正弦</td>
</tr>
<tr>
<td>Sqrt()</td>
<td>返回一个数的平方根</td>
</tr>
<tr>
<td>Tan()</td>
<td>返回一个角度的正切</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>某件事是否该做应该由常识决定</title>
    <url>/2022/10/27/%E5%85%B3%E4%BA%8E%E6%98%AF%E5%90%A6%E8%AF%A5%E5%81%9A/</url>
    <content><![CDATA[<h2 id="某件事是否可以做应该由常识决定"><a href="#某件事是否可以做应该由常识决定" class="headerlink" title="某件事是否可以做应该由常识决定"></a>某件事是否可以做应该由常识决定</h2><p>兄弟们，对事不对人。相信兄弟们这三年或多或少都会遇到这种情况：要做一件事，但是这件事会影响其他兄弟的利益，那这件事要不要做，是应该根据“有没有人说不可以”还是根据常识才判断呐？我个人认为应该根据常识来判断这件事是否应该做。</p>
<p>事情比如，午休时间打电话，晚睡时间打电话，午休时间打游戏，晚睡时间打游戏，午休时间刷视频，晚睡时间刷视频，乱丢垃圾等等等等。这些事情都是自己有权力做，做了自己很舒服，但是会影响其他兄弟们利益，让其他兄弟们难受的事。这些事情能不能做就应该通过常识判断，不能通过“今天没人说我这样做不对，那我就可以做”或者“今天有人说我这样做不对，那我就不做”来判断。</p>
<p>如果哪个兄弟做了上边类似的事，会有两种情况。第一种，其他的兄弟有可能会出来说“不可以这样做”，结果可能是被制止的人停止了，心里感到愧疚，下次注意，也可能是被制止的人心里感到愤怒“我有做这件事的权利，凭啥不让我做，事情真多”，下次如果没有人说，就理所应当施行自己认为的“权利”。第二种情况是，有的兄弟性格内向，为了维持表面上的平和，想说，但是憋在心里不说，这种情况的结果是，这些利益受到侵害的兄弟们内心堵得慌，产生怨气，室友之间只是表面上的亲近，可是做了这件事的兄弟，并不觉得自己做错了，并认为自己可以这样做，当成了一种习惯。矛盾越积越多，不知道什么时候就爆发，不利于室友之间的团结。</p>
<p>如果我们在做一件会影响到别人利益的事前，通过常识想一下，就能避免这种情况。比如，中午1点-2点甚至到3点，都会有好兄弟想睡觉，做事前想考虑一下会不会产生很大的噪音，一般的低声没人说什么的，如果有好兄弟说“能不能别做了”，那一定是被吵醒了。</p>
<p>凌晨11点30开始，相信有些兄弟就想睡觉了，但是没有睡觉的环境，只能困着，等着，等着寝室安静下来再去睡觉。对于睡眠质量好的兄弟们还好，对于睡眠质量差的兄弟们，相信每天不到7个小时的睡眠是不够的。（每周三到我值日的时候我都会扫地，地上倒是没有很多垃圾，但是头发毛发很多，跟睡眠质量很大相关）其他的只有利于自己，影响其他兄弟们的事情也可以这样考虑是否该做。</p>
<p>最后，总结一下。如果某次没人说“这件事不能做”，不代表这件事这次可以做，更不代表这件事以后永远可以做。如果有人说“这件事不能做”，不代表着这件事他不在的时候可以做，也不代表着以后他在但是没说所以可以做。</p>
<p>兄弟们通过常识判断一件事该不该做，相信寝室矛盾会减少的。</p>
]]></content>
  </entry>
  <entry>
    <title>关于《生死疲劳》一书部分情节的疑问</title>
    <url>/2022/08/02/%E5%85%B3%E4%BA%8E%E7%94%9F%E6%AD%BB%E7%96%B2%E5%8A%B3%E4%B8%80%E4%B9%A6%E7%9A%84%E7%96%91%E9%97%AE/</url>
    <content><![CDATA[<h1 id="关于《生死疲劳》一书部分情节的疑问"><a href="#关于《生死疲劳》一书部分情节的疑问" class="headerlink" title="关于《生死疲劳》一书部分情节的疑问"></a>关于《生死疲劳》一书部分情节的疑问</h1><p>近期，网上有关于莫言文章是否有问题的讨论很多，我所看过的有</p>
<p><strong>司马南先生对莫言颁奖词的解读：</strong> <a href="https://www.bilibili.com/video/BV1bB4y147ur?spm_id_from=333.337.search-card.all.click&vd_source=0ea52ecf6dd9b65e39169fa227f46435">司马南：莫言是这样获奖的，解读诺贝尔文学奖颁奖词_哔哩哔哩_bilibili</a> </p>
<p><strong>前进四对莫言红高粱中不实片段的批判：</strong> <a href="https://www.bilibili.com/video/BV1oU4y1v7y7?spm_id_from=333.337.search-card.all.click">反对历史虚无主义！五万字文稿浓缩版！对吃粥饭和莫言的批判！_哔哩哔哩_bilibili</a> </p>
<p><strong>前进四对UP“吃粥饭”对自己批判的批判：</strong> <a href="https://www.bilibili.com/video/BV1Ag411179V?spm_id_from=333.337.search-card.all.click">吃粥饭如何断章取义 歪曲历史 虚空批判 洗白莫言-4-看历史虚无主义者如何把你一步步忽悠瘸了。对吃粥饭对我之虚空批判的严肃批判！_哔哩哔哩_bilibili</a></p>
<p><strong>李敖谈诺贝尔文学奖：你要出卖自己的祖国，你才有机会获得！：</strong> <a href="https://www.bilibili.com/video/BV1k3411M7Ut?p=1&share_plat=android&share_session_id=2f4fbbf3-e044-473b-afd1-faf92efe56ac&share_tag=s_i&unique_k=xTbJaDO&vd_source=0ea52ecf6dd9b65e39169fa227f46435">李敖谈诺贝尔文学奖：你要出卖自己的祖国，你才有机会获得！_哔哩哔哩_bilibili</a> </p>
<p>对于莫言的作品，我只看过《生死疲劳》，我不懂什么历史虚无主义，不清楚我要说明的问题是否是1历史虚无主义造成的，但是我对书中的一些情节有深深的疑问。</p>
<h2 id="西门闹被枪毙"><a href="#西门闹被枪毙" class="headerlink" title="西门闹被枪毙"></a>西门闹被枪毙</h2><p>文中西门闹自述自己是：<strong>”热爱劳动，勤俭持家，修桥补路，乐善好施……..一个正直的人，一个善良的人，一个大好人“</strong></p>
<p>在被民兵队长黄瞳枪毙前询问：<strong>“我到底反了哪条律令。”</strong>黄瞳的回答是：<strong>“你导演王那里去问个明白吧”</strong></p>
<p>此后，全文再也没有提过关于西门闹反了什么罪，为何被枪毙。<strong>因此，这是作者在暗示，西门闹就是惨死，死的不明不白。</strong></p>
<p>同样的话，在西门闹被阎王审问时，通过阎王的嘴说了出来：<strong>“好了，西门闹，我知道你是冤枉的。世界上许多人该死，但却不死；许多人不该死，偏偏死了……”</strong></p>
<p>==<strong>“许多人”，“冤枉”，“民兵”，“枪毙”</strong>==</p>
<p>这几个关键词放到这里，给人的感觉是，中共在执行土地革命时，有大量的“矫枉过正”行为，对于地主不分好坏一股脑全部枪毙，造成了很多人的冤死。</p>
<p>对于此，我表示怀疑，我曾经自己解释过，中国这么大，会不会真的有地方发生这种事，但是如果这样解释，就陷入了<strong>历史虚无主义</strong>的陷阱，我们要用史实来思考问题。</p>
<p>在<strong>《毛泽东选集（第一卷）》</strong>的<strong>《湖南农民运动考察报告》</strong>中有描写当时农民运动的情景：</p>
<ul>
<li><p>打倒土豪劣绅，一切权力归农会</p>
</li>
<li><p>所谓的“过分问题”<img src="/dwx-tx.github.io/2022/08/02/%E5%85%B3%E4%BA%8E%E7%94%9F%E6%AD%BB%E7%96%B2%E5%8A%B3%E4%B8%80%E4%B9%A6%E7%9A%84%E7%96%91%E9%97%AE/Users\Lenovo\AppData\Roaming\Typora\typora-user-images\1659391653500.png" alt="1659391653500"></p>
</li>
<li><p>政治上打压地主</p>
</li>
<li><p>经济上打压地主</p>
</li>
</ul>
<p>这篇考察报告说明了在第一次国民革命时期，湖南农民运动的样貌。</p>
<p>农民运动是农民参与的，农民为主体的运动，农民对当地的地主进行评价，做得当时<strong>小资产阶级</strong>看来<strong>恐怖得不得了</strong>的事情也不过是，<strong>戴高帽子游乡，到小姐少奶奶的牙床上滚一滚……..</strong></p>
<p>在<strong>《白鹿原》</strong>一文中，对于地主的审判，也是组织农会，让农民参与，让农民批判地主，在农会对地主批判最高潮的时候，有农民提出铡刀铡死地主，但是被农会会长制止了。</p>
<p>由此，我并没有看到描写民兵等等，恶意杀人事件，土地革命有固定流程，也没有最后“枪毙地主”这一项。</p>
<p>土地革命的目的是：<strong>没收地主土地，归还给贫下中农</strong>，地主在被没收土地后，理论上还是<strong>富</strong></p>
<p><strong>那么有没有被打死的地主？</strong></p>
<p>有的，部分地主不接受革命，组织武装镇压革命，打死打伤民兵，这种地主不该死吗？压迫农民获得的财富，买来枪炮镇压农民不该死吗？</p>
<p>部分地主子女组织成<strong>还乡团</strong>，回到家乡打死<strong>烧杀抢掠</strong>，（ <a href="https://www.bilibili.com/video/BV1rL411P7on?spm_id_from=333.999.0.0">“还乡团”为什么如此残忍？_哔哩哔哩_bilibili</a> ），这种人不该死吗？</p>
<p>因此我得到的结论，农民有自己判断的能力，枪毙的都是不愿合作的且品行及其暴烈的。莫言先生笔下写的确是，中共为了打土豪滥杀无辜，不知道莫言先生如何解释。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/%E5%88%9B%E5%BB%BA%E8%AE%A1%E7%AE%97%E5%AD%97%E6%AE%B5/</url>
    <content><![CDATA[<h1 id="创建计算字符"><a href="#创建计算字符" class="headerlink" title="创建计算字符"></a>创建计算字符</h1><p><strong>字段</strong>：基本上与列的意思相同，经常互换使用，不过数据库列一般称为列，而术语字段通常用在计算字段的连接上</p>
<h2 id="拼接字段"><a href="#拼接字段" class="headerlink" title="拼接字段"></a>拼接字段</h2><p><strong>拼接</strong>：将值联结到一起构成单个值</p>
<p>在MySQL的SELECT语句中，可以1使用Concat()函数来拼接两个列。</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT Concat(列名,&#x27; (&#x27;,列名,&#x27;)&#x27;)</span><br><span class="line">FROM 表格</span><br><span class="line">ORDER BY 列名;</span><br></pre></td></tr></table></figure>

<p><strong>元素分析</strong>：Concat( )拼接串，即把多个串连接起来形成一个较长的串</p>
<p>Concat( )需要一个或多个指定的串，各个串之间用逗号分隔。上边的SELECT语句连接需要以下四个元素：</p>
<ul>
<li>存储在XX列中的名字</li>
<li>包含一个空格和一个左圆括号的串；</li>
<li>存储在XX列中元素；</li>
<li>包含一个右圆括号的串</li>
</ul>
<p>删除数据右侧多余的空格来整理数据，用RTrim()函数来实现</p>
<p>RTrim（）函数去掉值右边的所有空格。通过使用RTrim()对列进行整理。</p>
<p>LTrim（）函数去掉值左边的所有空格。</p>
<h2 id="使用别名"><a href="#使用别名" class="headerlink" title="使用别名"></a>使用别名</h2><p><strong>别名</strong>：是一个字段或值得替换名。</p>
<p>别名需要使用AS关键字赋予</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT Concat(列名,&#x27; (&#x27;,RTrim,&#x27;)&#x27;) AS 别名</span><br><span class="line">FROM 表格</span><br><span class="line">ORDER BY 列名;</span><br></pre></td></tr></table></figure>

<p>如果没使用列名，客户机不能使用被拼接的字符，而使用别名后，客户机就能对其进行引用了。</p>
<h2 id="执行算术计算"><a href="#执行算术计算" class="headerlink" title="执行算术计算"></a>执行算术计算</h2><p>可以对列中的数值进行算术计算。</p>
<p><strong>MySQL算术操作符</strong></p>
<table>
<thead>
<tr>
<th>操作符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>加</td>
</tr>
<tr>
<td>-</td>
<td>减</td>
</tr>
<tr>
<td>*</td>
<td>乘</td>
</tr>
<tr>
<td>/</td>
<td>除</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>创建高级联结</title>
    <url>/2021/12/16/%E5%88%9B%E5%BB%BA%E9%AB%98%E7%BA%A7%E8%81%94%E7%BB%93/</url>
    <content><![CDATA[<h2 id="使用表别名"><a href="#使用表别名" class="headerlink" title="使用表别名"></a>使用表别名</h2><p>别名除了用于列名和计算字段外，SQL还允许给表名起别名。这主要有两个方面：</p>
<ul>
<li>缩短SQL语句</li>
<li>允许在单条SELECT语句中多次使用相同的表</li>
</ul>
<p>表另名只在查询执行中使用。与列别名不一样，表别名不返回到客户机。</p>
<h2 id="使用不同类型的联结"><a href="#使用不同类型的联结" class="headerlink" title="使用不同类型的联结"></a>使用不同类型的联结</h2><p>我们将内部联结或等值联结的简单联结。其他的三种其外联结，它们是自联结、自然联结和外部联结。</p>
<h3 id="自联结"><a href="#自联结" class="headerlink" title="自联结"></a>自联结</h3><p>在单条SELECT语句中不止一次引用相同的表。</p>
<p><strong>用自联结而不用子联结</strong>：自联结通常作为外部语句用来代替从相同表中检索数据时使用的子查询语句。虽然最终的结果是相同的，但有时候处理联结远比处理子查询快的多。</p>
<h3 id="自然联结"><a href="#自然联结" class="headerlink" title="自然联结"></a>自然联结</h3><p>标准的联结返回所有数据，甚至相同的列多次出现。自然联结排除多次出现，每个列只返回一次。</p>
<p>自然联结是这样一种联结，其中你只能悬着那些唯一的列。这一般是通过对表使用通配符（SELECT*），对所有其他表的列使用明确的子集完成的。</p>
<p> <strong>通配符只能对第一个表使用</strong></p>
<h3 id="外部联结"><a href="#外部联结" class="headerlink" title="外部联结"></a>外部联结</h3><p>外部联结：联结包含了那些在相关表中没有关联行的行</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 全称列名1，全称列名2</span><br><span class="line">FROM 第一个表格 LEFT OUTER JOIN 第二个表格</span><br><span class="line">ON 条件（联结条件）;</span><br></pre></td></tr></table></figure>

<p>其中，OUT JOIN是来指定联结的类型的</p>
<p>在使用OUTER JOIN语法时，必须使用RIGHT或LEFT关键字指定包括所有行的表（RIGHT指出的是OUTER JOIN右边的表，而LEFT JOIN指出的是OUTER JOIN左边的表）</p>
<h2 id="使用带聚集函数的联结"><a href="#使用带聚集函数的联结" class="headerlink" title="使用带聚集函数的联结"></a>使用带聚集函数的联结</h2><p>聚集函数可以与联结一起使用。</p>
<p>在SELECT语句中，可以使用COUNT（）函数等等函数。</p>
<h2 id="使用联结和联结条件"><a href="#使用联结和联结条件" class="headerlink" title="使用联结和联结条件"></a>使用联结和联结条件</h2><ul>
<li>注意所使用对的联结类型。一般我们使用内部联结，但使用外部联结也是有效的</li>
<li>保证正确的联结条件，否则将返回不正确的数据</li>
<li>应该总是提供联结条件，否则会得出笛卡尔而积（将返回所有列的结合）</li>
<li>在一个联结中可以包含多个表，甚至对于每个联结可以采用不用的联结类型。虽然这样做是合法的，一般也是很有用的，但应该在测试他们前分别测试每个联结。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/%E5%88%86%E7%BB%84%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="分组数据"><a href="#分组数据" class="headerlink" title="分组数据"></a>分组数据</h1><h2 id="数据分组"><a href="#数据分组" class="headerlink" title="数据分组"></a>数据分组</h2><p>我们使用汇总数据可以实现对行的计数、计算求和、求平均值、获得最小值或最大值。</p>
<p><strong>分组允许我们把数据分为多个逻辑组，以便对每个分组进行聚类运算</strong></p>
<h2 id="创建分组"><a href="#创建分组" class="headerlink" title="创建分组"></a>创建分组</h2><p>分组是通过SELECT语句中的<strong>GROUP BY</strong>子句实现的</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列表名 COUNT(*) AS XX</span><br><span class="line">FROM 表格</span><br><span class="line">GROUP BY 列表名;</span><br></pre></td></tr></table></figure>

<p>这样的语法可以实现对列表的分组进行计数汇总</p>
<p><strong>使用GROUP BY子句须知</strong>：</p>
<ul>
<li>GROUP BY子句可以包含任意数目的列。这使得能够对分组进行嵌套，为数据分组提供更细致的控制。</li>
<li>如果在GROUP BY子句中嵌套了分组，数据将在最后规定的分组上进行汇总。换句话说，在建立分组时，指定的所有列都一起计算（所以不能从个别列取回数据）</li>
<li>GROUP BY子句中列出的每个列都必须是检索列或有效的表达式（但不能是聚类函数）。如果SELECT中使用表达式，则必须在GROUP BY子句中使用相同的表达式。<strong>不能使用别名</strong></li>
<li>除聚类计算语句外，<strong>SELECT语句中的每个列都必须在GROUP BY子句中给出</strong></li>
<li>如果分组列中具有NULL值，则NULL将作为一个分组返回。如果列中有多行NULL值，则他们会被分为一组</li>
<li>GROUP BY子句必须在WHERE子句之后，ORDER BY子句之前。</li>
</ul>
<p><strong>对于GROUP BY子句，其还有一个ROLLUP关键字</strong>：使用WHERE ROLLIP关键字，可以得到每个分组以及每个分组汇总级别的值</p>
<h2 id="过滤分组"><a href="#过滤分组" class="headerlink" title="过滤分组"></a>过滤分组</h2><p>有时我们使用ORDER BY语句也能实现视觉上对数据库中某一列的数据进行了分组（将值相同的分到一起）</p>
<p>通过使用WHERE语句似乎也能对数据进行过滤（但这种过滤不是针对组的，而是针对列的）</p>
<p>可这种分组和过滤只是视觉上的，我们并不能对其进行过滤等的操作</p>
<p>真正实现对数据的分组需要用到GROUP BY，真正实现过滤需要用到HAVING</p>
<p><strong>HAVING支持所有的WHERE操作符</strong></p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名 COUNT(*) AS XX</span><br><span class="line">FROM 表格名</span><br><span class="line">GROUP BY 列名</span><br><span class="line">HAVING 条件;</span><br></pre></td></tr></table></figure>

<p>上边的语法就实现的列出符合条件的组的组名以及组值</p>
<p><strong>HAVING与WHERE的区别</strong></p>
<p>由两者语法结构的不同可以看出：</p>
<ul>
<li>HAVING是对分组过得数据进行过滤</li>
<li>WHERE是对分组前的数据进行过滤</li>
</ul>
<h2 id="分组和排序"><a href="#分组和排序" class="headerlink" title="分组和排序"></a>分组和排序</h2><p><strong>总的来说排序可以实现虚假的分组</strong></p>
<p><strong>ORDER与GROUP BY的区别</strong></p>
<table>
<thead>
<tr>
<th>ORDER BY</th>
<th>GROUP BY</th>
</tr>
</thead>
<tbody><tr>
<td>排序产生的输出</td>
<td>分组行，但输出的可能不是分组的顺序</td>
</tr>
<tr>
<td>任意列都可以使用（甚至非排序列都可以使用）</td>
<td>只可能使用选择列或表达式列。而且必须使用每个选择列表达式</td>
</tr>
<tr>
<td>不一定需要</td>
<td>如果与聚类函数一起使用列（或表达式），则必须使用</td>
</tr>
</tbody></table>
<p>由于GROUP BY输出的可能不是分组的顺序，<strong>所以我们要使用ORDER BY</strong>，来实现输出的是正确的排序。</p>
<h2 id="SELECT子句排序"><a href="#SELECT子句排序" class="headerlink" title="SELECT子句排序"></a>SELECT子句排序</h2><table>
<thead>
<tr>
<th>子句</th>
<th>说明</th>
<th>是否必须使用</th>
</tr>
</thead>
<tbody><tr>
<td>SELECT</td>
<td>要返回的列或表达式</td>
<td>是</td>
</tr>
<tr>
<td>FROM</td>
<td>从中检索数据的表</td>
<td>仅在从表选择数据时使用</td>
</tr>
<tr>
<td>WHERE</td>
<td>行级过滤</td>
<td>否</td>
</tr>
<tr>
<td>GROUP BY</td>
<td>分组说明</td>
<td>仅在按组计算聚集时使用</td>
</tr>
<tr>
<td>HAVING</td>
<td>组级过滤</td>
<td>否</td>
</tr>
<tr>
<td>ORDER BY</td>
<td>输出排序顺序</td>
<td>否</td>
</tr>
<tr>
<td>LIMIT</td>
<td>要检索的行数</td>
<td>否</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>对动态规划的浅薄理解</title>
    <url>/2022/03/26/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93%E5%8A%A0%E4%BE%8B%E9%A2%98/</url>
    <content><![CDATA[<h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1><p>动态规划对于一个算法初学整来说并不好懂，但是通过做题和画图推理，是能够发现动态规划问题的共性的。</p>
<h2 id="最大k乘积问题"><a href="#最大k乘积问题" class="headerlink" title="最大k乘积问题"></a>最大k乘积问题</h2><p> <img src="https://s3.bmp.ovh/imgs/2022/03/34086b37dc34dac1.jpg"> </p>
<p><strong>问题分析</strong></p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/03/f89bfc5b00fca813.jpg"> </p>
<p><strong>手推过程</strong></p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/03/1cf3f2e609cb8483.jpg"> </p>
<p><strong>算法实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage3;</span><br><span class="line"></span><br><span class="line"><span class="comment">//十进制数最大k累积</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo3_1</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> k; <span class="comment">//表示子序列分隔的位置</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> i;<span class="comment">//表示数组开始的位置</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> j;<span class="comment">//表示数组结束的位置</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> m;<span class="comment">//表示执行几次划分</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] dp;<span class="comment">//存储数据的数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] l;<span class="comment">//存放我们十进制数的整数数组</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getK</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setK</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.k = k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getI</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setI</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.i = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getJ</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJ</span><span class="params">(<span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.j = j;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] getDp() &#123;</span><br><span class="line">        <span class="keyword">return</span> dp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDp</span><span class="params">(<span class="keyword">int</span>[][] dp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dp = dp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] getL() &#123;</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setL</span><span class="params">(<span class="keyword">int</span>[] l)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.l = l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getM</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setM</span><span class="params">(<span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.m = m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这个问题的动态规划方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//先对我们获得的数组进行初始化</span></span><br><span class="line">        <span class="comment">//一般第一列和第一行我们都跳过不进行初始化 为了方便理解将数字中的i与我们计算机中的第i列相对应</span></span><br><span class="line">        <span class="keyword">int</span> a,b,c,d;</span><br><span class="line">        <span class="keyword">for</span> (a = i;a &lt;= j; a++)&#123;</span><br><span class="line">            dp[a][<span class="number">1</span>] = getNumber(i,a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//对除了第一行以外的其他的元素进行操作</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//对第二列进行操作</span></span><br><span class="line">        <span class="keyword">for</span> (b=<span class="number">2</span>;b&lt;=m;b++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (c = <span class="number">2</span>;c&lt;=(j-i)+<span class="number">1</span>;c++)&#123;</span><br><span class="line">                <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (k=c-<span class="number">1</span>;k&gt;=<span class="number">1</span>;k--)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (dp[k][b-<span class="number">1</span>]*getNumber(k+<span class="number">1</span>,c)&gt;max)</span><br><span class="line">                        max = dp[k][b-<span class="number">1</span>]*getNumber(k+<span class="number">1</span>,c);</span><br><span class="line">                &#125;</span><br><span class="line">                dp[c][b] = max;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//先编写一个获取数值的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getNumber</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> number = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = j;k&gt;=i;k--)&#123;</span><br><span class="line">            number = number + l[k]*x;</span><br><span class="line">            x = x * <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> number;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>验证</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.passage3.demo3_1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo3_1Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">int</span> m = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">int</span> dp[][] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span>[] l = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        demo3_1 demo3_1 = <span class="keyword">new</span> demo3_1();</span><br><span class="line">        demo3_1.setDp(dp);</span><br><span class="line">        demo3_1.setI(i);</span><br><span class="line">        demo3_1.setJ(j);</span><br><span class="line">        demo3_1.setL(l);</span><br><span class="line">        demo3_1.setM(m);</span><br><span class="line">        demo3_1.demo();</span><br><span class="line">        <span class="keyword">int</span>[][] dp1 = demo3_1.getDp();</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=j;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x=<span class="number">1</span>;x&lt;=j;x++)&#123;</span><br><span class="line">                System.out.print(dp1[i][x]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>输出</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">12</span>	<span class="number">2</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">123</span>	<span class="number">36</span>	<span class="number">6</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">1234</span>	<span class="number">492</span>	<span class="number">144</span>	<span class="number">24</span>	</span><br></pre></td></tr></table></figure>

<p>我们可以看到，我们的输出和我们手推的结果一样，因此这个算法程序是正确的。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>从上边的的几个案例我们可以看到，动态规划就是一个空间换时间的算法思路。动态规划求一个问题的最优解也是把整个问题的所有情况全部遍历了一边，但是比起一般的遍历，动态规划因为使用了dp矩阵，因此之前计算过的情况全部存放在dp矩阵里，减少了计算的次数，因此有人说动态规划是一种带记忆的遍历。</p>
<p>动态规划的解题思路是：</p>
<ul>
<li>找到递推公式</li>
<li>确定dp矩阵的行向量和列向量的含义</li>
<li>自底而上一步步求解一步步动态规划</li>
<li>就得到了一个东西的所有情况</li>
</ul>
<p>动态规划并没有一个固定的算法，不能和之前在数据结构中学习到的算法混为一谈。</p>
<p>在我看来动态规划只是一种思路，这种思路需要逻辑性。</p>
<p>最快学会学清除动态规划的方法就是，自己把一个动态规划题目的dp矩阵手推出来</p>
<p>就能理解程序的处理过程了。</p>
]]></content>
  </entry>
  <entry>
    <title>十万个数找到前十个</title>
    <url>/2022/03/17/%E5%8D%81%E4%B8%87%E4%B8%AA%E6%95%B0%E6%89%BE%E5%88%B0%E5%89%8D%E5%8D%81%E4%B8%AA%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="十万个数找到前十个"><a href="#十万个数找到前十个" class="headerlink" title="十万个数找到前十个"></a>十万个数找到前十个</h1><p>这是考研题中能够数据结构中的一道题，要求时间复杂度尽可能的小，因此我们使用简单排序或者是快速排序进行完全排序后输出前几个是完全不可以的，时间复杂的会很高，这里我选择使用线性选择的方式。</p>
<h2 id="算法思路"><a href="#算法思路" class="headerlink" title="算法思路"></a>算法思路</h2><p>使用线性选择 ，选择到第十个数据，因为线性选择是以快排为基础的，因此当我们找到了这第十个数据。那么我们此时生成的数组第十个数据前边的比他小，前十个就是在这个乱序中.</p>
<ul>
<li>先使用线性选择选择到第十个数据</li>
<li>将这个数组的前十个数据进行排序（随意，可以使用简单排序）</li>
<li>输出结果</li>
</ul>
<p><strong>验证</strong>，因为我们的数组是随机生成的 无法保证找到的数据是正确的（可能某个程序错误将数组更改），因此我们需要在生成数组的时候将数组存储到文件中，然后使用全排序对齐进行排序，之后输出前十个来验证是否和我们使用线性选择找到的数据相同。</p>
<h2 id="程序实践"><a href="#程序实践" class="headerlink" title="程序实践"></a>程序实践</h2><p>这里我们开一个文件把我们的随机生成的数组储存起来，以方便以后的验证使用，此时就需要用的文件的读取知识</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.passage2.RandomizedSelect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">fisrtTen</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//成功一个有十万个数据的数组 用随机数产生</span></span><br><span class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100000</span>];</span><br><span class="line">        <span class="keyword">int</span> length = a.length;</span><br><span class="line">        <span class="keyword">int</span> i,j,k;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line">            <span class="comment">//产生10万个随机数</span></span><br><span class="line">            a[i] = (<span class="keyword">int</span>)(Math.random()*<span class="number">1000000</span>)+<span class="number">10000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//我们可以将这个数组先存放到file中 到其他的程序进行测试</span></span><br><span class="line">        String fileName = <span class="string">&quot;shiwan.txt&quot;</span>;</span><br><span class="line">        File file = <span class="keyword">new</span> File(fileName);</span><br><span class="line">        FileWriter fileWriter = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fileWriter = <span class="keyword">new</span> FileWriter(file);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        BufferedWriter writer = <span class="keyword">new</span> BufferedWriter(fileWriter);</span><br><span class="line">        writer.write(Integer.toString(a.length));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i1 : a) &#123;</span><br><span class="line">            writer.newLine();</span><br><span class="line">            writer.write(Integer.toString(i1));</span><br><span class="line">        &#125;</span><br><span class="line">        writer.flush();</span><br><span class="line">        writer.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//选择前十个</span></span><br><span class="line">        <span class="comment">//调用线性选择程序</span></span><br><span class="line">        RandomizedSelect select = <span class="keyword">new</span> RandomizedSelect();</span><br><span class="line">        select.setList(a);</span><br><span class="line">        <span class="keyword">int</span> i1 = select.RandomizedSelect(<span class="number">0</span>, a.length - <span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;第十个数据是:&quot;</span>+i1);</span><br><span class="line">        <span class="keyword">int</span>[] list = select.getList();</span><br><span class="line">        <span class="comment">//对前十个数据进行排序</span></span><br><span class="line">        simpleSort(list,<span class="number">0</span>,<span class="number">9</span>);</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            System.out.println(list[i]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//我们这里需要一个简单排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">simpleSort</span><span class="params">(<span class="keyword">int</span>[] e,<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        i = start;</span><br><span class="line">        <span class="keyword">for</span> (i=start;i&lt;=end;i++)&#123;</span><br><span class="line">            temp = e[i];</span><br><span class="line">            k = i;</span><br><span class="line">            <span class="keyword">for</span> (j=i;j&lt;=end;j++)&#123;</span><br><span class="line">                <span class="comment">//寻找每次循环的最小值</span></span><br><span class="line">                <span class="keyword">if</span> (e[j]&lt;temp)&#123;</span><br><span class="line">                    temp = e[j];</span><br><span class="line">                    k = j;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//进行交换 把最小值放到合适的位置</span></span><br><span class="line">            e[k] = e[i];</span><br><span class="line">            e[i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<p><strong>线性的算则：这里我是用的是随机选择</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomizedSelect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//正常来说 我们操作的都是整数数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> list[];</span><br><span class="line">    <span class="comment">//我们使用的是private私有对象 因此需要编写get/set方法来设置和获取值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] getList() &#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setList</span><span class="params">(<span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//快速排序的思路是将第一个作为端点 但是我们这里使用一个随机数来获得端点</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    参数表：</span></span><br><span class="line"><span class="comment">    start：列表要查询的开始</span></span><br><span class="line"><span class="comment">    end：列表查询的结束</span></span><br><span class="line"><span class="comment">    find：我们要查询的第几小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">RandomizedSelect</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end,<span class="keyword">int</span> find)</span></span>&#123;</span><br><span class="line">        <span class="comment">//编写程序结束程序</span></span><br><span class="line">        <span class="comment">//如果开始等于结束 我们没有什么课选的了 就选择到了合适的数据</span></span><br><span class="line">        <span class="keyword">if</span> (start==end)&#123;</span><br><span class="line">            <span class="comment">//这个就是我们找到的第几小的结果</span></span><br><span class="line">            <span class="keyword">return</span> list[start];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i = RandomQuickSort(start,end);</span><br><span class="line">        <span class="comment">//比较我们得到的这个第几小和我们的目标小又什么区别</span></span><br><span class="line">        <span class="comment">//如果i大 则说明我们要找的find在划分后的后边</span></span><br><span class="line">        <span class="comment">//则将我们的起始地址设置为i+1,结束还是end，此时我们要找find-i小</span></span><br><span class="line">        <span class="comment">//注意 我们这里的j 因为 我们的start 不一定就是从零开始的 因此 我们选择后的第几小 就需要用find-j</span></span><br><span class="line">        <span class="keyword">int</span> j = i-start+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (find&lt;=j)&#123;</span><br><span class="line">            <span class="keyword">return</span> RandomizedSelect(start,i,find);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> RandomizedSelect(i+<span class="number">1</span>,end,find-j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//这个程序是对我们需要的list的一段进行一次快排 二我们快排的结果是随机的 通过random来获得我们的基准元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">RandomQuickSort</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">        <span class="comment">//我们这里只需要一个开始和一个结束</span></span><br><span class="line">        <span class="comment">//获得一个随机数 在start和end之间</span></span><br><span class="line">        <span class="comment">//我们这里的随机数要设置好</span></span><br><span class="line">        <span class="keyword">int</span> n = (<span class="keyword">int</span>)(Math.random()*<span class="number">100</span>)%(end-start)+start;</span><br><span class="line">        System.out.println(<span class="string">&quot;这里我们将第&quot;</span>+n+<span class="string">&quot;个元素作为基准元素&quot;</span>);</span><br><span class="line">        <span class="comment">//将我们的基准元素存储起来</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> t = list[n];</span><br><span class="line">        list[n] = list[start];</span><br><span class="line">        list[start] = t;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">        <span class="comment">//我们准备进行快排</span></span><br><span class="line">        i = start;</span><br><span class="line">        j = end;</span><br><span class="line">        <span class="comment">//快速排序的思想就是把比基准元素小的都放在左边</span></span><br><span class="line">        <span class="comment">//把比基准元素大的都放在右边 然后把基准元素归位</span></span><br><span class="line">        <span class="keyword">while</span> (i != j)&#123;</span><br><span class="line">            <span class="comment">//先让右哨兵动 找到合适数据后才停止</span></span><br><span class="line">            <span class="keyword">while</span> (list[j]&gt;=t &amp;&amp; j&gt;i)&#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//说明右哨兵已经选择好了 使左哨兵开始动</span></span><br><span class="line">            <span class="keyword">while</span> (list[i]&lt;=t &amp;&amp; i&lt;j)&#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//两个哨兵都找到了 交换数据</span></span><br><span class="line">            <span class="keyword">if</span> (i&lt;j) &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = list[i];</span><br><span class="line">                list[i] = list[j];</span><br><span class="line">                list[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将我们的基准元素放到合适的地方</span></span><br><span class="line">        list[start] = list[i];</span><br><span class="line">        list[i] = t;</span><br><span class="line">        <span class="comment">//我们找到的i就是我们这一次找到的目的元素所在的位置(即第几小)</span></span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//交换数据函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Swap</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = list[i];</span><br><span class="line">        list[i] = list[j];</span><br><span class="line">        list[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>检验得程序：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.file.MyFileReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sortTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//这里我们对我们存储的数据进行最简单的排序</span></span><br><span class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100000</span>];</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="comment">//读取我们的数据</span></span><br><span class="line">        String fileName = <span class="string">&quot;shiwan.txt&quot;</span>;</span><br><span class="line">        File file = <span class="keyword">new</span> File(fileName);</span><br><span class="line">        MyFileReader reader = <span class="keyword">new</span> MyFileReader();</span><br><span class="line">        List&lt;Object&gt; objects = reader.MyFilerReader(file);</span><br><span class="line">        <span class="comment">//第一个数据表示个数 可以不读</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line">            a[i] = Integer.parseInt((String) objects.get(i+<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//对数组进行排序</span></span><br><span class="line">        simpleSort(a,<span class="number">0</span>,a.length-<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//输出前十个</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            System.out.println((i+<span class="number">1</span>)+<span class="string">&quot;================》&quot;</span>+a[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">simpleSort</span><span class="params">(<span class="keyword">int</span>[] e,<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        i = start;</span><br><span class="line">        <span class="keyword">for</span> (i=start;i&lt;=end;i++)&#123;</span><br><span class="line">            temp = e[i];</span><br><span class="line">            k = i;</span><br><span class="line">            <span class="keyword">for</span> (j=i;j&lt;=end;j++)&#123;</span><br><span class="line">                <span class="comment">//寻找每次循环的最小值</span></span><br><span class="line">                <span class="keyword">if</span> (e[j]&lt;temp)&#123;</span><br><span class="line">                    temp = e[j];</span><br><span class="line">                    k = j;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//进行交换 把最小值放到合适的位置</span></span><br><span class="line">            e[k] = e[i];</span><br><span class="line">            e[i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>经过检验，我们可以发现我们的程序是正确的</p>
<p>而且要比使用简单排序的全排列块的多。</p>
]]></content>
  </entry>
  <entry>
    <title>MATLAB统计工具箱中的回归分析命令</title>
    <url>/2022/03/16/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="MATLAB统计工具箱中的回归分析命令"><a href="#MATLAB统计工具箱中的回归分析命令" class="headerlink" title="MATLAB统计工具箱中的回归分析命令"></a>MATLAB统计工具箱中的回归分析命令</h1><h2 id="多元线性回归"><a href="#多元线性回归" class="headerlink" title="多元线性回归"></a>多元线性回归</h2><p><strong>多元线性回归的命令是regress，此命令也可以用于一元线性回归，其格式如下：</strong></p>
<ul>
<li><p>确定回归系数的点估计值，用命令b = regress(Y,X)</p>
</li>
<li><p>求回归系数的点估计和区域估计，并检验回归模型，用命令</p>
<p>[b, bint, r, rint, stats] = regress(Y,X,alpha)</p>
</li>
<li><p>画出残差及其置信区间，用命令rcoplot(r,rint)</p>
</li>
</ul>
<h2 id="多项式回归"><a href="#多项式回归" class="headerlink" title="多项式回归"></a>多项式回归</h2><p><strong>一元多项式回归</strong></p>
<p>一元多项式回归可用命令：polyfit,ployval,ployconf来实现</p>
<p>步奏：</p>
<ol>
<li><p>回归</p>
<ul>
<li><p>确定多项式系数的命令：[p ,S] = polyfit(x,y,m)</p>
<p>其中x = (x1,x2,x3,..,xn),y = (y1,y2,y3,…,yn),p = (a1,a2,…,am+1)是多项式对的系数，S是一个矩阵，用于估计预测误差</p>
</li>
<li><p>一元多项式回归命令:ploytool(x,y,m)</p>
<p>此命令产生一个交互画面</p>
</li>
</ul>
</li>
<li><p>预测和预测误差估计</p>
<ul>
<li>Y = polyval(p,x)，求polyfit所得的回归多项式在x处的预测值Y;</li>
<li>[Y,DELTA] = polyconf(p,x,S,alpha)，求ployfit所得的回归多项式在x处的预测值Y及预测值得置信水平为1-alpha的置信区间[Y-DELTA,Y+DELTA];alpha的缺省值为0.05</li>
</ul>
</li>
</ol>
<p><strong>多元二项式回归</strong></p>
<p>多远二项式回归用命令rstool(x,y,’model’,alpha)其中输入数据x,y分别为nxm矩阵和n维列向量；alpha为显著性水平(缺省值为0.05)；model在下列4的模式中选一个</p>
<ul>
<li>linear(线性)</li>
<li>purequadratic(纯二次)</li>
<li>interaction(交叉)</li>
<li>quadratic(完全二次)</li>
</ul>
<p><strong>非线性回归</strong></p>
<p>非线性回归可用命令 nlinfit,nlintool,nlpredci来实现</p>
<ol>
<li><p>回归</p>
<ol>
<li><p>确定回归系数的命令:</p>
<p>[beta,r,J] = nlinfit(x,y,’model’,beta0)</p>
<p>其中，数据x,y分别是nxm矩阵和n维列向量，对一元非线性回归，x为n维列向量，model是事先用M文件定义的非线性函数；beta0是回归系数的初值，beta是估计出的回归系数，r(残差)和J(Jacobian)矩阵是估计预测误差需要的数据 </p>
</li>
<li><p>非线性回归命令：</p>
<p>alpha为显著性水平，缺省值为0.05</p>
</li>
</ol>
</li>
<li><p>预测和预测误差估计</p>
<p>[Y, DELTA] = nlpredci(‘model’,x,beta,r,J)</p>
</li>
</ol>
<p><strong>逐步回归</strong></p>
<p>逐步回归的命令是stepwise，它提供一个交互画面</p>
<p>命令为：stepwise(x,y)</p>
<p>x是nxm矩阵，y是nx1矩阵</p>
]]></content>
  </entry>
  <entry>
    <title>天梯计划1.2版本更新</title>
    <url>/2022/10/04/%E5%A4%A9%E6%A2%AF%E8%AE%A1%E5%88%921.2%E7%89%88%E6%9C%AC%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="天梯计划1-2版本更新"><a href="#天梯计划1-2版本更新" class="headerlink" title="天梯计划1.2版本更新"></a>天梯计划1.2版本更新</h1><p>file:///C:/Users/Lenovo/Desktop/阶梯计划/1.2.1版本/存在问题与优化.md</p>
<h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><ul>
<li>现在还没有服务器可以使用                                 √</li>
<li>前端有些问题 简单的展示都会出现问题             √</li>
<li>后端逻辑上 没有设置如果有人恶意访问后台会怎么样 要设置 √</li>
<li>前端的操作 没有js的参与 确实有点生硬 （暂时不用更改 √）</li>
<li>添加更多的功能    <ul>
<li>添加专有名词创建者和浏览量 √</li>
<li>对管理员添加role职责 总管理员可以对所有的关键词增删改查 但是子管理员只能对自己添加的关键词进行删除和修改 √</li>
<li>专有名词序列需要添加 分页查询功能（暂时还不用） 暂时专有名词不够多（暂时没有这个技术 √）</li>
</ul>
</li>
</ul>
<h2 id="服务器问题"><a href="#服务器问题" class="headerlink" title="服务器问题"></a>服务器问题</h2><p>已经放到服务器上了 是团队的服务器</p>
<p><code>http://115.29.41.122:8099/union</code></p>
<p><strong>我想还是找个好时间买一个自己的服务器</strong></p>
<h2 id="安全问题"><a href="#安全问题" class="headerlink" title="安全问题"></a>安全问题</h2><p><strong>直接通过绝对路径进行访问</strong></p>
<p><a href="https://imgse.com/i/xQTL7T"><img src="https://s1.ax1x.com/2022/10/04/xQTL7T.png" alt="xQTL7T.png"></a></p>
<p>这里我要求 进到这个页面就算了 但是如果执行任何操作 都需要检查一下user对象是否存在</p>
<p>如果不存在 就跳转到404页面</p>
<p><img src="/dwx-tx.github.io/2022/10/04/%E5%A4%A9%E6%A2%AF%E8%AE%A1%E5%88%921.2%E7%89%88%E6%9C%AC%E5%88%86%E6%9E%90/Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20221002185721258.png" alt="image-20221002185721258"></p>
<p><strong>通过一个until达到了我们的目的：</strong>能进入后台首页 但是啥也做不了</p>
<p>只要要通过后台执行的操作 就会跳转到这个页面</p>
<p><a href="https://imgse.com/i/xQTjNF"><img src="https://s1.ax1x.com/2022/10/04/xQTjNF.png" alt="xQTjNF.png"></a></p>
<h2 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h2><p>分析一下逻辑，为了更好的使用这个网站，我认为可以加入更多人来维护这个网站，但是这个网站仍然存在很多问题，需要一点点添加新的功能。</p>
<ul>
<li>需要在专有名词查询上加上分页功能</li>
<li>专有名词加上 createBy 和 viewCount两个属性 </li>
<li>对于管理员加上userRole属性</li>
</ul>
<p>userRole我本人是1 其他的管理员是2 </p>
<p>1表示总管理员 可以增 删 改所有的专有名词</p>
<p>2表示分管理员 只能够增 ，删改自己创造的专有名词</p>
<h3 id="对专有名词添加属性"><a href="#对专有名词添加属性" class="headerlink" title="对专有名词添加属性"></a><strong>对专有名词添加属性</strong></h3><p><strong>对专有名词添加属性</strong></p>
<p>已经添加成功</p>
<p><a href="https://imgse.com/i/xQTz9J"><img src="https://s1.ax1x.com/2022/10/04/xQTz9J.png" alt="xQTz9J.png"></a></p>
<p><a href="https://imgse.com/i/xQ7S39"><img src="https://s1.ax1x.com/2022/10/04/xQ7S39.png" alt="xQ7S39.png"></a></p>
<h3 id="对管理员添加属性"><a href="#对管理员添加属性" class="headerlink" title="对管理员添加属性"></a>对管理员添加属性</h3><p><strong>对管理员添加属性</strong></p>
<p><a href="https://imgse.com/i/xQ7Pnx"><img src="https://s1.ax1x.com/2022/10/04/xQ7Pnx.png" alt="xQ7Pnx.png"></a></p>
<p><a href="https://imgse.com/i/xQ7AAO"><img src="https://s1.ax1x.com/2022/10/04/xQ7AAO.png" alt="xQ7AAO.png"></a></p>
<p>能够实现不同管理员操作不同</p>
<h2 id="人性化问题"><a href="#人性化问题" class="headerlink" title="人性化问题"></a>人性化问题</h2><p>人性化问题主要存在于</p>
<ul>
<li>分页查询的实现</li>
<li>一些不合人类逻辑的设计的改善</li>
</ul>
<h3 id="分页查询的实现"><a href="#分页查询的实现" class="headerlink" title="分页查询的实现"></a>分页查询的实现</h3><h3 id="不合人类逻辑的设计的改善"><a href="#不合人类逻辑的设计的改善" class="headerlink" title="不合人类逻辑的设计的改善"></a>不合人类逻辑的设计的改善</h3><p><strong>对于关键词查询页的改善，选用关键词名称加创建管理员昵称的方式更加符合人类的逻辑</strong></p>
<p><strong>还可以添加排序方式 通过ID排序 或者通过浏览量排序</strong></p>
<p><a href="https://imgse.com/i/xQ7e9H"><img src="https://s1.ax1x.com/2022/10/04/xQ7e9H.png" alt="xQ7e9H.png"></a></p>
<p><strong>添加了一个排序方式</strong></p>
<p><a href="https://imgse.com/i/xQ7ngA"><img src="https://s1.ax1x.com/2022/10/04/xQ7ngA.png" alt="xQ7ngA.png"></a></p>
<p><strong>已经实现了</strong></p>
<p><a href="https://imgse.com/i/xQ7ujI"><img src="https://s1.ax1x.com/2022/10/04/xQ7ujI.png" alt="xQ7ujI.png"></a></p>
]]></content>
  </entry>
  <entry>
    <title>天梯计划2.0版本</title>
    <url>/2022/10/29/%E5%A4%A9%E6%A2%AF%E8%AE%A1%E5%88%922.0%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="天梯计划2-0版本"><a href="#天梯计划2-0版本" class="headerlink" title="天梯计划2.0版本"></a>天梯计划2.0版本</h1><h2 id="版本特色"><a href="#版本特色" class="headerlink" title="版本特色"></a>版本特色</h2><p>(1)在1.x版本的基础上,2.0版本准备在登录页面加入一个人脸识别程序，以防都忘记密码造成损失。</p>
<p>(2)为了安全性着想 给密码进行加密MD5加密</p>
<p>两种功能，明显加密功能是更好实现的，可以选择先实现,不过这样需要修改大量源代码</p>
<h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><p>本程序采用<strong>MD5</strong>加密方法，MD5加密的好处是，</p>
<ul>
<li>加密是单向的，就算数据库被打破了，还是照样能使用的。</li>
<li>java自带有MD5加密方法，这就使得我们操作起来变得简单</li>
</ul>
<p><strong>代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.until;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MD5Util</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMD5</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] digest = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MessageDigest md5 = MessageDigest.getInstance(<span class="string">&quot;md5&quot;</span>);</span><br><span class="line">            digest = md5.digest(password.getBytes());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//16是表示转换为16进制数</span></span><br><span class="line">        String md5Str = <span class="keyword">new</span> BigInteger(<span class="number">1</span>, digest).toString(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> md5Str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>总结下来 修改代码并不多</strong></p>
<ul>
<li>登录 需要将明码转化成MD5码</li>
<li>修改 需要把获得的旧密码 新密码转化成MD5码</li>
</ul>
<p>总之 加密已经完成</p>
<p><img src="https://pic1.imgdb.cn/item/635cfb6e16f2c2beb10b2d92.png"></p>
<h2 id="人脸识别系统"><a href="#人脸识别系统" class="headerlink" title="人脸识别系统"></a>人脸识别系统</h2><p>人脸识别系统需要两种技术</p>
<ul>
<li>调用摄像头 并且能够拍照</li>
<li>人脸识别技术（对照技术）</li>
</ul>
<p>对于人脸识别技术已经有了一些认识，参考之前的blog</p>
<p><a href="https://dwx-tx.github.io/2022/10/26/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E5%86%8D%E8%AE%A4%E8%AF%86/">人脸识别深入认识 | dwx-tx的小天地</a></p>
<p>但是对于调用摄像头技术，还没有掌握，下边计划先学习网页调用摄像头技术</p>
<p>假设，网页可以调用摄像头并且拍照，可以将拍好的照片暂时生成在服务器中，对比后，删除这个照片即可。</p>
<h3 id="网页调用摄像头拍照技术"><a href="#网页调用摄像头拍照技术" class="headerlink" title="网页调用摄像头拍照技术"></a>网页调用摄像头拍照技术</h3><p><strong>参考之前的blog</strong></p>
<p><a href="https://dwx-tx.github.io/2022/10/27/%E7%BD%91%E9%A1%B5%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4%E6%8A%80%E6%9C%AF/">网页调用摄像头技术 | dwx-tx的小天地</a></p>
<p>这样后端就接收到了前端传递过来的二进制流，利用二进制流生成图片技术生成前端传递过来的图片</p>
<h3 id="二进制流生成图片技术"><a href="#二进制流生成图片技术" class="headerlink" title="二进制流生成图片技术"></a>二进制流生成图片技术</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.until;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Path;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是一个文件操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一个文件读取操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fileUpLoad</span><span class="params">(MultipartFile myfile,String filename, String fileUrl)</span></span>&#123;</span><br><span class="line">        <span class="comment">//此路径为 服务器要存储文件的文件夹的路径</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建新文件</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(fileUrl+filename);</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        FileOutputStream fileOutputStream = <span class="keyword">null</span>;</span><br><span class="line">        String result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获得input流</span></span><br><span class="line">            inputStream = myfile.getInputStream();</span><br><span class="line"></span><br><span class="line">            fileOutputStream = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//固定的文件写操作</span></span><br><span class="line">            <span class="keyword">int</span> read;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> ((read = inputStream.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                fileOutputStream.write(bytes, <span class="number">0</span>, read);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果一切成功</span></span><br><span class="line">            result = <span class="string">&quot;success&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;程序出错了&quot;</span>);</span><br><span class="line">            System.out.println(e);</span><br><span class="line">            <span class="comment">//如果产生了异常 返回false</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;false&quot;</span>;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//关闭所有的流</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fileOutputStream.close();</span><br><span class="line">                inputStream.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     <span class="keyword">return</span>  result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//一个文件删除操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">fileDelete</span><span class="params">(String fileName)</span></span>&#123;</span><br><span class="line">        <span class="comment">//直接删除</span></span><br><span class="line">        String fileUrl  = <span class="string">&quot;/img&quot;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(fileUrl + fileName);</span><br><span class="line">        File file = <span class="keyword">new</span> File(fileUrl + fileName);</span><br><span class="line">        System.out.println(file.isFile());</span><br><span class="line">        <span class="keyword">boolean</span> delete = file.delete();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> delete;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>controller类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.until.FileUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartHttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">areFaceController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/areFace.do&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">areFaceTest</span><span class="params">(HttpServletRequest request,HttpServletRequest response,HttpSession session)</span> </span>&#123;</span><br><span class="line">        MultipartHttpServletRequest multipartRequest=(MultipartHttpServletRequest) request;</span><br><span class="line">        MultipartFile myfile = multipartRequest.getFile(<span class="string">&quot;file&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得正规的</span></span><br><span class="line">        String fileName = myfile.getOriginalFilename();</span><br><span class="line">        System.out.println(fileName);</span><br><span class="line">        <span class="keyword">int</span> local = fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        System.out.println(local);</span><br><span class="line">        String fileType = fileName.substring(local);</span><br><span class="line">        System.out.println(<span class="string">&quot;文件类型为:&quot;</span>+fileType);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得路径</span></span><br><span class="line">        String contextPath = request.getContextPath();</span><br><span class="line">        FileUtil fileUtil = <span class="keyword">new</span> FileUtil();</span><br><span class="line">        String fileUrl = <span class="string">&quot;E:\\java\\union\\src\\main\\java\\com\\dwx\\img\\&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String filename = <span class="string">&quot;test&quot;</span>;</span><br><span class="line">        <span class="comment">//文件上传操作</span></span><br><span class="line">        String s = fileUtil.fileUpLoad(myfile, filename+fileType,fileUrl);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;图片生成成功&quot;</span>);</span><br><span class="line">        <span class="comment">//对数据库里的File进行一个增加</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="人脸识别技术"><a href="#人脸识别技术" class="headerlink" title="人脸识别技术"></a>人脸识别技术</h3><p>可以参考以前的blog</p>
<p><a href="https://dwx-tx.github.io/2022/10/26/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E5%86%8D%E8%AE%A4%E8%AF%86/">人脸识别深入认识 | dwx-tx的小天地</a></p>
<p>利用类似技术来实现人脸识别</p>
<p><strong>具体思路</strong></p>
<ul>
<li>创建数据库，这里不给管理员设置上传脸部信息的途径，只能通过我操作数据库来上传数据</li>
<li>调用人脸识别工具类获得人的面部信息</li>
<li>调用faceService获得数据库存储的人脸信息</li>
<li>通过一对多的匹配得到可能性最高，且合适的对象</li>
<li>完成登录操作</li>
</ul>
<p>这里需要注意，SDK的依赖需要手动导入，引擎需要放的后台中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.AreFace;</span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.dwx.service.FaceFeatureService;</span><br><span class="line"><span class="keyword">import</span> com.dwx.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.dwx.until.AreFaceUtil;</span><br><span class="line"><span class="keyword">import</span> com.dwx.until.FileUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartHttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AreFaceController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> FaceFeatureService faceFeatureService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FaceFeatureService <span class="title">getFaceFeatureService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> faceFeatureService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserService <span class="title">getUserService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserService</span><span class="params">(UserService userService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFaceFeatureService</span><span class="params">(FaceFeatureService faceFeatureService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.faceFeatureService = faceFeatureService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下载图片程序</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/areFace.do&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">areFaceTest</span><span class="params">(HttpServletRequest request, HttpServletResponse response, HttpSession session)</span> </span>&#123;</span><br><span class="line">        MultipartHttpServletRequest multipartRequest=(MultipartHttpServletRequest) request;</span><br><span class="line">        MultipartFile myfile = multipartRequest.getFile(<span class="string">&quot;file&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        AreFaceUtil areFaceUtil = <span class="keyword">new</span> AreFaceUtil();</span><br><span class="line">        <span class="comment">//调用程序 下载图片</span></span><br><span class="line">        fileDownload(myfile);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用service 获得数据库中的所有数据</span></span><br><span class="line">        List&lt;AreFace&gt; allAreFaceFeature = faceFeatureService.getAllAreFaceFeature();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//现在我们需要把String转化成byte</span></span><br><span class="line">        <span class="comment">//用temp变量来存储最高分数的id</span></span><br><span class="line">        String temp = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//用mScore来存储最高分数</span></span><br><span class="line">        <span class="keyword">double</span> mScore = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (AreFace areFace : allAreFaceFeature) &#123;</span><br><span class="line">            <span class="keyword">double</span> score = areFaceUtil.getAreFaceFeature(areFace.getAreFaceFeature());</span><br><span class="line">            System.out.print(<span class="string">&quot;管理员:&quot;</span>+areFace.getId()+<span class="string">&quot;的人脸对比分数为:&quot;</span>+score);</span><br><span class="line">            System.out.println();</span><br><span class="line">            <span class="keyword">if</span> (score &gt; mScore)&#123;</span><br><span class="line">                mScore = score;</span><br><span class="line">                temp = areFace.getId();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果分数大于0.8 就可以说明找到了</span></span><br><span class="line">        <span class="keyword">if</span> (mScore &gt; <span class="number">0.8</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;找到了管理员：&quot;</span>+temp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用userService通过id获得User</span></span><br><span class="line"></span><br><span class="line">        User userID = userService.getUserID(temp);</span><br><span class="line"></span><br><span class="line">        System.out.println(userID);</span><br><span class="line">        request.getSession().setAttribute(<span class="string">&quot;userSession&quot;</span>,userID);</span><br><span class="line">        System.out.println(<span class="string">&quot;================&quot;</span>);</span><br><span class="line">        <span class="comment">//跳转到后端</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;/union/houtai/jsp/frame.jsp&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fileDownload</span><span class="params">(MultipartFile myfile)</span></span>&#123;</span><br><span class="line">        <span class="comment">//获得正规的</span></span><br><span class="line">        String fileName = myfile.getOriginalFilename();</span><br><span class="line">        System.out.println(fileName);</span><br><span class="line">        <span class="keyword">int</span> local = fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        System.out.println(local);</span><br><span class="line">        String fileType = fileName.substring(local);</span><br><span class="line">        System.out.println(<span class="string">&quot;文件类型为:&quot;</span>+fileType);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得路径</span></span><br><span class="line">        FileUtil fileUtil = <span class="keyword">new</span> FileUtil();</span><br><span class="line">        String fileUrl = <span class="string">&quot;E:\\java\\union\\src\\main\\java\\com\\dwx\\img\\&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String filename = <span class="string">&quot;test&quot;</span>;</span><br><span class="line">        <span class="comment">//文件上传操作</span></span><br><span class="line">        String s = fileUtil.fileUpLoad(myfile, filename+fileType,fileUrl);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;图片生成成功&quot;</span>);</span><br><span class="line">        <span class="comment">//对数据库里的File进行一个增加</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>遇到问题了</strong></p>
<p>页面不跳转问题，请求都成功了，就是没跳转</p>
<p><img src="https://pic1.imgdb.cn/item/635cfb1a16f2c2beb10a5725.png"></p>
<p><strong>参考解决办法</strong></p>
<p><a href="https://blog.csdn.net/qq_18298439/article/details/81034562">(183条消息) 解决java后台发起重定向响应成功,但前端不跳转页面问题_二十同学的博客-CSDN博客_java重定向跳转页面怎么不跳</a></p>
<p>分析是 后端的页面跳转与前端js相矛盾了 但是因为我不懂js 不会修改</p>
<p>网上的资料也不全</p>
<p><strong>解决了 经过前端同学的帮助 解决的这个问题</strong></p>
<p><strong>修改后的HTML</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>网页调取摄像头<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.3.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#capture</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">190px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">bottom</span>: -<span class="number">40px</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#video</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#img</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.auto</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">320px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: -<span class="number">160px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#sure</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">210px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">bottom</span>: -<span class="number">40px</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">button</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#5CACEE</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="comment">/*禁止选择*/</span></span></span><br><span class="line"><span class="css">            -webkit-touch-callout: none; <span class="comment">/* iOS Safari */</span></span></span><br><span class="line"><span class="css">            -webkit-user-select: none; <span class="comment">/* Chrome/Safari/Opera */</span></span></span><br><span class="line"><span class="css">            -khtml-user-select: none; <span class="comment">/* Konqueror */</span></span></span><br><span class="line"><span class="css">            -moz-user-select: none; <span class="comment">/* Firefox */</span></span></span><br><span class="line"><span class="css">            -ms-user-select: none; <span class="comment">/* Internet Explorer/Edge */</span></span></span><br><span class="line"><span class="css">            user-select: none; <span class="comment">/* Non-prefixed version, currently not supported by any browser */</span></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#61CAD0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;../login/login.jsp&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;back&quot;</span>  <span class="attr">style</span>=<span class="string">&quot;height: 40px;&quot;</span>  <span class="attr">title</span>=<span class="string">&quot;点击返回&quot;</span>&gt;</span>返回登录页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;auto&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;video&quot;</span> <span class="attr">width</span>=<span class="string">&quot;480&quot;</span> <span class="attr">height</span>=<span class="string">&quot;320&quot;</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span> <span class="attr">width</span>=<span class="string">&quot;480&quot;</span> <span class="attr">height</span>=<span class="string">&quot;320&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;img&quot;</span> <span class="attr">width</span>=<span class="string">&quot;480&quot;</span> <span class="attr">height</span>=<span class="string">&quot;320&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 20px;background-color: #0a5eb6;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;capture&quot;</span> <span class="attr">title</span>=<span class="string">&quot;点击进行拍照&quot;</span>&gt;</span>拍照<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;sure&quot;</span> <span class="attr">title</span>=<span class="string">&quot;是否用这张图片进行验证&quot;</span>&gt;</span>确认<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> file ,stream;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//访问用户媒体设备的兼容方法</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">getUserMedia</span>(<span class="params">constraints, success, error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (navigator.mediaDevices.getUserMedia) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//最新的标准API</span></span></span><br><span class="line"><span class="javascript">        navigator.mediaDevices.getUserMedia(constraints).then(success).catch(error);</span></span><br><span class="line"><span class="javascript">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.webkitGetUserMedia) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//webkit核心浏览器</span></span></span><br><span class="line"><span class="javascript">        navigator.webkitGetUserMedia(constraints,success, error)</span></span><br><span class="line"><span class="javascript">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.mozGetUserMedia) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//firfox浏览器</span></span></span><br><span class="line"><span class="javascript">        navigator.mozGetUserMedia(constraints, success, error);</span></span><br><span class="line"><span class="javascript">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.getUserMedia) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//旧版API</span></span></span><br><span class="line"><span class="javascript">        navigator.getUserMedia(constraints, success, error);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> video = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;video&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> context = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">success</span>(<span class="params">stream</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//兼容webkit核心浏览器</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> CompatibleURL = <span class="built_in">window</span>.URL || <span class="built_in">window</span>.webkitURL;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//将视频流设置为video元素的源</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// console.log(stream);</span></span></span><br><span class="line"><span class="javascript">      stream = stream;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//video.src = CompatibleURL.createObjectURL(stream);</span></span></span><br><span class="line"><span class="javascript">      video.srcObject = stream;</span></span><br><span class="line"><span class="javascript">      video.play();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">error</span>(<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">`访问用户媒体设备失败<span class="subst">$&#123;error.name&#125;</span>, <span class="subst">$&#123;error.message&#125;</span>`</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//调用用户媒体设备, 访问摄像头</span></span></span><br><span class="line"><span class="javascript">      getUserMedia(&#123;<span class="attr">video</span> : &#123;<span class="attr">width</span>: <span class="number">480</span>, <span class="attr">height</span>: <span class="number">320</span>&#125;&#125;, success, error);</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">      alert(<span class="string">&#x27;不支持访问用户媒体&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// base64转文件</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;capture&#x27;</span>).addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      context.drawImage(video, <span class="number">0</span>, <span class="number">0</span>, <span class="number">480</span>, <span class="number">320</span>);      </span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取图片base64链接</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> image = canvas.toDataURL(<span class="string">&#x27;image/png&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定义一个img</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">&quot;img&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//设置属性和src</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//img.id = &quot;imgBoxxx&quot;;</span></span></span><br><span class="line"><span class="javascript">        img.src = image;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//将图片添加到页面中</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//document.body.appendChild(img);</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">dataURLtoFile</span>(<span class="params">dataurl, filename</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> arr = dataurl.split(<span class="string">&#x27;,&#x27;</span>), mime = arr[<span class="number">0</span>].match(<span class="regexp">/:(.*?);/</span>)[<span class="number">1</span>],</span></span><br><span class="line"><span class="javascript">                bstr = atob(arr[<span class="number">1</span>]), n = bstr.length, u8arr = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(n);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">while</span> (n--) &#123;</span></span><br><span class="line"><span class="javascript">                u8arr[n] = bstr.charCodeAt(n);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            file = <span class="keyword">new</span> File([u8arr], filename, &#123;<span class="attr">type</span>: mime&#125;);</span></span><br><span class="line"><span class="javascript">            <span class="comment">// console.log(file)</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="keyword">new</span> File([u8arr], filename, &#123;<span class="attr">type</span>: mime&#125;);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(dataURLtoFile(image, <span class="string">&quot;aa.png&quot;</span>));</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;sure&quot;</span>).addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(file)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&#x27;发送Ajax请求&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span></span><br><span class="line"><span class="javascript">        formData.append(<span class="string">&quot;file&quot;</span>,file);</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">type</span>: <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="comment">//后端需要调用的地址</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">url</span>:<span class="string">&quot;http://localhost:8089/plotform/areFace.do&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>:formData, <span class="comment">//发送数据</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">async</span>: <span class="literal">true</span>, <span class="comment">// 是否异步</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">processData</span>: <span class="literal">false</span>, <span class="comment">//processData 默认为false，当设置为true的时候,jquery ajax 提交的时候不会序列化 data，而是直接使用data</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">contentType</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(data)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(data === <span class="string">&#x27;200&#x27;</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&#x27;请求成功，即将跳转&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">window</span>.location.href=<span class="string">&quot;../houtai/jsp/frame.jsp&quot;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// console.log(`$&#123;data.message&#125;`);</span></span></span><br><span class="line"><span class="javascript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// console.log(`$&#123;data.message&#125;`);</span></span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">error</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// self.$message.warning(`$&#123;e&#125;`);</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;请求失败&quot;</span>+e);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// stream.getTracks()[0].stop();//结束关闭流</span></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>后端:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.dwx.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.AreFace;</span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.dwx.service.FaceFeatureService;</span><br><span class="line"><span class="keyword">import</span> com.dwx.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.dwx.until.AreFaceUtil;</span><br><span class="line"><span class="keyword">import</span> com.dwx.until.FileUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartHttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AreFaceController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> FaceFeatureService faceFeatureService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FaceFeatureService <span class="title">getFaceFeatureService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> faceFeatureService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserService <span class="title">getUserService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserService</span><span class="params">(UserService userService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFaceFeatureService</span><span class="params">(FaceFeatureService faceFeatureService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.faceFeatureService = faceFeatureService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下载图片程序</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/areFace.do&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">areFaceTest</span><span class="params">(HttpServletRequest request, HttpServletResponse response, HttpSession session)</span> </span>&#123;</span><br><span class="line">        MultipartHttpServletRequest multipartRequest=(MultipartHttpServletRequest) request;</span><br><span class="line">        MultipartFile myfile = multipartRequest.getFile(<span class="string">&quot;file&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        AreFaceUtil areFaceUtil = <span class="keyword">new</span> AreFaceUtil();</span><br><span class="line">        <span class="comment">//调用程序 下载图片</span></span><br><span class="line">        fileDownload(myfile);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用service 获得数据库中的所有数据</span></span><br><span class="line">        List&lt;AreFace&gt; allAreFaceFeature = faceFeatureService.getAllAreFaceFeature();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//现在我们需要把String转化成byte</span></span><br><span class="line">        <span class="comment">//用temp变量来存储最高分数的id</span></span><br><span class="line">        String temp = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//用mScore来存储最高分数</span></span><br><span class="line">        <span class="keyword">double</span> mScore = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (AreFace areFace : allAreFaceFeature) &#123;</span><br><span class="line">            <span class="keyword">double</span> score = areFaceUtil.getAreFaceFeature(areFace.getAreFaceFeature());</span><br><span class="line">            System.out.print(<span class="string">&quot;管理员:&quot;</span>+areFace.getId()+<span class="string">&quot;的人脸对比分数为:&quot;</span>+score);</span><br><span class="line">            System.out.println();</span><br><span class="line">            <span class="keyword">if</span> (score &gt; mScore)&#123;</span><br><span class="line">                mScore = score;</span><br><span class="line">                temp = areFace.getId();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果分数大于0.8 就可以说明找到了</span></span><br><span class="line">        <span class="keyword">if</span> (mScore &gt; <span class="number">0.8</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;找到了管理员：&quot;</span>+temp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用userService通过id获得User</span></span><br><span class="line"></span><br><span class="line">        User userID = userService.getUserID(temp);</span><br><span class="line"></span><br><span class="line">        System.out.println(userID);</span><br><span class="line">        request.getSession().setAttribute(<span class="string">&quot;userSession&quot;</span>,userID);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除图片</span></span><br><span class="line">        <span class="keyword">boolean</span> b = fileDelete();</span><br><span class="line">        <span class="keyword">if</span> (b)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;图片删除成功&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;图片删除失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mScore &gt; <span class="number">0.8</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;200&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;300&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fileDownload</span><span class="params">(MultipartFile myfile)</span></span>&#123;</span><br><span class="line">        <span class="comment">//获得正规的</span></span><br><span class="line">        String fileName = myfile.getOriginalFilename();</span><br><span class="line">        System.out.println(fileName);</span><br><span class="line">        <span class="keyword">int</span> local = fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        System.out.println(local);</span><br><span class="line">        String fileType = fileName.substring(local);</span><br><span class="line">        System.out.println(<span class="string">&quot;文件类型为:&quot;</span>+fileType);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得路径</span></span><br><span class="line">        FileUtil fileUtil = <span class="keyword">new</span> FileUtil();</span><br><span class="line">        String fileUrl = <span class="string">&quot;E:\\java\\union\\src\\main\\java\\com\\dwx\\img\\&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String filename = <span class="string">&quot;test&quot;</span>;</span><br><span class="line">        <span class="comment">//文件上传操作</span></span><br><span class="line">        String s = fileUtil.fileUpLoad(myfile, filename+fileType,fileUrl);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;图片生成成功&quot;</span>);</span><br><span class="line">        <span class="comment">//对数据库里的File进行一个增加</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">fileDelete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        FileUtil fileUtil = <span class="keyword">new</span> FileUtil();</span><br><span class="line"></span><br><span class="line">        String filename = <span class="string">&quot;test&quot;</span>;</span><br><span class="line">        <span class="keyword">boolean</span> b = fileUtil.fileDelete( filename + <span class="string">&quot;.png&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://pic1.imgdb.cn/item/635cfad316f2c2beb109914f.png"></p>
<p><img src="https://pic1.imgdb.cn/item/635cfaff16f2c2beb10a0d40.png">)</p>
<p>程序彻底写完了</p>
]]></content>
  </entry>
  <entry>
    <title>操作系统银行家算法下的安全性算法</title>
    <url>/2022/10/24/%E5%AE%89%E5%85%A8%E6%80%A7%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="操作系统银行家算法下的安全性算法"><a href="#操作系统银行家算法下的安全性算法" class="headerlink" title="操作系统银行家算法下的安全性算法"></a>操作系统银行家算法下的安全性算法</h1><p><strong>具体介绍：</strong></p>
<p><a href="https://blog.csdn.net/qq_46242152/article/details/109710603?ops_request_misc=%7B%22request_id%22:%22166660557716782417019465%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=166660557716782417019465&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-109710603-null-null.142%5Ev59%5Epc_search_tree,201%5Ev3%5Econtrol_2&utm_term=%E5%AE%89%E5%85%A8%E6%80%A7%E7%AE%97%E6%B3%95&spm=1018.2226.3001.4187">(181条消息) 操作系统中的银行家算法与安全性算法_Tsuki_L的博客-CSDN博客_安全性算法</a></p>
<p>这里我只做我自己的实现，具体含义以及逻辑请参考上述的blog</p>
<h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><p>算法的目的是为了查询一个序列是否有安全性序列</p>
<p><strong>pojo类</strong>即实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Task</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> A;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> B;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> C;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setA</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        A = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> B;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setB</span><span class="params">(<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        B = b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getC</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setC</span><span class="params">(<span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        C = c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;task&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;A=&quot;</span> + A +</span><br><span class="line">                <span class="string">&quot;, B=&quot;</span> + B +</span><br><span class="line">                <span class="string">&quot;, C=&quot;</span> + C +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Task</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        A = a;</span><br><span class="line">        B = b;</span><br><span class="line">        C = c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Task</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>安全性算法的实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.untils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.Task;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySecurityAlgorithms</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//这是一个安全性算法</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSecurityList</span><span class="params">(<span class="keyword">int</span> num, List&lt;Task&gt; taskList, Task available, List&lt;Task&gt; allocation)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//数据</span></span><br><span class="line">        <span class="keyword">boolean</span> finish[] = <span class="keyword">new</span> <span class="keyword">boolean</span>[num];</span><br><span class="line">        Task work = <span class="keyword">new</span> Task();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//默认所有的finish初始化都为false</span></span><br><span class="line">        <span class="comment">//数据初始化</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">            finish[i] = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        work = available;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] safeList = <span class="keyword">new</span> <span class="keyword">int</span>[num];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//表示回合里边有程序能够执行 如果回合里没有程序能够执行 则说明没有足够量的资源可以执行 程序进入等待状态</span></span><br><span class="line">        <span class="keyword">boolean</span> can = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">//按照顺序遍历taskList</span></span><br><span class="line">        <span class="comment">//找到能够完成的进程</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (can) &#123;</span><br><span class="line">            can = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//遍历整个taskList</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; num; j++) &#123;</span><br><span class="line"></span><br><span class="line">                Task p = taskList.get(j);</span><br><span class="line">                Task a = allocation.get(j);</span><br><span class="line">                <span class="comment">//如果资源都足够 且都符合执行条件 那么就执行</span></span><br><span class="line">                <span class="keyword">if</span> (p.getA() &lt;= work.getA() + a.getA() &amp;&amp; p.getB() &lt;= work.getB() + a.getB() &amp;&amp; p.getC() &lt;= work.getC() + a.getC() &amp;&amp; !finish[j]) &#123;</span><br><span class="line">                    work.setA(work.getA() + a.getA());</span><br><span class="line">                    work.setB(work.getB() + a.getB());</span><br><span class="line">                    work.setC(work.getC() + a.getC());</span><br><span class="line">                    finish[j] = <span class="keyword">true</span>;</span><br><span class="line">                    can = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//将序号读入安全序列</span></span><br><span class="line">                    safeList[i] = j;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果所有的finish都为true 则说明有执行过了 也有安全的序列</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">boolean</span> b : finish) &#123;</span><br><span class="line">            <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                t++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (t == num) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;找到了安全序列 安全序列为：&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; num; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (k == num - <span class="number">1</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;p&quot;</span> + safeList[k]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;p&quot;</span> + safeList[k] + <span class="string">&quot;--&gt;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;未找到安全序列&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>测试类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.pojo.Task;</span><br><span class="line"><span class="keyword">import</span> com.dwx.untils.MySecurityAlgorithms;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySATest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MySITest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MySecurityAlgorithms mySecurityAlgorithms = <span class="keyword">new</span> MySecurityAlgorithms();</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">5</span>;</span><br><span class="line">        <span class="comment">//需求队列</span></span><br><span class="line">        List&lt;Task&gt; taskList = <span class="keyword">new</span> ArrayList&lt;Task&gt;();</span><br><span class="line"></span><br><span class="line">        taskList.add(<span class="keyword">new</span> Task(<span class="number">7</span>,<span class="number">5</span>,<span class="number">3</span>));</span><br><span class="line">        taskList.add(<span class="keyword">new</span> Task(<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>));</span><br><span class="line">        taskList.add(<span class="keyword">new</span> Task(<span class="number">9</span>,<span class="number">0</span>,<span class="number">2</span>));</span><br><span class="line">        taskList.add(<span class="keyword">new</span> Task(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>));</span><br><span class="line">        taskList.add(<span class="keyword">new</span> Task(<span class="number">4</span>,<span class="number">3</span>,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//已分配资源队列</span></span><br><span class="line">        List&lt;Task&gt; allocation = <span class="keyword">new</span> ArrayList&lt;Task&gt;();</span><br><span class="line">        allocation.add(<span class="keyword">new</span> Task(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>));</span><br><span class="line">        allocation.add(<span class="keyword">new</span> Task(<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        allocation.add(<span class="keyword">new</span> Task(<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>));</span><br><span class="line">        allocation.add(<span class="keyword">new</span> Task(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">        allocation.add(<span class="keyword">new</span> Task(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        Task available = <span class="keyword">new</span> Task(<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>);</span><br><span class="line">        mySecurityAlgorithms.getSecurityList(num,taskList,available,allocation);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>结果</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">找到了安全序列 安全序列为：p1--&gt;p3--&gt;p4--&gt;p0--&gt;p2</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>弗洛伊德算法</title>
    <url>/2022/03/16/%E5%BC%97%E6%B4%9B%E4%BC%8A%E5%BE%B7%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="弗洛伊德算法"><a href="#弗洛伊德算法" class="headerlink" title="弗洛伊德算法"></a>弗洛伊德算法</h1><h2 id="算法思路"><a href="#算法思路" class="headerlink" title="算法思路"></a>算法思路</h2><p>弗洛伊德算法比起迪杰斯特拉算法不一样，它比迪杰斯特拉多了一个循环。</p>
<p>迪杰斯特拉算法是求一个固定起点到其他点的最短路径 弗洛伊德算法是求图中任何点的两点间的最短路径。</p>
<p><strong>算法的核心：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (k=<span class="number">0</span>;k&lt;n;k++)&#123;</span><br><span class="line">           <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">               <span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                   <span class="comment">//弗洛伊德算法是为了改写长度</span></span><br><span class="line">                   <span class="keyword">if</span> (e[i][j]&gt;e[i][k]+e[k][j])&#123;</span><br><span class="line">                       <span class="comment">//改变长度</span></span><br><span class="line">                       e[i][j] = e[i][k]+e[k][j];</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

<h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Floyd</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这里我们写一个弗洛伊德算法</span></span><br><span class="line">    <span class="comment">//弗洛伊德算法属于是比较好理解好学的算法了</span></span><br><span class="line">    <span class="comment">//这里我们用e数组来存放一个二维图</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> e[][];</span><br><span class="line">    <span class="keyword">int</span> inf = <span class="number">99999999</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] getE() &#123;</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setE</span><span class="params">(<span class="keyword">int</span>[][] e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.e = e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//编写弗洛伊德算法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">floyd</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//n指的是点的个数</span></span><br><span class="line">        <span class="keyword">int</span> n = e.length;</span><br><span class="line">        <span class="comment">//弗洛伊德算法的核心</span></span><br><span class="line">        <span class="comment">//弗洛伊德算法的核心是三重循环</span></span><br><span class="line">        <span class="keyword">int</span> i,j,k;</span><br><span class="line">        <span class="keyword">for</span> (k=<span class="number">0</span>;k&lt;n;k++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                    <span class="comment">//弗洛伊德算法是为了改写长度</span></span><br><span class="line">                    <span class="keyword">if</span> (e[i][j]&gt;e[i][k]+e[k][j])&#123;</span><br><span class="line">                        <span class="comment">//改变长度</span></span><br><span class="line">                        e[i][j] = e[i][k]+e[k][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>算法实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.passage2.Floyd;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">floydTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入有几个点:&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[][] a = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">        <span class="comment">//我们已经是彻底改变为0的初始化了</span></span><br><span class="line">        <span class="comment">//下边我们读入边的关系 我们写一个有向图的吧</span></span><br><span class="line">        System.out.print(<span class="string">&quot;请输入边数:&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> m =scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> inf = <span class="number">99999999</span>;</span><br><span class="line">        <span class="comment">//先对其进行初始化 要求i=j为0 其余为无穷</span></span><br><span class="line">        <span class="keyword">int</span> z ,h;</span><br><span class="line">        <span class="keyword">for</span> (z=<span class="number">0</span>;z&lt;n;z++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (h=<span class="number">0</span>;h&lt;n;h++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (z==h)&#123;</span><br><span class="line">                    a[z][h] = <span class="number">0</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    a[z][h] = inf;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;输入点a:&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> x = scanner.nextInt();</span><br><span class="line">            System.out.print(<span class="string">&quot;输入b:&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> y = scanner.nextInt();</span><br><span class="line">            System.out.print(<span class="string">&quot;输入边长&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> l = scanner.nextInt();</span><br><span class="line">            a[x-<span class="number">1</span>][y-<span class="number">1</span>] = l;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : a) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                <span class="keyword">if</span> (anInt!=inf)</span><br><span class="line">                    System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    System.out.print(<span class="string">&quot;inf&quot;</span>+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===============================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用弗洛伊德算法进行处理</span></span><br><span class="line">        Floyd floyd = <span class="keyword">new</span> Floyd();</span><br><span class="line">        floyd.setE(a);</span><br><span class="line">        floyd.floyd();</span><br><span class="line">        <span class="keyword">int</span>[][] e = floyd.getE();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : e) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                <span class="keyword">if</span> (anInt!=inf)</span><br><span class="line">                    System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    System.out.print(<span class="string">&quot;inf&quot;</span>+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/05/26/%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<h1 id="MtachorCupD题解题思路"><a href="#MtachorCupD题解题思路" class="headerlink" title="MtachorCupD题解题思路"></a>MtachorCupD题解题思路</h1><h2 id="第一题的解题思路"><a href="#第一题的解题思路" class="headerlink" title="第一题的解题思路"></a>第一题的解题思路</h2><p>对于第一题，是一个求圆进行覆盖的图，基本思路是：</p>
<ul>
<li>先对这些数进行从大到小的排序</li>
<li>找出最大的数，对这个数进行建站</li>
<li>这个数方圆</li>
</ul>
<h2 id="第三问"><a href="#第三问" class="headerlink" title="第三问"></a>第三问</h2><p>第三问 我的思路是将所有的单点都去除掉</p>
<p>然后使用聚类 看看聚类的效果，</p>
<p>使用k-means聚类来测试</p>
<p><strong>第一次聚类 428有点小了</strong></p>
<p><strong>第二次聚类 5000 有点大了</strong></p>
<p>采用折半搜索</p>
<p><strong>第三次聚类 2714 有点大了</strong></p>
<p><strong>第四次聚类 1571 有点大了</strong></p>
<p><strong>第五次聚类 999 有点大了</strong></p>
<p><strong>第六次聚类 713有点大了</strong></p>
<p><strong>第七次聚类 571有点大了</strong></p>
<p><strong>第七次聚类 499不合适了</strong></p>
<p>不能用多重聚类这种方法去写 因为k-means的机制的原因。k-means是先找到一个点，然后找里这个点进的点，但是跟题目中的要求不同，因此不能这样去考虑</p>
<h2 id="利用最短距离法进行聚类"><a href="#利用最短距离法进行聚类" class="headerlink" title="利用最短距离法进行聚类"></a>利用最短距离法进行聚类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">错误使用 internal.stats.pdistmex</span><br><span class="line">请求的 1x16677862930 (<span class="number">124.</span>3GB)数组超过预设的最大数组大小。创建大于此限制的数组可能需要较长时间，并且会导致 MATLAB</span><br><span class="line">无响应。</span><br></pre></td></tr></table></figure>

<p>无法直接使用最短距离法进行聚类</p>
<p>既然k-means可以搞出几个临近的数 我们也可以在k-means聚类后的基础上进行聚类</p>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>三等奖</p>
<p>我个人认为还不错</p>
]]></content>
  </entry>
  <entry>
    <title>更换证件照背景（简单不稳定）</title>
    <url>/2022/01/24/%E6%8D%A2%E5%9B%BE%E7%89%87%E8%83%8C%E6%99%AF%E9%A2%9C%E8%89%B2%E7%A8%8B%E5%BA%8F(%E7%AE%80%E5%8D%95)/</url>
    <content><![CDATA[<h1 id="更换证件照背景（简单不稳定）"><a href="#更换证件照背景（简单不稳定）" class="headerlink" title="更换证件照背景（简单不稳定）"></a>更换证件照背景（简单不稳定）</h1><p>某天一个高中同学拜托我帮她改变证件照的背景，但是当时我不会PS，虽然想到了下边这个程序（虽然现在看来是不行的），我因为懒就没有帮助她，现在我来介绍我的程序的解决方式。</p>
<h2 id="程序原理"><a href="#程序原理" class="headerlink" title="程序原理"></a>程序原理</h2><p><strong>程序原理：</strong></p>
<ul>
<li><p>通过改变图片的像素块的颜色改变图片的背景</p>
</li>
<li><p>图片看似是整个一片，但是其实是由一个个像素块拼接而来的</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/623bb94e8ea3ac56.jpg" alt="整个图片"> </p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/e7c9ad05f448e500.jpg" alt="色素快"></p>
</li>
<li><p>获得一个个像素点的rgb值，然后修改这个值，就完成了背景的修改</p>
</li>
</ul>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p><strong>代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChangeColor</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">//读取照片</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;src/main/java/com/dwx/pic.jpg&quot;</span>);</span><br><span class="line">        <span class="comment">//新图片地址</span></span><br><span class="line">        File file1 = <span class="keyword">new</span> File(<span class="string">&quot;src/main/java/newpic.jpg&quot;</span>);</span><br><span class="line">        FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(file1);</span><br><span class="line">        <span class="comment">//通过idea的图像功能获取到的图片的背景的RGB颜色</span></span><br><span class="line">        Color colorOld = <span class="keyword">new</span> Color(<span class="number">253</span>,<span class="number">253</span>,<span class="number">255</span>);</span><br><span class="line">        <span class="comment">//希望改成的RGB颜色</span></span><br><span class="line">        Color colorNew = <span class="keyword">new</span> Color(<span class="number">250</span>, <span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line">        BufferedImage read = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            read = ImageIO.read(file);</span><br><span class="line">            <span class="keyword">int</span> height = read.getHeight();</span><br><span class="line">            <span class="keyword">int</span> width = read.getWidth();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;width;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;height;j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (read.getRGB(i,j)==colorOld.getRGB())&#123;</span><br><span class="line">                        <span class="comment">//如果相等就将次点的颜色设置成我们需要的颜色</span></span><br><span class="line">                        read.setRGB(i,j,colorNew.getRGB());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//最后 把修改过的RGB再写回去</span></span><br><span class="line">            ImageIO.write(read,<span class="string">&quot;jpg&quot;</span>,fileOutputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>代码步奏:</strong></p>
<ul>
<li>读取照片<code>File()</code></li>
<li>通过Image类的<code>read()</code>方法来读取这个图片中的数据 （假设产生的对象为read）</li>
<li>通过read的<code>getHeight()</code>方法获取图片的高</li>
<li>通过read的<code>getWidth()</code>方法获取图片的宽</li>
<li>通过一个for循环遍历图片的一个个像素点的并通过<code>getRGB()</code>方法获取到像素点的RGB值</li>
<li>如果该店的RGB值和我们想要换掉的值一样，那么通过<code>setRGB()</code>方法来设置该点的颜色</li>
<li>通过ImageIo的<code>write()</code>方法，把更改过得read在创建成一个新的图片</li>
</ul>
<p><strong>成品：</strong></p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/01/9be20aa628c8fcb7.jpg" alt="成品"> </p>
<h2 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h2><p><strong>很明显这个图片有个白边 有的地方没有被修改</strong></p>
<p><strong>原因：</strong></p>
<ul>
<li>一个图片的背景不可能是纯色的，每个像素点的RGB可能都不一样</li>
<li>不同颜色之间有一个渐变，渐变是由很多不同的色素快构成的，因此无法改变边缘的颜色不同的问题</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/%E6%8E%92%E5%BA%8F%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="排序检索数据"><a href="#排序检索数据" class="headerlink" title="排序检索数据"></a>排序检索数据</h1><h2 id="排序数据"><a href="#排序数据" class="headerlink" title="排序数据"></a>排序数据</h2><p>使用ORDER BY子句可以进行排序，子句可以取一个或多个列的名字</p>
<p>自己排序是是根据其对应的数字大写升序排序的</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表名</span><br><span class="line">ORDER BY 列名;</span><br></pre></td></tr></table></figure>

<h2 id="按多个列排序"><a href="#按多个列排序" class="headerlink" title="按多个列排序"></a>按多个列排序</h2><p>这里的“按多个列排序”是有比较的先后级的</p>
<ul>
<li>先按照选择的第一列进行排序</li>
<li>在对第一列中重复的按照第二列进行排序，以后的以此中模式进行</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名,列名,列名</span><br><span class="line">FORM 表名</span><br><span class="line">ORDER BY 列名,列名;</span><br></pre></td></tr></table></figure>

<h2 id="指定排序方向"><a href="#指定排序方向" class="headerlink" title="指定排序方向"></a>指定排序方向</h2><p>数据排序在默认情况下是按照升序排序的，不过也可以通过使用<strong>DECS</strong>来实现降序排序</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表名</span><br><span class="line">ORDER BY 列名 DESC;</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：如果要实现多个列上进行降序排序，必须在每个列指定DESC关键字</p>
]]></content>
  </entry>
  <entry>
    <title>我的教师专业发展学习心得（自用）</title>
    <url>/2022/12/31/%E6%95%99%E5%B8%88%E4%B8%93%E4%B8%9A%E5%8F%91%E5%B1%95%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<h1 id="教师专业发展结课作业"><a href="#教师专业发展结课作业" class="headerlink" title="教师专业发展结课作业"></a>教师专业发展结课作业</h1><p>教师专业发展的节课作业是一篇3000字的学习心得，12月31日晚9点前交给老师。</p>
<p>三千字对于一门课的学习心得来说并不多，难点在于组织文章的结构，如果文章的结构确定了，剩下来的填写内容部分就简单很多了。</p>
<h2 id="文章的内容结构"><a href="#文章的内容结构" class="headerlink" title="文章的内容结构"></a>文章的内容结构</h2><p>经过我的分析文章结构分为</p>
<ul>
<li>认清身份 （认清教师的身份与角色）</li>
<li>找准方向 （教师需要在 文化常识、教学方法、专业课三个方面进行不断地提升）</li>
<li>螺旋式前进 （有动力、找到发展动力的内因和外因以及他们的作用、实验、总结、调整、再实验的学习过程）</li>
</ul>
<p>三个方面，三方面包含的主要内容已经说明，大概就是围绕这几点来写。</p>
<h2 id="认清身份"><a href="#认清身份" class="headerlink" title="认清身份"></a>认清身份</h2><p>讲一点身份认同</p>
<p>教师应该能够认清自己的身份与角色。</p>
<p>当提到教师我就会想到“教书育人”一词，教师不仅要教好书，还要育好人。</p>
<p>必须要认清，教师也是学习者，需要不断地学习</p>
<p><strong>教师职业的要求</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">教师角色 角色要求. 教师角色体现着社会期望年轻一代成为继承、发扬年长一代的事业的人才。. “育人”是它的行为的基本准则。. 履行这一准则者，才具有这一身份，居有这一位置。. 凡具有这一身份者，无论他对其身份的理解如何，都在一定的程度上，照此准则行事。. 随着他对社会的上述期望的认同程度的加深，他“以身作则，为人师表，诲人不倦，期望学生成才”的基本心理特征就更为明显。. 这认同程度与其“育人”实践的广度、深度成正相关。. 具有此身份者，在其他的社会关系的位置上，又有另外的身份，如父 (母)、兄 (姐)、朋友，等等。. 但他作为教师，对于学生，始终是个“育人”角色。.</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">教师角色指社会对教师职能和地位的期望和要求。它规定了教师在教育情境中所应该表现的心理和行为方式。角色主要包括知识的传播者和创造者，学习的促进者、教学的设计者、家长的代言人、社会规范的象征者以及人际关系的协调者等。 [1] </span><br><span class="line">从另一个角度也可以理解为：教师在社会关系中的一种位置，因社会分工而具有对年轻一代传授科学文化知识、培养思想情操和行为习惯者的身份。 [2] </span><br></pre></td></tr></table></figure>

<p><strong>育好人</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我国的教育目的： 培养德、智、体等方面全面发展的社会主义事业的“建设者和接班人”。</span><br></pre></td></tr></table></figure>

<p><strong>爱国主义教育</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爱国主义教育是指树立热爱祖国并为之献身的思想教育。爱国主义教育是思想政治教育的重要内容。爱国主义是一面具有最大号召力的旗帜，是中华民族的优良传统。中国爱国主义教育的特点是：艰苦奋斗、辛勤劳动，不断丰富和发展中华民族的物质文化财富；反对民族分裂 和国家分裂，维护各民族的联合、团结和国家的统一；在外敌入侵面前，团结对外，英勇抵抗，维护祖国的主权和独立；同一切阻碍历史发展和社会进步的势力和制度进行斗争，推动祖国的繁荣和进步。</span><br><span class="line">当代中国，爱国主义的本质就是坚持爱国和爱党、爱社会主义高度统一。 [1] </span><br></pre></td></tr></table></figure>

<h2 id="找准方向"><a href="#找准方向" class="headerlink" title="找准方向"></a>找准方向</h2><p>教师需要在文化常识，教育知识，专业课三方面不断提升。</p>
<p><strong>文化常识</strong></p>
<p>讲讲德育吧，这是我们这个时代需要的，爱国主义教育需要文化常识</p>
<p><strong>教育知识</strong></p>
<p>教育知识应当包括教学方法和教育理念</p>
<p><strong>教育方法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">教育方法是指在一定的教育思想指导下形成的实现其教育思想的策略性途径。包括教师直接指向教育内容的教学方法、学生学习方法指导及学前教育和家庭教育的方法。</span><br><span class="line">教育方法是教育的客观规律和原则的反映和具体体现，正确地运用各种教育方法，对提高教学质量，实现教育目的，完成教育任务具有重要的意义。</span><br></pre></td></tr></table></figure>





<p><strong>教育理念</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">教育理念，即关于教育方法的观念，是教育主体在教学实践及教育思维活动中形成的对“教育应然”的理性认识和主观要求，包括教育宗旨、教育使命、教育目的、教育理想、教育目标、教育要求、教育原则等内容。</span><br></pre></td></tr></table></figure>





<p><strong>专业课</strong></p>
<p>以计算机为例，以高中信息技术为例。教师如何进行学习。</p>
<p><strong>如何提升</strong></p>
<p>我认为最好的方法就是加入教师学习共同体，（给出教师学习共同体的概念），（教师学习共同体的作用），（抄几段教师学习共同体的作用），（教师学习共同体需要注意的点）</p>
<p><strong>全过程民主</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">全过程民主包括民主选举、民主决策、民主管理、民主监督等过程。</span><br></pre></td></tr></table></figure>

<h2 id="螺旋式前进"><a href="#螺旋式前进" class="headerlink" title="螺旋式前进"></a>螺旋式前进</h2><p>教育知识只是间接经验，</p>
<p><strong>间接经验</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">人凭借书本等各种文字记载所获得的知识</span><br></pre></td></tr></table></figure>

<p><strong>直接经验</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">亲身参加变革现实的实践而获得的知识</span><br></pre></td></tr></table></figure>

<p>书本上的教育方法不是教条，需要结合自己的教学环境进行改变</p>
<p>“实践是检验真理的唯一标准”，</p>
]]></content>
  </entry>
  <entry>
    <title>数据库的建立</title>
    <url>/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%BB%BA%E7%AB%8B/</url>
    <content><![CDATA[<h1 id="数据库的建立"><a href="#数据库的建立" class="headerlink" title="数据库的建立"></a>数据库的建立</h1><p>初学MySQL数据库，还不会使用cmd创建数据库。因此我通过可是化的软件在实现数据库的建立</p>
<h2 id="SQLyog的使用"><a href="#SQLyog的使用" class="headerlink" title="SQLyog的使用"></a>SQLyog的使用</h2><p>我们下载号SQLyog后，可以再对MySQL链接一下，通过可视化的操作建立数据库</p>
<p><img src="/dwx-tx.github.io/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%BB%BA%E7%AB%8B/截屏\数据库创建01.jpg"></p>
<p><img src="/dwx-tx.github.io/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%BB%BA%E7%AB%8B/截屏\数据库创建02.jpg"></p>
<p>注意 在创建时一定要使用UTF-8字符集</p>
<p>在核对时一定要选择utf-8_general_ei</p>
<p>这样的选择可以对中文融合</p>
]]></content>
  </entry>
  <entry>
    <title>过滤</title>
    <url>/2021/12/16/%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4/</url>
    <content><![CDATA[<h1 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h1><h2 id="组合WHERE子句"><a href="#组合WHERE子句" class="headerlink" title="组合WHERE子句"></a>组合WHERE子句</h2><p>为了进行更强的过滤控制，MySQL允许给出多个WHERE子句，<strong>以AND子句的方式或OR子句的方式使用</strong></p>
<h2 id="AND操作符"><a href="#AND操作符" class="headerlink" title="AND操作符"></a>AND操作符</h2><p>关键字<strong>AND</strong>用于添加多个过滤条件，<strong>每添加一条就要使用一个AND</strong></p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 条件一 AND 条件二;</span><br></pre></td></tr></table></figure>

<p><strong>意义</strong>:筛选出即符合条件一并且符合条件二的数据</p>
<h2 id="OR操作符"><a href="#OR操作符" class="headerlink" title="OR操作符"></a>OR操作符</h2><p>关键字<strong>OR</strong>也是用于添加过滤条件，<strong>每添加一条条件就需要使用一个OR</strong></p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 条件一 OR 条件二;</span><br></pre></td></tr></table></figure>

<p><strong>意义</strong>:筛选出符合条件一或者符合条件二的数据</p>
<h3 id="计算次序"><a href="#计算次序" class="headerlink" title="计算次序"></a>计算次序</h3><p>在复合使用<strong>AND</strong>和<strong>OR</strong>时，需要注意，AND的优先级要高于OR，因此如果要正确的表达你所要表达的意思，一般配合括号**()**来使用。</p>
<h2 id="IN操作符"><a href="#IN操作符" class="headerlink" title="IN操作符"></a>IN操作符</h2><p>IN操作符用来指定条件范围，范围中的每一个条件都可以进行匹配。IN取合法值得由逗号分隔的清单全部括在圆括号里.</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 列名 IN (xx,XX);</span><br></pre></td></tr></table></figure>

<p>IN(xx,XX)是等同于xx OR XX</p>
<p>那么为什么要是用IN而不是OR呐？</p>
<p><strong>使用IN操作符的优势</strong></p>
<ul>
<li>在使用长的合法选项清单时，IN操作符的语法更加清楚，且更加直观</li>
<li>在使用IN时，计算的次序容易管理</li>
<li>IN操作符一般比OR操作符清单执行更快</li>
<li>IN的最大优点在于可以包含其他SELECT语句，是能够更动态地建立WHERE子句。</li>
</ul>
<h2 id="NOT操作符"><a href="#NOT操作符" class="headerlink" title="NOT操作符"></a>NOT操作符</h2><p><strong>NOT</strong>操作符用于对其他条件进行否定，因此NOT操作符要配合其他条件一起使用</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 列名 NOT 条件;</span><br></pre></td></tr></table></figure>

<p>MySQL中的NOT ，<strong>支持对IN、BETWEEN和EXISTS子句取反</strong></p>
]]></content>
  </entry>
  <entry>
    <title>新乡市数学建模</title>
    <url>/2022/05/24/%E6%96%B0%E4%B9%A1%E5%B8%82%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/</url>
    <content><![CDATA[<h1 id="新乡市数学建模"><a href="#新乡市数学建模" class="headerlink" title="新乡市数学建模"></a>新乡市数学建模</h1><h2 id="活动通知"><a href="#活动通知" class="headerlink" title="活动通知"></a>活动通知</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">各位同学大家好！</span><br><span class="line">2022年新乡市大学生数学建模联赛即将来临，请同学们认真阅读附件，并积极参加！</span><br><span class="line">参赛对象：全体在校学生</span><br><span class="line">报名时间：5月16日--5月20日</span><br><span class="line">竞赛时间：2022年5月23日上午8：00----2022年5月27日下午20：00</span><br><span class="line">报名及参赛方式:</span><br><span class="line">由参赛队伍在官网报名并在官网中按时提交论文。</span><br><span class="line">论文命名及格式要求以竞赛官网要求为准，请有意参赛的同学把报名表及论文于5月28日中午11：00前交给活动负责人祁孟瑶qq：3308392481</span><br><span class="line">本次竞赛只收集电子版报名信息和论文，不再收集纸质版。</span><br><span class="line">请参赛同学加入QQ群聊：</span><br><span class="line">872816081后续细节将在群内发布</span><br><span class="line">参赛详情见下方文件电子版报名表见附件1</span><br><span class="line">如有问题请联系活动负责人：</span><br><span class="line">马晓雨qq：2205234437</span><br><span class="line">祁孟瑶qq：3308392481</span><br></pre></td></tr></table></figure>

<h2 id="对A题的分析"><a href="#对A题的分析" class="headerlink" title="对A题的分析"></a>对A题的分析</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">2022</span>年<span class="number">3</span>月<span class="number">22</span>日，中国高等教育学会高校竞赛评估与管理体系研究工作组发布<span class="number">2021</span>全国普通高校大学生竞赛排行榜。进入<span class="number">2017</span>-<span class="number">2021</span>年学科竞赛排行榜榜单的一共有<span class="number">56</span>项竞赛。相比<span class="number">2020</span>年减少了<span class="number">1</span>项竞赛。当前有不少研究探讨了学科竞赛在专业建设中的作用，但针对某一高校学科竞赛分级分类体系的构建研究较少.主要原因来源于两个方面：一方面是学校对比赛的重视程度不同，另一方面是学校和学科的性质不同。这两方面的原因直接决定了学校或者学科参与竞赛和对竞赛分级体系构建的不一样。经过前期调研发现，部分学科竞赛片面追求大辐射范围，有个别学科每年学生参加的竞赛种类有好几十个，很多竞赛管理不规范，信息的不对称也使高校对众多竞赛实际质量缺乏充分的了解，很多比赛变成用时间和金钱换取证书，完全背离了初衷。一些大学一直高度重视学生综合素质的全面发展和创新能力的培养，积极组织学生参与各类学科竞赛，并取得了不错的成绩，但也面临高质量竞赛选择的困惑。</span><br><span class="line">本题目学生需要做的是：选取一个学科（物理、化学、数学、计算机等）的主要赛事，深入研究国家级和省级学科竞赛的主办单位、国际国内影响力和知名度、参与高校层次、参与学生覆盖面、竞赛设奖情况、对学生能力培养的支撑度、竞赛组织的稳定性和延续性等因素。（<span class="number">1</span>）建立数学模型，对竞赛进行科学评价的指标体系进行分类和筛选。</span><br><span class="line">（<span class="number">2</span>）对比中国高等教育学会高校竞赛评估与管理体系研究工作组发布的全国普通高校大学生竞赛排行榜，给出相关科学竞赛的排行榜。</span><br><span class="line">（<span class="number">3</span>）根据你的模型，对高等教育学会高校竞赛评估与管理体系研究工作组发布的<span class="number">56</span>项竞赛进行排名。</span><br></pre></td></tr></table></figure>

<p><strong>分析：</strong></p>
<ul>
<li>是一个评价问题 </li>
<li>数据需要自己找（自己找数据就会遇到很多问题）</li>
</ul>
<p>建议放弃</p>
<h2 id="对B题的分析"><a href="#对B题的分析" class="headerlink" title="对B题的分析"></a>对B题的分析</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">第八届新乡市数学建模竞赛题目</span><br><span class="line">B题 矿石加工质量控制问题</span><br><span class="line">提高矿石加工质量，可以直接或间接地节约不可再生的矿物资源以及加工所需的能源，从而推动节能减排，助力“双碳”目标的实现。矿石加工是一个复杂的过程，在加工过程中，电压、水压、温度作为影响矿石加工的重要因素，直接影响着矿石产品的质量。矿石加工过程如图<span class="number">1</span>所示。某生产车间对于一批原矿进行加工，相关的原矿参数见附件<span class="number">1</span>和附件<span class="number">2</span>。为了方便描述，假设矿石加工过程需要经过系统I和系统II两个环节，两个环节不分先后，其他条件（电压、水压等）保持不变。生产技术人员可以通过传入调温指令，调节温度来改变产品质量。其中系统I和II的温度数据见附件<span class="number">1</span>和附件<span class="number">2</span>。矿石加工过程为<span class="number">2</span>小时整（即：在调节温度<span class="number">2</span>个小时后，可检测得到该调节温度所对应的矿石产品质量的评价指标（A,B,C,D）），假设每次温度调节之后的<span class="number">2</span>个小时内不会传入新的调温指令，附件<span class="number">1</span>和附件<span class="number">2</span>中的温度数据记录了系统的实时温度，调温指令下达后系统温度基本与调温指令设定的温度相同，但是有轻微波动。注：附件<span class="number">1</span>和附件<span class="number">2</span>中，原矿参数和过程数据未给出数据的具体名称，不同类型的数据，采集时间间隔不同。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">图<span class="number">1</span> 矿石加工过程</span><br><span class="line">问题<span class="number">1</span>：附件<span class="number">1</span>给出了该生产车间<span class="number">2022</span>-<span class="number">01</span>-<span class="number">13</span>至<span class="number">2022</span>-<span class="number">01</span>-<span class="number">22</span>的生产加工数据，请应用附件<span class="number">1</span>的数据，建立数学模型，给出利用系统温度预测产品质量的方法。在给定的<span class="number">2022</span>-<span class="number">01</span>-<span class="number">23</span>原矿参数（见附件<span class="number">1</span>）和系统设定温度（见表<span class="number">1</span>，假设系统温度与调温指令设定的温度相同）下，给出产品质量预测结果。注意：在所给数据中，由于其他不确定因素的影响，在相同（或者相近）的系统温度下生产出来的产品质量可能有比较大的差别，在这种情况下请预测可能性最大的产品指标，并填入表<span class="number">1</span>。</span><br><span class="line">表<span class="number">1</span> 问题<span class="number">1</span>结果</span><br><span class="line">时间	系统I设定温度	系统II设定温度	指标A	指标B	指标C	指标D</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-<span class="number">23</span>	<span class="number">1404.89</span>	<span class="number">859.77</span>				</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-<span class="number">23</span>	<span class="number">1151.75</span>	<span class="number">859.77</span>				</span><br><span class="line">问题<span class="number">2</span>：根据问题<span class="number">1</span>的结果，利用附件<span class="number">1</span>的数据，假设原矿参数和产品目标质量已知（系统温度未知），请建立数学模型，估计产品目标质量所对应的系统温度。在给定的<span class="number">2022</span>-<span class="number">01</span>-<span class="number">24</span>原矿参数（见附件<span class="number">1</span>）和目标产品质量（见表<span class="number">2</span>）下，给出系统设定温度（假设调温指令设定的温度与系统温度相同）。注意，同一组产品质量可能有多种调温方法都可以得到，请给出可能性最大的系统设定温度，并填入表<span class="number">2</span>。</span><br><span class="line">表<span class="number">2</span> 问题<span class="number">2</span>结果</span><br><span class="line">时间	指标A	指标B	指标C	指标D	系统I设定温度	系统II设定温度</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-<span class="number">24</span>	<span class="number">79.17</span>	<span class="number">22.72</span>	<span class="number">10.51</span>	<span class="number">17.05</span>		</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-<span class="number">24</span>	<span class="number">80.10</span>	<span class="number">23.34</span>	<span class="number">11.03</span>	<span class="number">13.29</span>		</span><br><span class="line"></span><br><span class="line">问题<span class="number">3</span>：过程数据是在矿石加工过程中检测得到的（见图<span class="number">1</span>），可以反映原矿质量。由于同一批次（天）的原矿质量有差别，也可能造成在传入相同（或者相近）调温指令后生产出来的产品质量有差别。附件<span class="number">2</span>给出了该生产车间<span class="number">2022</span>-<span class="number">01</span>-<span class="number">25</span>至<span class="number">2022</span>-<span class="number">04</span>-<span class="number">07</span>的生产加工数据及过程数据。表<span class="number">3</span>给出了矿石产品的销售条件，满足销售条件的产品视为合格产品，否则视为不合格产品，假设每单位时间生产的产品数量相同，合格率=合格产品数/产品总数。请建立数学模型，给出指定系统设定温度，预测矿石产品合格率的方法。在给定的<span class="number">2022</span>-<span class="number">04</span>-08和<span class="number">2022</span>-<span class="number">04</span>-09原矿参数、过程数据（见附件<span class="number">2</span>）和系统设定温度（见表<span class="number">4</span>，假设系统温度与调温指令设定的温度相同）下，给出合格率预测结果，填入表<span class="number">4</span>，并建立数学模型对给出的合格率的准确性进行评价。</span><br><span class="line">表<span class="number">3</span> 产品销售条件</span><br><span class="line">指标	指标A	指标B	指标C	指标D</span><br><span class="line">销售条件	<span class="number">77.78</span> - <span class="number">80.33</span>	&lt;<span class="number">24.15</span>	&lt;<span class="number">17.15</span>	&lt;<span class="number">15.62</span></span><br><span class="line">表<span class="number">4</span> 问题<span class="number">3</span>结果</span><br><span class="line">时间	系统I设定温度	系统II设定温度	合格率</span><br><span class="line"><span class="number">2022</span>-<span class="number">04</span>-08	<span class="number">341.40</span>	<span class="number">665.04</span>	</span><br><span class="line"><span class="number">2022</span>-<span class="number">04</span>-09	<span class="number">1010.32</span>	<span class="number">874.47</span>	</span><br><span class="line"></span><br><span class="line">问题<span class="number">4</span>：根据问题<span class="number">3</span>中的结果，利用附件<span class="number">2</span>的数据，建立数学模型分析在指定合格率的条件下，如何设定系统温度的方法，并完成以下任务：（<span class="number">1</span>）适当的敏感性分析；（<span class="number">2</span>）对结果准确性的分析；（<span class="number">3</span>）判断能否达到表<span class="number">5</span>中给出的<span class="number">2022</span>-<span class="number">04</span>-<span class="number">10</span>和<span class="number">2022</span>-<span class="number">04</span>-<span class="number">11</span>产品的合格率要求（原矿参数和过程数据见附件<span class="number">2</span>），如果可以达到，给出系统设定温度（假设系统温度与调温指令设定的温度相同），并将结果填入表<span class="number">5</span>。</span><br><span class="line">表<span class="number">5</span> 问题<span class="number">4</span>结果</span><br><span class="line">时间	合格率	能否达到	系统I设定温度	系统II设定温度</span><br><span class="line"><span class="number">2022</span>-<span class="number">04</span>-<span class="number">10</span>	<span class="number">80</span>%			</span><br><span class="line"><span class="number">2022</span>-<span class="number">04</span>-<span class="number">11</span>	<span class="number">99</span>%			</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>分析</strong></p>
<ul>
<li>初步判断是一个预测问题</li>
<li>可以采用灰度预测</li>
<li>数据已经给出</li>
<li>关于矿石冲洗的问题</li>
</ul>
<p>可以试一试</p>
<h2 id="对C题分分析"><a href="#对C题分分析" class="headerlink" title="对C题分分析"></a>对C题分分析</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">第八届新乡市数学建模竞赛题目</span><br><span class="line">C题  火灾报警系统问题</span><br><span class="line">二十世纪<span class="number">90</span>年代以来，我国火灾探测报警产业化发展非常迅猛，从事火灾探测报警产品生产的企业已超过<span class="number">100</span>家，年产值达几十亿元，已经成为我国高新技术产业的一个组成部分，国外产品也大量进入我国市场。我国每年建筑中新安装的火灾探测器约<span class="number">200</span>万只。</span><br><span class="line">火灾探测器的功能就是捕捉特定的火灾信号，将其转换为电信号传输至火灾报警控制器依据报警算法进行判定，当探测到的信号数值或者变化特征超过阈值时即被判定为火灾。因此探测器的灵敏度决定了对火灾特征响应的灵敏程度，但较高的灵敏度会导致报警可靠性的降低，而较高的可靠性则需要牺牲探测器的灵敏度。因此，探测器的灵敏度和可靠性成为探测器需要平衡考虑的关键参数 (有关火灾报警系统的其他相关背景资料见附件<span class="number">4</span>：火灾报警系统背景资料）。</span><br><span class="line">图<span class="number">1</span>为全国<span class="number">2021</span>年各月份的火灾次数及变化趋势，假设我国某城市一年内的火灾起数的变化趋势与全国<span class="number">2021</span>年各月份的火灾次数及变化趋势相似，该城市在（<span class="number">6</span>月<span class="number">1</span>日至<span class="number">6</span>月<span class="number">18</span>日）<span class="number">18</span>天内共接到<span class="number">257179</span>条火灾报警系统的报警信息（其中包含误动作所导致的误报警），附件<span class="number">1</span>是该城市<span class="number">6</span>月<span class="number">1</span>日至<span class="number">6</span>月<span class="number">18</span>日统计的火灾报警数据；该城市共有<span class="number">18</span>个消防大队，管辖面积如表<span class="number">1</span>所示；除了误动作以外，该城市中还有一部分火灾报警系统存在故障问题如附件<span class="number">2</span>所示。假设正常工作的火灾探测器检测到火灾时一定会报警，忽略时间的影响，当某一建筑内多个火灾探测器的机号与回路编号相同时且这些探测器均发出火灾报警信号，则认为是同一起火灾事故。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">图<span class="number">1</span> <span class="number">2021</span>年全国各月份火灾起数(左)和亡人数量(右)</span><br><span class="line"></span><br><span class="line">表<span class="number">1</span> 各消防大队管辖面积</span><br><span class="line">大队名称	管辖面积(平方公里)</span><br><span class="line">A大队	<span class="number">1712</span></span><br><span class="line">B大队	<span class="number">692</span></span><br><span class="line">C大队	<span class="number">1100</span></span><br><span class="line">D大队	<span class="number">1631</span></span><br><span class="line">E大队	<span class="number">412</span></span><br><span class="line">F大队	<span class="number">1524</span></span><br><span class="line">G大队	<span class="number">122</span></span><br><span class="line">H大队	<span class="number">532</span></span><br><span class="line">I大队	<span class="number">96</span></span><br><span class="line">J大队	<span class="number">58</span></span><br><span class="line">K大队	<span class="number">1831</span></span><br><span class="line">L大队	<span class="number">1561</span></span><br><span class="line">M大队	<span class="number">1997</span></span><br><span class="line">N大队	<span class="number">246</span></span><br><span class="line">O大队	<span class="number">483</span></span><br><span class="line">P大队	<span class="number">24</span></span><br><span class="line">Q大队	<span class="number">2151</span></span><br><span class="line">R大队	<span class="number">13</span></span><br><span class="line">在探测器安装得当，符合标准的假设下，讨论如下问题：</span><br><span class="line">问题<span class="number">1</span>：请根据文中叙述及附件<span class="number">1</span>，确定该城市<span class="number">6</span>月<span class="number">1</span>日至<span class="number">6</span>月<span class="number">18</span>日的真实火灾起数，并查阅参考文献，结合附件<span class="number">2</span>、图<span class="number">1</span>(附件<span class="number">2</span>中部分部件无需分析，请依据附件<span class="number">1</span>的部件名称先对附件<span class="number">2</span>的部件进行模型筛选)，通过建立模型对附件<span class="number">1</span>中的各类型部件进行分析，利用可靠性和故障率对各类型部件进行评价，帮助政府选取更加可靠的火灾探测器类型。</span><br><span class="line">问题<span class="number">2</span>：通过阅读参考文献，结合问题<span class="number">1</span>得到的数据结论，选择合适参数建立区域报警部件类型智能研判模型，当某大队辖区内某类型部件发出报警信息时，能够较好判断是否属于误报，提高报警准确率，并对附件<span class="number">3</span>中各大队不同部件发出的报警信号进行真实性评价，确定附件<span class="number">3</span>中各报警信号是真实火灾的概率。</span><br><span class="line">问题<span class="number">3</span>：根据问题<span class="number">1</span>所获得的各辖区火灾数据以及问题<span class="number">2</span>的结果，结合表<span class="number">1</span>分析该市各消防大队的综合管理水平，并将综合管理水平最低的三个辖区的技术指标（如辖区火灾发生频率、部件故障率、部件可靠性等）进行量化，提出改进方案。</span><br><span class="line">问题<span class="number">4</span>：根据有关文献和问题<span class="number">1</span>至问题<span class="number">3</span>模型分析的结果，请有针对的提出火灾报警系统各部件管理维护的意见建议。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>问题分析</strong></p>
<ul>
<li>评价类问题</li>
<li>有数据</li>
<li>够搞头</li>
</ul>
<h2 id="对D题的分析"><a href="#对D题的分析" class="headerlink" title="对D题的分析"></a>对D题的分析</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">第八届新乡市数学建模竞赛题目</span><br><span class="line">D题 血管机器人的订购与生物学习</span><br><span class="line">随着微机电系统的发展，人类已经可以加工越来越小的机器。这些机器小到一定程度就可以放进血管开展疾病治疗，这就是血管机器人。血管机器人可以携带药物放入血管里定点治疗与血管有关的疾病，还可以充当血管清道夫，清除病毒，保持人体健康。因而，血管机器人越来越受到人们的关注。</span><br><span class="line">血管机器人有多种类型，其中某医院使用的是ABLVR型号的血管机器人。这种血管机器人有两大特点：①可以组装。机器人有一个容器艇（类似于潜艇），有动力，可在血液中游动。容器艇四周安装了<span class="number">4</span>个操作手，操作手类似于人，有生物大脑和机械臂，生物大脑控制着机械臂进行工作。操作手可以从容器艇上拆卸、安装、更换。②需要学习。这种血管机器人没有直接的信息复制功能，新购买的操作手在工作之前需要提前进行生物学习（训练），类似于人脑学习，需要在特定的环境中由已经学习好的操作手（熟练工）“指导”若干个生物大脑芯片空白的操作手（新手）在仿真血管中进行学习，直到“新手”能够达到“熟练工”的水平为止，时间为一周。</span><br><span class="line">血管机器人在患者血管中工作时间是一周，一周后必须取出。取出后操作手拆卸下来需要进行一周的保养才能再次开展工作，如没有安排工作，则一直需要保养。新购买的容器艇需要经过一周的检查调试后才可以投入使用，使用结束后容器艇并不必须要保养，可以连续使用，但如果不使用也需要保养。假定购买的容器艇和操作手在每周开始时到货并立即安排检查调试和生物学习（训练）。相关成本数据见附件<span class="number">1</span>。附件<span class="number">2</span>是第<span class="number">1</span>-<span class="number">104</span>周该医院所需要的血管机器人数量。</span><br><span class="line">该医院从第<span class="number">1</span>周开始开展血管机器人治疗业务，并假定开始前已经有了<span class="number">13</span>个容器艇和<span class="number">50</span>个熟练操作手。请建立数学模型，回答下列问题。 </span><br><span class="line">问题<span class="number">1</span>：在每周开始时，医院可以购买到操作手和容器艇。每个熟练操作手可以作为指导者“指导”<span class="number">10</span>个购买的新操作手进行生物学习。如果仅仅考虑第<span class="number">1</span>-<span class="number">8</span>周，请问每周需要购买多少容器艇和操作手，既满足治疗又能够使运营成本达到最低？</span><br><span class="line">问题<span class="number">2</span>：血管机器人在患者血管中工作有风险，一旦碰上巨噬细胞，如果躲避不及，将会完全损毁。假设每周有<span class="number">20</span>%的血管机器人损毁（损毁的个数按四舍五入取整），其他条件遵循问题<span class="number">1</span>，通盘考虑第<span class="number">1</span>-<span class="number">104</span>周，请问总共需要购买多少容器艇和操作手，既满足治疗又能够使运营成本达到最低？并将相关结果填入表<span class="number">1</span>。另外，将第<span class="number">1</span>-<span class="number">8</span>周的结果数据与问题<span class="number">1</span>的第<span class="number">1</span>-<span class="number">8</span>周的结果数据进行对比分析。</span><br><span class="line">表<span class="number">1</span>：问题<span class="number">2</span>相关结果数据</span><br><span class="line">周次	购买的容器艇数量	购买的操作手数量	保养的操作手数量	保养的容器艇数量	参与训练的操作手数量（含“熟练工”和“新手”）	总成本</span><br><span class="line">（单位：元）</span><br><span class="line">第<span class="number">12</span>周						</span><br><span class="line">第<span class="number">26</span>周						</span><br><span class="line">第<span class="number">52</span>周						</span><br><span class="line">第<span class="number">78</span>周						</span><br><span class="line">第<span class="number">101</span>周						</span><br><span class="line">第<span class="number">102</span>周						</span><br><span class="line">第<span class="number">103</span>周						</span><br><span class="line">第<span class="number">104</span>周						</span><br><span class="line"><span class="number">1</span>-<span class="number">104</span>周（总计）						</span><br><span class="line">问题<span class="number">3</span>：如果每名熟练操作手可以“指导”新操作手的数量调整为不超过<span class="number">20</span>个，假设每周有<span class="number">10</span>%的血管机器人损毁（损毁的个数按四舍五入取整），同问题<span class="number">2</span>，请研究第<span class="number">1</span>-<span class="number">104</span>周里总共需要购买多少容器艇和操作手既满足治疗又能够使运营成本达到最低？将相关结果数据填入表<span class="number">2</span>。</span><br><span class="line">表<span class="number">2</span>：问题<span class="number">3</span>的相关结果数据</span><br><span class="line">周次	购买的容器艇数量	购买的操作手数量	保养的操作手数量	保养的容器艇数量	参与训练的操作手数量（含“熟练工”和“新手”）	总成本</span><br><span class="line">（单位：元）</span><br><span class="line">第<span class="number">12</span>周						</span><br><span class="line">第<span class="number">26</span>周						</span><br><span class="line">第<span class="number">52</span>周						</span><br><span class="line">第<span class="number">78</span>周						</span><br><span class="line">第<span class="number">101</span>周						</span><br><span class="line">第<span class="number">102</span>周						</span><br><span class="line">第<span class="number">103</span>周						</span><br><span class="line">第<span class="number">104</span>周						</span><br><span class="line"><span class="number">1</span>-<span class="number">104</span>周（总计）						</span><br><span class="line">问题<span class="number">4</span>：如果购买操作手和容器艇有优惠政策，即容器艇一次性购买量不超过<span class="number">5</span>个时的单价为<span class="number">200</span>元/个；容器艇一次性购买量超过<span class="number">5</span>个但不超过<span class="number">10</span>个时，超过<span class="number">5</span>个的那部分单价为<span class="number">180</span>元/个；容器艇一次性购买量超过<span class="number">10</span>个时，超过<span class="number">10</span>个的那部分单价为<span class="number">160</span>元/个。同样，操作手一次性购买量不超过<span class="number">20</span>个时的单价为<span class="number">100</span>元/个；操作手一次性购买量超过<span class="number">20</span>个但不超过<span class="number">40</span>个时，超过<span class="number">20</span>个的那部分单价为<span class="number">90</span>元/个；操作手一次性购买量超过<span class="number">40</span>个时，超过<span class="number">40</span>个的那部分单价为<span class="number">80</span>元/个。其他条件遵循问题<span class="number">3</span>，则第<span class="number">1</span>-<span class="number">104</span>周里总共购买的容器艇和操作手将如何调整？将相关结果数据填入表<span class="number">3</span>。</span><br><span class="line">表<span class="number">3</span>：问题<span class="number">4</span>的相关结果数据</span><br><span class="line">周次	购买的容器艇数量	购买的操作手数量	保养的操作手数量	保养的容器艇数量	参与训练的操作手数量（含“熟练工”和“新手”）	总成本</span><br><span class="line">（单位：元）</span><br><span class="line">第<span class="number">12</span>周						</span><br><span class="line">第<span class="number">26</span>周						</span><br><span class="line">第<span class="number">52</span>周						</span><br><span class="line">第<span class="number">78</span>周						</span><br><span class="line">第<span class="number">101</span>周						</span><br><span class="line">第<span class="number">102</span>周						</span><br><span class="line">第<span class="number">103</span>周						</span><br><span class="line">第<span class="number">104</span>周						</span><br><span class="line"><span class="number">1</span>-<span class="number">104</span>周</span><br><span class="line">（总计）						</span><br><span class="line">问题<span class="number">5</span>：预测第<span class="number">105</span>-<span class="number">112</span>周的血管机器人的使用需求。为了研究第<span class="number">105</span>-<span class="number">112</span>周的血管机器人的使用成本，在遵循问题<span class="number">4</span>条件的基础上，有两种方案可以考虑。</span><br><span class="line">方案<span class="number">1</span>：在第<span class="number">1</span>-<span class="number">104</span>周最优结果的基础上，医院在第<span class="number">105</span>周开始时有可能需要以每个<span class="number">300</span>元的高价购买能够直接使用的容器艇和每个<span class="number">150</span>元购买熟练操作手，而后续每周均按问题<span class="number">4</span>中的优惠政策购买合适数量的新容器艇和新操作手，满足第<span class="number">105</span>-<span class="number">112</span>周的血管机器人的需求。</span><br><span class="line">方案<span class="number">2</span>：通盘考虑第<span class="number">1</span>-<span class="number">112</span>周的血管机器人的需求。</span><br><span class="line">请比较两种方案的第<span class="number">1</span>-<span class="number">112</span>周最低运营成本的差额。</span><br><span class="line"></span><br><span class="line">附件<span class="number">1</span> 血管机器人相关成本</span><br><span class="line">类别	价格（成本）</span><br><span class="line">容器艇	<span class="number">200</span>元/个</span><br><span class="line">操作手	<span class="number">100</span>元/个</span><br><span class="line">操作手保养	<span class="number">5</span>元/个/周</span><br><span class="line">容器艇保养	<span class="number">10</span>元/个/周</span><br><span class="line">操作手（含“熟练工”）训练	<span class="number">10</span>元/个</span><br><span class="line">附件<span class="number">2</span> 第<span class="number">1</span>-<span class="number">104</span>周血管机器人使用数量（单位：个）</span><br><span class="line">第<span class="number">1</span>-<span class="number">8</span>周	<span class="number">11</span>	<span class="number">5</span>	<span class="number">4</span>	<span class="number">7</span>	<span class="number">16</span>	<span class="number">6</span>	<span class="number">5</span>	<span class="number">7</span></span><br><span class="line">第<span class="number">9</span>-<span class="number">16</span>周	<span class="number">13</span>	<span class="number">6</span>	<span class="number">5</span>	<span class="number">7</span>	<span class="number">12</span>	<span class="number">5</span>	<span class="number">4</span>	<span class="number">6</span></span><br><span class="line">第<span class="number">17</span>-<span class="number">24</span>周	<span class="number">9</span>	<span class="number">5</span>	<span class="number">5</span>	<span class="number">11</span>	<span class="number">29</span>	<span class="number">21</span>	<span class="number">17</span>	<span class="number">20</span></span><br><span class="line">第<span class="number">25</span>-<span class="number">32</span>周	<span class="number">27</span>	<span class="number">13</span>	<span class="number">9</span>	<span class="number">10</span>	<span class="number">16</span>	<span class="number">6</span>	<span class="number">5</span>	<span class="number">7</span></span><br><span class="line">第<span class="number">33</span>-<span class="number">40</span>周	<span class="number">11</span>	<span class="number">5</span>	<span class="number">5</span>	<span class="number">6</span>	<span class="number">12</span>	<span class="number">7</span>	<span class="number">7</span>	<span class="number">10</span></span><br><span class="line">第<span class="number">41</span>-<span class="number">48</span>周	<span class="number">15</span>	<span class="number">10</span>	<span class="number">9</span>	<span class="number">11</span>	<span class="number">15</span>	<span class="number">10</span>	<span class="number">10</span>	<span class="number">16</span></span><br><span class="line">第<span class="number">49</span>-<span class="number">56</span>周	<span class="number">26</span>	<span class="number">21</span>	<span class="number">23</span>	<span class="number">36</span>	<span class="number">50</span>	<span class="number">45</span>	<span class="number">45</span>	<span class="number">49</span></span><br><span class="line">第<span class="number">57</span>-<span class="number">64</span>周	<span class="number">57</span>	<span class="number">43</span>	<span class="number">40</span>	<span class="number">44</span>	<span class="number">52</span>	<span class="number">43</span>	<span class="number">42</span>	<span class="number">45</span></span><br><span class="line">第<span class="number">65</span>-<span class="number">72</span>周	<span class="number">52</span>	<span class="number">41</span>	<span class="number">39</span>	<span class="number">41</span>	<span class="number">48</span>	<span class="number">35</span>	<span class="number">34</span>	<span class="number">35</span></span><br><span class="line">第<span class="number">73</span>-<span class="number">80</span>周	<span class="number">42</span>	<span class="number">34</span>	<span class="number">36</span>	<span class="number">43</span>	<span class="number">55</span>	<span class="number">48</span>	<span class="number">54</span>	<span class="number">65</span></span><br><span class="line">第<span class="number">81</span>-<span class="number">88</span>周	<span class="number">80</span>	<span class="number">70</span>	<span class="number">74</span>	<span class="number">85</span>	<span class="number">101</span>	<span class="number">89</span>	<span class="number">88</span>	<span class="number">90</span></span><br><span class="line">第<span class="number">89</span>-<span class="number">96</span>周	<span class="number">100</span>	<span class="number">87</span>	<span class="number">88</span>	<span class="number">89</span>	<span class="number">104</span>	<span class="number">89</span>	<span class="number">89</span>	<span class="number">90</span></span><br><span class="line">第<span class="number">97</span>-<span class="number">104</span>周	<span class="number">106</span>	<span class="number">96</span>	<span class="number">94</span>	<span class="number">99</span>	<span class="number">109</span>	<span class="number">99</span>	<span class="number">96</span>	<span class="number">102</span></span><br></pre></td></tr></table></figure>

<p><strong>问题分析</strong></p>
<ul>
<li>规划类问题</li>
<li>有数据</li>
<li>如果会使用Lingo会大大加快编写进度</li>
<li>每一问都是前一问的基础上添加新的限制条件</li>
</ul>
<h2 id="最终选择"><a href="#最终选择" class="headerlink" title="最终选择"></a>最终选择</h2><p>写C题</p>
]]></content>
  </entry>
  <entry>
    <title>动态规划——设备更新问题</title>
    <url>/2022/03/17/%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%9A%84%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94%E8%AE%BE%E5%A4%87%E6%9B%B4%E6%96%B0%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="动态规划——设备更新问题"><a href="#动态规划——设备更新问题" class="headerlink" title="动态规划——设备更新问题"></a>动态规划——设备更新问题</h1><p>这里的设备更新问题是一个书上的问题，具体的问题可以参照课本p93，作为动态规划的一个例子，我们现在解释一下动态规划的阶梯思路</p>
<h2 id="可化为最短路径问题的多阶段决策问题"><a href="#可化为最短路径问题的多阶段决策问题" class="headerlink" title="可化为最短路径问题的多阶段决策问题"></a>可化为最短路径问题的多阶段决策问题</h2><p>最优化这个问题往往可以按照动态规划来处理，其特点是，可以将一个大问题划分成若干个阶段，逐个处理每一个小问题就得到了大问题。</p>
<p><strong>解题思路：</strong></p>
<ul>
<li>可以通过构造适当的图，将它转化成最短路径问题。从而使问题变得清晰、直观；</li>
<li>一旦转化成功，剩下的就是利用迪杰斯特拉算法将最短路径求出来 就是最优的路径</li>
</ul>
<h2 id="算法的实现"><a href="#算法的实现" class="headerlink" title="算法的实现"></a>算法的实现</h2><p>因为利用的是迪杰斯特拉算法，不熟悉的可以参考我这篇博文（java语言） <a href="https://dwx-tx.github.io/2022/03/13/%E8%BF%AA%E6%9D%B0%E6%96%AF%E7%89%B9%E6%8B%89%E7%AE%97%E6%B3%95/">迪杰斯特拉算法 | dwx-tx的小天地</a> </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">shebeigengxinwenti</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这是数学建模中地设备更新问题</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//我计划 先将这些点和边存储进一个邻接矩阵里 在利用迪杰斯特拉算法就得解</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//一共有11个点 需要存储在一个20x20的整数二维数组中</span></span><br><span class="line">        <span class="keyword">int</span>[][] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line">        <span class="comment">//先对这个数组进行初始化</span></span><br><span class="line">        <span class="comment">//即 行坐标和列坐标相等就标为0</span></span><br><span class="line">        <span class="comment">//否则标为inf(9999)</span></span><br><span class="line">        <span class="keyword">int</span> inf = <span class="number">9999</span>;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;<span class="number">20</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i==j)&#123;</span><br><span class="line">                    a[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    a[i][j] = inf;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================================================================================&quot;</span>);</span><br><span class="line">        <span class="comment">//打印一下我们的初始化后的数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : a) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                <span class="keyword">if</span> (anInt==inf)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;inf&quot;</span>+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================================================================================&quot;</span>);</span><br><span class="line">        <span class="comment">//导入边关系</span></span><br><span class="line">        <span class="comment">//下边我会去数有几条边 然后并记录边的权值</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> m;</span><br><span class="line">        <span class="keyword">int</span> x,y,l;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 参数x:边的起始点</span></span><br><span class="line"><span class="comment">        * 参数y:边的终止点</span></span><br><span class="line"><span class="comment">        * 参数l:边的长度</span></span><br><span class="line"><span class="comment">        * 参数m:边的总个数</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        System.out.print(<span class="string">&quot;请输入边数:&quot;</span>);</span><br><span class="line">        m = scanner.nextInt();</span><br><span class="line">        <span class="keyword">for</span> ( j = <span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;请输入起始点:&quot;</span>);</span><br><span class="line">            x = scanner.nextInt();</span><br><span class="line">            System.out.print(<span class="string">&quot;请输入终止点:&quot;</span>);</span><br><span class="line">            y = scanner.nextInt();</span><br><span class="line">            System.out.print(<span class="string">&quot;请输入边长度:&quot;</span>);</span><br><span class="line">            l = scanner.nextInt();</span><br><span class="line"></span><br><span class="line">            a[x][y] = l;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;================录入数据====================&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : a) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                <span class="keyword">if</span> (anInt==inf)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;inf&quot;</span>+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//启动迪杰斯特拉算法 求0点到其他点的最短距离</span></span><br><span class="line">        <span class="comment">//一个dis数组用来存储第一行数据</span></span><br><span class="line">        <span class="keyword">int</span>[] dis = <span class="keyword">new</span> <span class="keyword">int</span> [<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">            dis[i] = a[<span class="number">0</span>][i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//一个book[]数组 用来存储我们加入最短路径后的数</span></span><br><span class="line">        <span class="keyword">int</span>[] book = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">20</span>];</span><br><span class="line">        <span class="comment">//初始化我们的book数组</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">            book[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将第一个源点读入数组</span></span><br><span class="line">        book[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> min;</span><br><span class="line">        <span class="keyword">int</span> u = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//迪杰斯特拉算法的核心</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">            min = inf;</span><br><span class="line">            <span class="comment">//寻找距离源点最近的点</span></span><br><span class="line">            <span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;<span class="number">20</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (book[j]==<span class="number">0</span> &amp;&amp; dis[j] &lt; inf)&#123;</span><br><span class="line">                    <span class="comment">//则把这个数读入book</span></span><br><span class="line">                    min = dis[j];</span><br><span class="line">                    u = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将这个点读入book数组</span></span><br><span class="line">            book[u] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (v=<span class="number">0</span>;v&lt;<span class="number">20</span>;v++)&#123;</span><br><span class="line">                <span class="comment">//收缩调整最短路径</span></span><br><span class="line">                <span class="keyword">if</span> (a[u][v] &lt; inf)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (dis[v]&gt;dis[u]+a[u][v])&#123;</span><br><span class="line">                        dis[v] = dis[u]+a[u][v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;==================&quot;</span>+<span class="string">&quot;处理后的最短路径&quot;</span>+<span class="string">&quot;====================&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> di : dis) &#123;</span><br><span class="line">            System.out.print(di+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>数据</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">25</span><br><span class="line">0 1 16</span><br><span class="line">1 2 16</span><br><span class="line">2 3 16</span><br><span class="line">3 4 16</span><br><span class="line">0 5 16</span><br><span class="line">1 6 16</span><br><span class="line">2 7 16</span><br><span class="line">3 8 16</span><br><span class="line">4 9 16</span><br><span class="line">5 10 6</span><br><span class="line">6 11 6</span><br><span class="line">7 12 6</span><br><span class="line">8 13 6</span><br><span class="line">10 14 8</span><br><span class="line">11 15 8</span><br><span class="line">12 16 8</span><br><span class="line">14 17 11</span><br><span class="line">15 18 11</span><br><span class="line">17 19 18</span><br><span class="line">5 2 6</span><br><span class="line">6 3 6</span><br><span class="line">7 4 6</span><br><span class="line">10 3 8</span><br><span class="line">11 4 8</span><br><span class="line">14 4 11</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Kruskal算法</title>
    <url>/2022/05/13/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E4%B9%8BKruskal%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="Kruskal算法"><a href="#Kruskal算法" class="headerlink" title="Kruskal算法"></a>Kruskal算法</h1><p>Kruskal算法是在数据结构书中就已经知晓的一种算法，是生成最小生成树思路中的加边法。</p>
<h2 id="算法的基本思想"><a href="#算法的基本思想" class="headerlink" title="算法的基本思想"></a>算法的基本思想</h2><p>给定无向连通带权图<code>G=(V,E)</code>，生成最小生成树的基本思想是：</p>
<ul>
<li>首先将G的n个顶点看成n个孤立的连通分支，将所有的边按权从小到大排序</li>
<li>然后从第一条边开始，依边权递增的顺序查看每条边，并按照上述方法连接两个不同的连通分支</li>
<li>党察看到第k条边（v,w）时，如果端点v和w分别是当前两个不同的连通分支T1和T2中的顶点时，就用链（v,w）将T1和T2连接成一个连通分支，然后继续查看第K+1条边</li>
<li>如果端点V和w在当前的同一连通分支中，就直接再查看第k+1条边</li>
<li>等到只剩下一个连通分支为止，这个连通分支就是G的一棵最小生成树</li>
</ul>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul>
<li>我们的这个图 现在该怎么存</li>
<li>我们怎么决定两个点之间已经有了联通路</li>
<li>我们怎么回溯返回这个已经创建好的最小生成树</li>
</ul>
<h2 id="我的手写笔记"><a href="#我的手写笔记" class="headerlink" title="我的手写笔记"></a>我的手写笔记</h2><p> <img src="https://s3.bmp.ovh/imgs/2022/05/13/e711c1f3aa76653f.jpg" alt="我的想法"> </p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/05/13/944268e9976f62c5.jpg" alt="我的方法"> </p>
<h2 id="我的学习方法"><a href="#我的学习方法" class="headerlink" title="我的学习方法"></a>我的学习方法</h2><ol>
<li>自己看书</li>
<li>看视频</li>
</ol>
<p> <a href="https://www.bilibili.com/video/BV1Qa41167xY?spm_id_from=333.337.search-card.all.click">P55-图-6.Kruskal算法_哔哩哔哩_bilibili</a> <strong>这个老师的视频简单易懂</strong></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><strong>边结构体的代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> passage04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EdgeNode</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这里为了偷懒 都是用的是整数型</span></span><br><span class="line">    <span class="comment">//weight表示边的权重</span></span><br><span class="line">    <span class="keyword">int</span> weight;</span><br><span class="line">    <span class="comment">//该边的一个节点</span></span><br><span class="line">    <span class="keyword">int</span> u;</span><br><span class="line">    <span class="comment">//v表示该边的另一个节点</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWeight</span><span class="params">(<span class="keyword">int</span> weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getU</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> u;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setU</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.u = u;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getV</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setV</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.v = v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EdgeNode</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">        <span class="keyword">this</span>.u = u;</span><br><span class="line">        <span class="keyword">this</span>.v = v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EdgeNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;EdgeNode&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;weight=&quot;</span> + weight +</span><br><span class="line">                <span class="string">&quot;, u=&quot;</span> + u +</span><br><span class="line">                <span class="string">&quot;, v=&quot;</span> + v +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Kruskal代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> passage04;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是一个最小生成树问题</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyKruskal</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这里我们使用num来表示有几个结点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNum</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里我们需要的是一个排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">edgeSort</span><span class="params">(EdgeNode[] A)</span></span>&#123;</span><br><span class="line">        <span class="comment">//使用的是一个冒泡排序</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=A.length-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (A[j].weight&gt;A[j+<span class="number">1</span>].weight)&#123;</span><br><span class="line">                    <span class="comment">//找到 交换</span></span><br><span class="line">                    EdgeNode temp = A[j];</span><br><span class="line">                    A[j] = A[j+<span class="number">1</span>];</span><br><span class="line">                    A[j+<span class="number">1</span>] = temp;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里我们使用树来存放我们已经联结好的图</span></span><br><span class="line">    <span class="comment">//首先我们需要一个寻找根节点的算法</span></span><br><span class="line">    <span class="comment">//p表示我们想要查找的根节</span></span><br><span class="line">    <span class="comment">//V表示我们的并查集</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getRoot</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span>[] V)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (V[p] != p)&#123;</span><br><span class="line">            p = V[p];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//合并两个树的方法</span></span><br><span class="line">    <span class="comment">//P Q表示要合并的两个节点</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mergeNode</span><span class="params">(<span class="keyword">int</span> P,<span class="keyword">int</span> Q,<span class="keyword">int</span>[] V)</span></span>&#123;</span><br><span class="line">        <span class="comment">//这里我规定 我要让标号小的数做父节点</span></span><br><span class="line">        <span class="keyword">if</span> (P &gt; Q)&#123;</span><br><span class="line">            V[P] = Q;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            V[Q] = P;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Kruskal算法核心</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Kruskal</span><span class="params">(EdgeNode[] A)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//生成一个合并集</span></span><br><span class="line">        <span class="keyword">int</span>[] V = <span class="keyword">new</span> <span class="keyword">int</span>[num];</span><br><span class="line">        <span class="comment">//我们规定 如果一个节点是根节点 那么他就存储自己</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)&#123;</span><br><span class="line">            V[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//给我们的边的数列排序</span></span><br><span class="line">        edgeSort(A);</span><br><span class="line">        <span class="comment">//开始找边看看是否合适</span></span><br><span class="line">        <span class="keyword">for</span> (EdgeNode edgeNode : A) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//从最小的边开始 向我们的并合集中存数据</span></span><br><span class="line">            <span class="keyword">int</span> u = edgeNode.getU();</span><br><span class="line">            <span class="keyword">int</span> v = edgeNode.getV();</span><br><span class="line">            <span class="keyword">int</span> P = getRoot(u, V);</span><br><span class="line">            <span class="keyword">int</span> Q = getRoot(v, V);</span><br><span class="line">            <span class="comment">//如果两个点的根节点不同 那他们就不再一棵数树上 就要合并</span></span><br><span class="line">            <span class="keyword">if</span> (P!=Q)&#123;</span><br><span class="line">                sum = sum + edgeNode.weight;</span><br><span class="line">                mergeNode(P,Q,V);</span><br><span class="line">                <span class="comment">//复盘 联结节点</span></span><br><span class="line">                System.out.println(<span class="string">&quot;选择双向边从&quot;</span>+edgeNode.u+<span class="string">&quot;到&quot;</span>+edgeNode.v+<span class="string">&quot;权重为&quot;</span>+edgeNode.weight);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>测试代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> passage04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyKruskalTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个边的集合</span></span><br><span class="line">        EdgeNode node1 = <span class="keyword">new</span> EdgeNode(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        EdgeNode node2 = <span class="keyword">new</span> EdgeNode(<span class="number">0</span>, <span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">        EdgeNode node3 = <span class="keyword">new</span> EdgeNode(<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>);</span><br><span class="line">        EdgeNode node4 = <span class="keyword">new</span> EdgeNode(<span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>);</span><br><span class="line">        EdgeNode node5 = <span class="keyword">new</span> EdgeNode(<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">        EdgeNode node6 = <span class="keyword">new</span> EdgeNode(<span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>);</span><br><span class="line">        EdgeNode node7 = <span class="keyword">new</span> EdgeNode(<span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line">        EdgeNode node8 = <span class="keyword">new</span> EdgeNode(<span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>);</span><br><span class="line">        EdgeNode node9 = <span class="keyword">new</span> EdgeNode(<span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        EdgeNode[] A = <span class="keyword">new</span> EdgeNode[]&#123;node1,node2,node3,node4,node5,node6,node7,node8,node9&#125;;</span><br><span class="line">        MyKruskal myKruskal = <span class="keyword">new</span> MyKruskal();</span><br><span class="line">        myKruskal.setNum(<span class="number">6</span>);</span><br><span class="line">        <span class="keyword">int</span> kruskal = myKruskal.Kruskal(A);</span><br><span class="line">        System.out.println(kruskal);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>测试结果</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">选择双向边从<span class="number">0</span>到<span class="number">1</span>权重为<span class="number">1</span></span><br><span class="line">选择双向边从<span class="number">2</span>到<span class="number">4</span>权重为<span class="number">2</span></span><br><span class="line">选择双向边从<span class="number">3</span>到<span class="number">5</span>权重为<span class="number">3</span></span><br><span class="line">选择双向边从<span class="number">1</span>到<span class="number">4</span>权重为<span class="number">4</span></span><br><span class="line">选择双向边从<span class="number">0</span>到<span class="number">3</span>权重为<span class="number">6</span></span><br><span class="line">    <span class="number">16</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>梦的解析免责声明</title>
    <url>/2022/02/05/%E6%A2%A6%E7%9A%84%E8%A7%A3%E6%9E%90_%E5%85%8D%E8%B4%A3%E5%A3%B0%E6%98%8E/</url>
    <content><![CDATA[<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><ul>
<li>梦都具有某种意义，即使是一种隐意</li>
<li>梦是潜意识中的欲望</li>
<li>梦具有主观性，如果我的梦中不幸出现了你并且梦中的形象与你大相径庭，但那只是我主关的感受，没有实际意义</li>
<li>梦不是一个整体，是各种元素的集合，如果梦中的人物干了不属于他的事，是因为我的大脑的混乱组合</li>
<li>在解梦时我会尽力去将每一块都分离开</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="检索数据"><a href="#检索数据" class="headerlink" title="检索数据"></a>检索数据</h1><h2 id="SELECT语句"><a href="#SELECT语句" class="headerlink" title="SELECT语句"></a>SELECT语句</h2><p>我们检索数据 重要使用的是SQL语句，SQL语句中最经常使用的是SELECT语句</p>
<h2 id="在SQL语句中的大小写"><a href="#在SQL语句中的大小写" class="headerlink" title="在SQL语句中的大小写"></a>在SQL语句中的大小写</h2><p><strong>SQL语句不区分大小写，因此SELECT和select是相同的</strong></p>
<ul>
<li>我们将SQL中的关键字使用大写</li>
<li>我们将列和表名使用小写</li>
</ul>
<h2 id="检索单个列"><a href="#检索单个列" class="headerlink" title="检索单个列"></a>检索单个列</h2><p><strong>语法结构</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表名;</span><br></pre></td></tr></table></figure>

<p>这是最简单的检索，既没有过滤数据，也没有排序</p>
<h2 id="检索多个列"><a href="#检索多个列" class="headerlink" title="检索多个列"></a>检索多个列</h2><p><strong>语法结构：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 第一个列名,第二个列名,第n个列名</span><br><span class="line">FROM 表名;</span><br></pre></td></tr></table></figure>

<p>在选择多个列时，一定要在列名之间加上逗号，最后一个列名不加，否则会出现错误</p>
<h2 id="检索所有的列"><a href="#检索所有的列" class="headerlink" title="检索所有的列"></a>检索所有的列</h2><p>SELECT语句可以检索所有的列而不必逐个列出列名，只需要在列名位置用（*）代替即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM 表名;</span><br></pre></td></tr></table></figure>

<h2 id="检索不同的行"><a href="#检索不同的行" class="headerlink" title="检索不同的行"></a>检索不同的行</h2><p><strong>意义为：将一列中相同的元素剔除，只留下一个。输出列值都不同</strong></p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DISTINCT 列名</span><br><span class="line">FROM 表名;</span><br></pre></td></tr></table></figure>

<h2 id="限制效果"><a href="#限制效果" class="headerlink" title="限制效果"></a>限制效果</h2><p><strong>通过使用限制效果，我们可以返回第一行或前几行</strong></p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表名</span><br><span class="line">LIMIT 阿拉伯数字;</span><br></pre></td></tr></table></figure>

<p>在上述的阿拉伯数字有两种形式：</p>
<ul>
<li>单一的阿拉伯数字：表示前n行数据</li>
<li>n,m ：表示从行n取到行m </li>
</ul>
<p><strong>注意</strong>：在MySQL中，行是从行0开始的</p>
<p>（n，m）这种形式也可以写为 (m OFFSET n)表达的意思一样</p>
]]></content>
  </entry>
  <entry>
    <title>梦的解析总括</title>
    <url>/2022/02/05/%E6%A2%A6%E7%9A%84%E8%A7%A3%E6%9E%90%E6%80%BB%E6%8B%AC/</url>
    <content><![CDATA[<h1 id="梦的解析"><a href="#梦的解析" class="headerlink" title="梦的解析"></a>梦的解析</h1><p>最近在看一本名为《梦的解析》的书，恰好我是一个做梦者，几乎每一次睡觉都能做梦。有人说可以通过睡觉做梦的频率来判断一个脑袋是否在思考，这样说的话我的脑袋似乎是一直在思考，但我并没有发现自己有过人之处。我希望通过自己记录每一次的有代表性的梦来实践梦的解析，来判断本书的观点的正确性。</p>
<h2 id="《梦的解析》的介绍"><a href="#《梦的解析》的介绍" class="headerlink" title="《梦的解析》的介绍"></a>《梦的解析》的介绍</h2><p>《梦的解析》是由弗洛伊德著作的，这个人是研究心理学绕不开的人物，也是他开创了对梦的科学的解释。在他之前，对梦的解释都是掌握在一群神棍的手中，这些的观点可以概括为：梦境对人的未来是由一定的预测意义的。</p>
<p>因此出现了能够未知未来的人，能够通过梦占卜的人。</p>
<p>他们这些古典派占卜的方式可以分成两种：</p>
<ul>
<li>象征法</li>
<li>译码法</li>
</ul>
<h2 id="前人的观点"><a href="#前人的观点" class="headerlink" title="前人的观点"></a>前人的观点</h2><h3 id="象征法"><a href="#象征法" class="headerlink" title="象征法"></a>象征法</h3><p>用一个可以理解的、在某些方面相似的内容来取代显梦。</p>
<p>局限性在于：对梦的解释会受到译梦者主观的影响，因此要做到能够合理的解梦，需要解梦者和译梦者的配合与交流。</p>
<h3 id="译码法"><a href="#译码法" class="headerlink" title="译码法"></a>译码法</h3><p>通过每一个象征对应的关键字译成一个有意义的象征。</p>
<p>局限性在于：这种方法就像是用一个译码本去破解密码，但是每个人的译码本是否是一样的？</p>
<h2 id="《梦的解析》的观点"><a href="#《梦的解析》的观点" class="headerlink" title="《梦的解析》的观点"></a>《梦的解析》的观点</h2><p><strong>梦都具有某种意义，即使是一种隐意</strong></p>
<p>做梦实际上就是用来代替某种其他的思想过程，所以我们只有正确揭示出这个代替物，才能发现梦的真实含义。</p>
<p><strong>梦不是一种精神活动，而是利用象征意义告知心理器官的一种肉体过程</strong></p>
<p>（难怪有时我做那些像素极高的梦醒来时会觉得很累）</p>
<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>由于我做梦的主观性，对梦中人物的描写可能与现实有出入，因此必须做出免责声明；</p>
<p> <a href="https://dwx-tx.github.io/2022/02/05/%E6%A2%A6%E7%9A%84%E8%A7%A3%E6%9E%90_%E5%85%8D%E8%B4%A3%E5%A3%B0%E6%98%8E/">梦的解析免责声明 | dwx-tx的小天地</a> </p>
<h2 id="记录梦"><a href="#记录梦" class="headerlink" title="记录梦"></a>记录梦</h2><p>我计划记录自己的一些梦，这些记录需要有一定的格式</p>
<p><strong>前言</strong>：前言描述做梦前发生的事</p>
<p><strong>主体:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">描写梦的细节</span><br></pre></td></tr></table></figure>

<p><strong>解析：</strong>对梦中出现的元素进行解析</p>
<p><strong>总结：</strong>总结这次解梦的结果</p>
]]></content>
  </entry>
  <entry>
    <title>棋盘覆盖</title>
    <url>/2022/03/15/%E6%A3%8B%E7%9B%98%E8%A6%86%E7%9B%96%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="棋盘覆盖"><a href="#棋盘覆盖" class="headerlink" title="棋盘覆盖"></a>棋盘覆盖</h1><p>棋盘覆盖类似于一个游戏，在啊哈算法中我学到一个管道铺设问题，因此这里我们在介绍一个棋盘覆盖。</p>
<p>我认为这个棋盘覆盖是比管道铺设简单的，因为要铺设的几个方块的大小都是一样的。</p>
<h2 id="算法实现如下"><a href="#算法实现如下" class="headerlink" title="算法实现如下"></a>算法实现如下</h2><p>这里我们实现的递归算法</p>
<p><strong>算法程序</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChessBoard</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里我们写一个二维整数数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> Board[][];</span><br><span class="line">    <span class="comment">//全局变量 表示</span></span><br><span class="line">    <span class="keyword">int</span> title = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBoard</span><span class="params">(<span class="keyword">int</span>[][] board)</span> </span>&#123;</span><br><span class="line">        Board = board;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] getBoard() &#123;</span><br><span class="line">        <span class="keyword">return</span> Board;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//我们使用的还是使用递归算法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChessBoard</span><span class="params">(<span class="keyword">int</span> tr, <span class="keyword">int</span> tc, <span class="keyword">int</span> dr, <span class="keyword">int</span> dc, <span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">        <span class="comment">//这里 tr ,tc表示棋盘左上角的编号（行和列</span></span><br><span class="line">        <span class="comment">//dr dcr表示特殊方块所在的地方</span></span><br><span class="line">        <span class="comment">//size表示棋盘的大小</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//程序结束的条件 已经不能在分了</span></span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//增加一个骨牌编号</span></span><br><span class="line">        <span class="keyword">int</span> t = title++;</span><br><span class="line">        <span class="keyword">int</span> s = size/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (dr&lt;tr+s &amp;&amp; dc &lt; tc+s)&#123;</span><br><span class="line">            <span class="comment">//说明特殊方块在七班左上角</span></span><br><span class="line">            ChessBoard(tr,tc,dr,dc,s);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//如果没在 则把左上角棋盘的左上角变成特殊棋盘</span></span><br><span class="line">            Board[tr+s-<span class="number">1</span>][tc+s-<span class="number">1</span>] = t;</span><br><span class="line">            ChessBoard(tr,tc,tr+s-<span class="number">1</span>,tc+s-<span class="number">1</span>,s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//同理 操作其他的三个子棋盘</span></span><br><span class="line">        <span class="comment">//这个是第</span></span><br><span class="line">        <span class="keyword">if</span> (dr&lt;tr+s &amp;&amp; dc &gt;= tc+s)&#123;</span><br><span class="line">            ChessBoard(tr,tc+s,dr,dc,s);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            Board[tr+s-<span class="number">1</span>][tc+s] = t;</span><br><span class="line">            ChessBoard(tr,tc+s,tr+s-<span class="number">1</span>,tc+s,s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (dr&gt;=tr+s &amp;&amp; dc &lt; tc+s)&#123;</span><br><span class="line"></span><br><span class="line">            ChessBoard(tr+s,tc,dr,dc,s);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            Board[tr+s][tc+s-<span class="number">1</span>] = t;</span><br><span class="line">            ChessBoard(tr+s,tc,tr+s,tc+s-<span class="number">1</span>,s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (dr&gt;=tr+s &amp;&amp; dc &gt;= tc+s)&#123;</span><br><span class="line"></span><br><span class="line">            ChessBoard(tr+s,tc+s,dr,dc,s);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            Board[tr+s][tc+s] = t;</span><br><span class="line">            ChessBoard(tr+s,tc+s,tr+s,tc+s,s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>测试方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.passage2.ChessBoard;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BoardTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//现在开一个4*4的二维整数数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] board = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">        <span class="comment">//期初都是0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : board) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添加一个特殊方块 这里我们选择使用随机函数 我们把特殊方块设为9</span></span><br><span class="line">        <span class="comment">//产生o-3的随机数</span></span><br><span class="line">         <span class="keyword">int</span> x =  (<span class="keyword">int</span>)(Math.random()*<span class="number">10</span>)%<span class="number">4</span>;</span><br><span class="line">         <span class="keyword">int</span> y =  (<span class="keyword">int</span>)(Math.random()*<span class="number">10</span>)%<span class="number">4</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;特殊块的所在:&quot;</span>+<span class="string">&quot;(&quot;</span>+x+<span class="string">&quot;,&quot;</span>+y+<span class="string">&quot;)&quot;</span>);</span><br><span class="line">        board[x][y] = <span class="number">9</span>;</span><br><span class="line">        <span class="comment">//修改过的棋盘</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : board) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用算法 填充棋盘</span></span><br><span class="line"></span><br><span class="line">        ChessBoard board1 = <span class="keyword">new</span> ChessBoard();</span><br><span class="line">        <span class="comment">//先把我们的目的board设置进去</span></span><br><span class="line">        board1.setBoard(board);</span><br><span class="line">        <span class="comment">//调用方法处理</span></span><br><span class="line">        board1.ChessBoard(<span class="number">0</span>,<span class="number">0</span>,x,y,<span class="number">4</span>);</span><br><span class="line">        <span class="comment">//获得调整过的board</span></span><br><span class="line">        <span class="keyword">int</span>[][] board2 = board1.getBoard();</span><br><span class="line">        System.out.println(<span class="string">&quot;==========结果=========&quot;</span>);</span><br><span class="line">        <span class="comment">//输出调整过的棋盘</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : board2) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>结果</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line">特殊块的所在:(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">9</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line">==========结果=========</span><br><span class="line"><span class="number">1</span>	<span class="number">1</span>	<span class="number">2</span>	<span class="number">2</span>	</span><br><span class="line"><span class="number">1</span>	<span class="number">9</span>	<span class="number">0</span>	<span class="number">2</span>	</span><br><span class="line"><span class="number">3</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">4</span>	</span><br><span class="line"><span class="number">3</span>	<span class="number">3</span>	<span class="number">4</span>	<span class="number">4</span>	</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="用正则表达式进行搜索"><a href="#用正则表达式进行搜索" class="headerlink" title="用正则表达式进行搜索"></a>用正则表达式进行搜索</h1><h2 id="正则表达式的介绍"><a href="#正则表达式的介绍" class="headerlink" title="正则表达式的介绍"></a>正则表达式的介绍</h2><p>正则表达式的使用环境</p>
<ul>
<li>如果你想从一个文本文件中提取电话号码</li>
<li>如果你需要查找名字中间有数字的所有文件</li>
<li>如果你想在一个文本块中找到所有重复的单词</li>
<li>如果你想替换一个页面中的所有URL为这些URL的实际HTML链接</li>
</ul>
<h2 id="基本字符匹配"><a href="#基本字符匹配" class="headerlink" title="基本字符匹配"></a>基本字符匹配</h2><p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 列名 REGEXP &#x27;XX&#x27;</span><br><span class="line">ORDER BY 列名</span><br></pre></td></tr></table></figure>

<p>表示返回列中列名中包含(XX)子列的所有行</p>
<p>除了关键字LIKE被REGEXP代替外，这个语法结构和LIKE的语句相同</p>
<p><strong>LIKE与REGEXP的区别</strong></p>
<p>如果LIKE语句想和REGEXP语句有相同的作用，需要结合(_或%)来使用</p>
<h2 id="进行OR匹配"><a href="#进行OR匹配" class="headerlink" title="进行OR匹配"></a>进行OR匹配</h2><p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 列名 REGEXP 条件一 | 条件二</span><br><span class="line">ORDER BY 列名;</span><br></pre></td></tr></table></figure>

<p>这个语句用于检索列表中满足条件一或条件二的所有行</p>
<h2 id="匹配几个字符之一"><a href="#匹配几个字符之一" class="headerlink" title="匹配几个字符之一"></a>匹配几个字符之一</h2><p>匹配任何单一字符。但是如果匹配特定的字符，怎么办，可以通过指定一组用[和]括起来的字符来完成。</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 列名 REGEXP &#x27;[abc] XX&#x27;</span><br><span class="line">ORDER BY 列名;</span><br></pre></td></tr></table></figure>

<p>该语句意义为：删选除列值满足a XX 或 b XX 或 c XX的所有的列</p>
<p>正则表达式[abc]xx是[a|b|c]xx的缩写</p>
<h2 id="匹配范围"><a href="#匹配范围" class="headerlink" title="匹配范围"></a>匹配范围</h2><p>要是匹配范围，将匹配字符的[abc]换成[a-c]即可</p>
<h2 id="匹配特殊字符"><a href="#匹配特殊字符" class="headerlink" title="匹配特殊字符"></a>匹配特殊字符</h2><p>要匹配列值中包含特殊字符，必须使用\ \为作为前导</p>
<p><strong>空白元字符</strong></p>
<table>
<thead>
<tr>
<th>元字符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>\ \f</td>
<td>换页</td>
</tr>
<tr>
<td>\ \n</td>
<td>换行</td>
</tr>
<tr>
<td>\ \r</td>
<td>回车</td>
</tr>
<tr>
<td>\ \t</td>
<td>制表</td>
</tr>
<tr>
<td>\ \v</td>
<td>纵向制表</td>
</tr>
</tbody></table>
<h2 id="匹配字符类"><a href="#匹配字符类" class="headerlink" title="匹配字符类"></a>匹配字符类</h2><p><strong>字符类</strong></p>
<table>
<thead>
<tr>
<th>类</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>[ :alnum: ]</td>
<td>任意字母和数字（同[a-ZA-z0-9]）</td>
</tr>
<tr>
<td>[ :alpha: ]</td>
<td>任意字符（同[a-zA-Z]）</td>
</tr>
<tr>
<td>[ :black: ]</td>
<td>空格和制表（同[ \ \t]）</td>
</tr>
<tr>
<td>[ :cntrl: ]</td>
<td>ASCLL控制字符（ASCLL 0到31和127）</td>
</tr>
<tr>
<td>[ :digit: ]</td>
<td>任意数字（同[0-9]）</td>
</tr>
<tr>
<td>[ :graph: ]</td>
<td>与[ :print: ]相同，但不包括空格</td>
</tr>
<tr>
<td>[ :lower: ]</td>
<td>任意小写字母（同[a-z]）</td>
</tr>
<tr>
<td>[ :print: ]</td>
<td>任意可打印字符</td>
</tr>
<tr>
<td>[ :punct: ]</td>
<td>即不在[ :alnum: ]又不在[ :cntrl: ]中的任意字符</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>类</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>[ :space: ]</td>
<td>包括空格在内地任意空白字符</td>
</tr>
<tr>
<td>[ :upper: ]</td>
<td>任意大写字符</td>
</tr>
<tr>
<td>[ :xdigit: ]</td>
<td>任意十六进制数字</td>
</tr>
</tbody></table>
<h2 id="匹配多个实例"><a href="#匹配多个实例" class="headerlink" title="匹配多个实例"></a>匹配多个实例</h2><p><strong>重复元字符</strong></p>
<table>
<thead>
<tr>
<th>元字符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>*</td>
<td>0个或多个匹配</td>
</tr>
<tr>
<td>+</td>
<td>1个或多个匹配</td>
</tr>
<tr>
<td>？</td>
<td>0个或1个匹配</td>
</tr>
<tr>
<td>{n}</td>
<td>指定数目的匹配</td>
</tr>
<tr>
<td>{n,}</td>
<td>不少于指定数目的匹配</td>
</tr>
<tr>
<td>{n,m}</td>
<td>匹配数目的范围</td>
</tr>
</tbody></table>
<h2 id="定位符"><a href="#定位符" class="headerlink" title="定位符"></a>定位符</h2><p><strong>定位元字符</strong></p>
<table>
<thead>
<tr>
<th>元字符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>^</td>
<td>文本的开始</td>
</tr>
<tr>
<td>$</td>
<td>文本的结尾</td>
</tr>
<tr>
<td>[[: &lt; :]]</td>
<td>词的开始</td>
</tr>
<tr>
<td>[[: &gt; :]]</td>
<td>词的结尾</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/%E6%B1%87%E6%80%BB%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="汇总数据"><a href="#汇总数据" class="headerlink" title="汇总数据"></a>汇总数据</h1><h2 id="聚集函数"><a href="#聚集函数" class="headerlink" title="聚集函数"></a>聚集函数</h2><p><strong>用SELECT检索的例子</strong></p>
<ul>
<li>确定表中函数（或者满足某个条件或包含某个特定值得行数）</li>
<li>获得表中行组的和</li>
<li>找出表列（或所有行或某些特定的行）的最大值、最小值和平均值</li>
</ul>
<p><strong>聚集函数</strong>：运行在行组上，计算和返回单个值得函数</p>
<p><strong>SQL聚集函数</strong></p>
<table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>AVG()</td>
<td>返回某列的平均值</td>
</tr>
<tr>
<td>COUNT()</td>
<td>返回某列的行数</td>
</tr>
<tr>
<td>MAX()</td>
<td>返回某列的最大值</td>
</tr>
<tr>
<td>MIN()</td>
<td>返回某列的最小值</td>
</tr>
<tr>
<td>SUM()</td>
<td>返回某列值之和</td>
</tr>
</tbody></table>
<h2 id="聚集不同值"><a href="#聚集不同值" class="headerlink" title="聚集不同值"></a>聚集不同值</h2><ul>
<li>对所有的行执行计算，指定ALL参数或不给阐述</li>
<li>只包含不同的值，指定DISTINCT参数</li>
</ul>
<p>在聚类时，如果遇到行值相同就跳过，值聚类行值不同的</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/%E7%94%A8%E9%80%9A%E7%94%A8%E7%AC%A6%E8%BF%9B%E8%A1%8C%E8%BF%87%E6%BB%A4/</url>
    <content><![CDATA[<h1 id="用通配符进行过滤"><a href="#用通配符进行过滤" class="headerlink" title="用通配符进行过滤"></a>用通配符进行过滤</h1><h2 id="LIKE操作符"><a href="#LIKE操作符" class="headerlink" title="LIKE操作符"></a>LIKE操作符</h2><p><strong>通配符</strong>：用来匹配值的一部分的特殊字符。</p>
<h2 id="百分号（-）通配符"><a href="#百分号（-）通配符" class="headerlink" title="百分号（%）通配符"></a>百分号（%）通配符</h2><p>最常使用的通配符是百分号(%),%表示任何字符出现任意次数。</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 列名 LIKE &#x27;XX%&#x27;</span><br></pre></td></tr></table></figure>

<p><strong>表示用于搜索以“XX”开头的产品，是需要区分大小写的</strong></p>
<p><strong>如果结构是（“%XX%”）</strong></p>
<p>表示匹配任何位置包含文本XX的值，不论它之前或之后出现什么字符</p>
<p><strong>如果结构是（“XX%xx”）</strong></p>
<p>表示匹配以XX开头，以xx结尾的数据</p>
<h2 id="下划线-通配符"><a href="#下划线-通配符" class="headerlink" title="下划线(_)通配符"></a>下划线(_)通配符</h2><p>另一个有用的通配符是下划线(_)。下划线的用途与%一样，但下划线只匹配单个字符而不是多个字符</p>
]]></content>
  </entry>
  <entry>
    <title>生命钟表</title>
    <url>/2022/02/04/%E7%94%9F%E5%91%BD%E9%92%9F%E8%A1%A8/</url>
    <content><![CDATA[<h1 id="生命钟表"><a href="#生命钟表" class="headerlink" title="生命钟表"></a>生命钟表</h1><p>前几天在进行所谓的算命的时候，我想到了是否自己可以为自己制作一个生命钟表，看看自己在这个世界上到底待机多少天？</p>
<h2 id="理论依据"><a href="#理论依据" class="headerlink" title="理论依据"></a>理论依据</h2><ul>
<li>用户输入自己的时间</li>
<li>可以通过无限循环来保证程序的执行、</li>
<li>通过java语言中的Date类来获得一个当地时间</li>
<li>系统时间减去出生时间就是我的待机时间</li>
</ul>
<h2 id="代码实践"><a href="#代码实践" class="headerlink" title="代码实践"></a>代码实践</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Time;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeClock</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//记录个人的出生日期</span></span><br><span class="line">        <span class="comment">//输入时间</span></span><br><span class="line">        <span class="keyword">int</span> MyYear;</span><br><span class="line">        <span class="keyword">int</span> MyMonth;</span><br><span class="line">        <span class="keyword">int</span> MyDate;</span><br><span class="line">        <span class="keyword">int</span> MyHour;</span><br><span class="line">        <span class="keyword">int</span> MyMin;</span><br><span class="line">        <span class="keyword">int</span> MySecond;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你的生日（不知道的数据填0）&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;格式为(yy mm dd h m s)&quot;</span>);</span><br><span class="line">        MyYear = scanner.nextInt();</span><br><span class="line">        MyMonth = scanner.nextInt();</span><br><span class="line">        MyDate = scanner.nextInt();</span><br><span class="line">        MyHour = scanner.nextInt();</span><br><span class="line">        MyMin = scanner.nextInt();</span><br><span class="line">        MySecond = scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        Date OldDate = <span class="keyword">new</span> Date(MyYear-<span class="number">1900</span>, MyMonth, MyDate,MyHour,MyMin,MySecond);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//两者的差算作年龄</span></span><br><span class="line">        <span class="comment">//通过年份相差获得年</span></span><br><span class="line">        <span class="comment">//通过月份相差获得月</span></span><br><span class="line">        <span class="comment">//通过Day相差获得天</span></span><br><span class="line">        <span class="comment">//****</span></span><br><span class="line">        <span class="comment">//规范化这个过程</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">//获得现在的时间</span></span><br><span class="line">            Date NowDate = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> year;</span><br><span class="line">            <span class="keyword">int</span> month;</span><br><span class="line">            <span class="keyword">int</span> day;</span><br><span class="line">            <span class="keyword">int</span> hour;</span><br><span class="line">            <span class="keyword">int</span> min;</span><br><span class="line">            <span class="keyword">int</span> sed;</span><br><span class="line"></span><br><span class="line">            year = NowDate.getYear()-OldDate.getYear();</span><br><span class="line">            month = NowDate.getMonth()-OldDate.getMonth();</span><br><span class="line">            day = NowDate.getDay()-OldDate.getDay();</span><br><span class="line">            hour = NowDate.getHours()-OldDate.getHours();</span><br><span class="line">            min = NowDate.getMinutes()-OldDate.getMinutes();</span><br><span class="line">            sed = NowDate.getSeconds()-OldDate.getSeconds();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//对代码健壮性进行处理</span></span><br><span class="line">            <span class="keyword">if</span> (sed &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                min= min-<span class="number">1</span>;</span><br><span class="line">                sed = sed+<span class="number">60</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (min&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                hour = hour-<span class="number">1</span>;</span><br><span class="line">                min = min + <span class="number">60</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (hour&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                hour = hour+<span class="number">24</span>;</span><br><span class="line">                day = day-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (day&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                month=month-<span class="number">1</span>;</span><br><span class="line">                day = day+<span class="number">30</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (month&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                year=year-<span class="number">1</span>;</span><br><span class="line">                month = month+<span class="number">12</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (year&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请查看您输入的出生日期!!!&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//输出计算结果</span></span><br><span class="line">            System.out.print(year+<span class="string">&quot;年&quot;</span>);</span><br><span class="line">            System.out.print(month+<span class="string">&quot;月&quot;</span>);</span><br><span class="line">            System.out.print(day+<span class="string">&quot;日&quot;</span>);</span><br><span class="line">            System.out.print(hour+<span class="string">&quot;时&quot;</span>);</span><br><span class="line">            System.out.print(min+<span class="string">&quot;分&quot;</span>);</span><br><span class="line">            System.out.println(sed+<span class="string">&quot;秒&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p> <img src="https://s3.bmp.ovh/imgs/2022/02/bcc8bf0bfaedb97b.jpg" alt="效果图"> </p>
]]></content>
  </entry>
  <entry>
    <title>白鹿原观后感</title>
    <url>/2022/02/02/%E7%99%BD%E9%B9%BF%E5%8E%9F%E8%A7%82%E5%90%8E%E6%84%9F/</url>
    <content><![CDATA[<h1 id="白鹿原观后感"><a href="#白鹿原观后感" class="headerlink" title="白鹿原观后感"></a>白鹿原观后感</h1><p>说是观后感，其实是读后感。我阅读了白鹿原的原著，并没有看白鹿原电视剧。但是在阅读原著时，在我脑海中勾画出的画面使我折服。我很喜欢这本书，故事情节有趣，情节推进很快也是有历史感的。</p>
<h2 id="对白鹿原中一些事的看法"><a href="#对白鹿原中一些事的看法" class="headerlink" title="对白鹿原中一些事的看法"></a>对白鹿原中一些事的看法</h2><p>白鹿原中描写了很多事，很多事是在现在人看来是幼稚的，无聊的，但是“人不能跳过他的历史局限性来评论他。”因此也是合理的。现代人不了解的。</p>
<h3 id="看完白鹿原后的感受"><a href="#看完白鹿原后的感受" class="headerlink" title="看完白鹿原后的感受"></a>看完白鹿原后的感受</h3><p>看完白鹿原后，我对自己的历史的欠缺感到懊悔，我应该多读一些书籍来了解那个时代，那个变换莫测的时代，肯定不是一句两句话就能概括的。</p>
<h3 id="文革到底是什么样的"><a href="#文革到底是什么样的" class="headerlink" title="文革到底是什么样的"></a>文革到底是什么样的</h3><p>文革到底是什么样，我没经历过，电视剧不敢拍。因此需要阅读很多书籍来了解来完善那个时代。</p>
<p>如《兄弟》等余华作者的笔下，红卫兵们是对个人的迫害，我当时看时到觉得不以为然，只是为误会一个好人感到惋惜，只当他们是疯子。</p>
<p>但是看到《白鹿原》中，红卫兵和“造反派”们甚至产生了武力冲突，活力冲突。在《白鹿原》中，作者将他们的行为视为“夺权”。“红卫兵”们占领了县级以上的权利，而“造反派”们在农村搞破坏。</p>
<p>《白鹿原》中描写到了“红小将”们的“革命”。他们所谓的“破四旧”，打砸孔子塑像，甚至到挖掉朱先生坟墓的地步。正如朱先生生前的预知“天作孽，尚可存。人作孽，不可活”以及“还要闹到什么时候。”</p>
<p>这些在大方向上的描写使我对那段历史产生兴趣，万幸这个作家好像写了很多这方面的内容，我可以看一下。</p>
<h3 id="鬼神论"><a href="#鬼神论" class="headerlink" title="鬼神论"></a>鬼神论</h3><p>在《白鹿原》中，在“田小娥附身”以及“判官抓鬼”和“新妻遇鬼”这些地方由所谓鬼神的描写。</p>
<p>当时看到“田小娥附身后”询问母亲是否真的有此等事，没想到当年真的在她的娘家的那个村庄发生了附身的事。对于鬼神我是不信的，但是身边竟然真的出现了这种事，增加了我对这方面的兴趣，激发我解释这种现象的兴趣。在我看来，这种附身的人有几种特点：“有别人的记忆”，“声调会变”，“时而清醒时而糊涂”。在我询问过身边人后，发现每个村庄多多少少都会发生这种事，也都有所谓的“仙”来收走他们。</p>
<p>但是在《平凡的世界》中的所谓的“仙”，都是在极度无能的情况下来混口饭吃的人假装的，和《树先生》一样。</p>
<p>作家的不同描写激发了我的阅读兴趣。</p>
<p>对于“鬼神”我个人是不信服的，我认为一定是一种物理现象，这种现象一定有科学解释，只是我的学识不够，在以后在阅读更多来了解这些事。</p>
<h3 id="革命？"><a href="#革命？" class="headerlink" title="革命？"></a>革命？</h3><p>在白鹿原中，共有两次革命，一次是农革，一次是起义。</p>
<p>农革时，由各地的党员委派几名“先进”的农民到西安上了为时一个月的教育，然后他们再到各乡镇去教育其他农人进行革命。</p>
<p>矛盾在于，这些被委派去的农人在当时人的眼里都是“死皮狗”等等，事实上他们后来的举动确实让人大跌眼镜。</p>
<p>第二次是起义</p>
<p>几个为就党守门的军官竟然一瞬间就抛弃原来的政府进行“起义”，他们只是墙头草，是两边派。他们的革命性是十分低的，但是这种人竟然在“起义”后进入统治阶级，他们运用新宪法对原来的投机派进行党争。</p>
<p>原本是国民党狗腿子的白孝文竟然成了县长，只是因为这个投机派首先给党写邀功信，这种人注定是蛀虫。还堂而皇之的说自己的工作是革命工作。</p>
<p>原本是农协分子的黑娃，先是入伍，后当了土匪，后来又进了保安团，最后起义成了“副县长”，最后被白孝文通过新法给判了死刑。</p>
<p>这些虚假的投机派竟然在占据革命的成果，我相信是没来得及对他们进行清算。</p>
<p>只是当地最顶端的权利别调换了，但是那些人还是那些人，在审问黑娃时甚至没有做过多的“求证”。</p>
<p>这就是所谓的“革命”？所谓的“起义”难道就是简单的夺权？</p>
<h3 id="我们真正的革命战士"><a href="#我们真正的革命战士" class="headerlink" title="我们真正的革命战士"></a>我们真正的革命战士</h3><p>我们真正的革命战士哪里去了？</p>
<p>我能记住的书中真正的战士有“鹿兆鹏”、“白灵”、“韩裁缝”以及“鹿兆海”。</p>
<p>首先讲讲“鹿兆海”，他不是共产党，但是他是真正的军人，在中门山痛击日军，但是却死于与“剿共匪”。作者在这里揭示了蒋介石的虚伪面孔，自己的嫡系武装装备到牙齿却到西安“吃粮”，而将地方军视为“杂牌军”，却把最重要的战事最紧的关口留给他们守。在他们屡次胜利后竟把他们调离，让他们和共产党互杀，毕竟蒋介石所谓的“安内”也包括他们。</p>
<p>“鹿兆鹏”和“韩裁缝”都是真正的共产党人，在党最困难的时候都坚持了下去，他们最后都不知道结局。</p>
<p>“白灵”是十分可惜的，她在我们的根据地的一次所谓的“抓出内奸”在我看来是活生生的“党挣”下死于活埋。当时她的孩子尙小。</p>
<p>真正的战士，他们最终却因为种种原因牺牲，不知去向。活着的“投机分子”却最后苟活得到权利，多么的讽刺。</p>
]]></content>
  </entry>
  <entry>
    <title>矩阵连乘问题</title>
    <url>/2022/03/22/%E7%9F%A9%E9%98%B5%E8%BF%9E%E4%B9%98%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="矩阵连乘"><a href="#矩阵连乘" class="headerlink" title="矩阵连乘"></a>矩阵连乘</h1><p>矩阵连乘是一个经典的动态规划问题</p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/03/91c8c4a07136ceda.jpg" alt="矩阵连乘的思想"> </p>
<h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MatrixChain</span> </span>&#123;</span><br><span class="line">    <span class="comment">//整数矩阵连乘</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * p[]: 输入参数</span></span><br><span class="line"><span class="comment">    * m[]:最优值数组</span></span><br><span class="line"><span class="comment">    * s[]:最优断开位置数组</span></span><br><span class="line"><span class="comment">    * r:子链长度</span></span><br><span class="line"><span class="comment">    * n:我们要求的链的长度*/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] p;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[][] m;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[][] s;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> r;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] getP() &#123;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setP</span><span class="params">(<span class="keyword">int</span>[] p)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.p = p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] getM() &#123;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setM</span><span class="params">(<span class="keyword">int</span>[][] m)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.m = m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] getS() &#123;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setS</span><span class="params">(<span class="keyword">int</span>[][] s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.s = s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getR</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setR</span><span class="params">(<span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.r = r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getN</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setN</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.n = n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//算法核心</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">matriChain</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//对矩阵进行初始化 将m[][]的对角线全部设置为0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            m[i][i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//对网格图m[][]填写数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> r = <span class="number">2</span>;r&lt;=n;r++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-r+<span class="number">1</span>;i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> j = i + r - <span class="number">1</span>;</span><br><span class="line">                m[i][j] = m[i + <span class="number">1</span>][j] + p[i - <span class="number">1</span>] * p[i] * p[j];</span><br><span class="line">                s[i][j] = i;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = i + <span class="number">1</span>;k&lt;j;k++)&#123;</span><br><span class="line">                    <span class="keyword">int</span> t = m[i][k] + m[k+<span class="number">1</span>][j] + p[i-<span class="number">1</span>]*p[k]*p[j];</span><br><span class="line">                    <span class="keyword">if</span> (t&lt;m[i][j])&#123;</span><br><span class="line">                        m[i][j] = t;</span><br><span class="line">                        s[i][j] = k;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//回溯查找动态规划</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">traceBack</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==j)</span><br><span class="line">            System.out.print(<span class="string">&quot;A&quot;</span>+i);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (i+<span class="number">1</span> == j)</span><br><span class="line">            System.out.print(<span class="string">&quot; (A&quot;</span>+i+<span class="string">&quot;*&quot;</span>+<span class="string">&quot; A&quot;</span>+j+<span class="string">&quot;) &quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot; (&quot;</span>);</span><br><span class="line">            traceBack(i,s[i][j]);</span><br><span class="line">            traceBack(s[i][j]+<span class="number">1</span>,j);</span><br><span class="line">            System.out.print(<span class="string">&quot;) &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>其中traceBack方法是用来回溯找到最优解的。</p>
]]></content>
  </entry>
  <entry>
    <title>石子合并问题</title>
    <url>/2022/03/24/%E7%9F%B3%E5%AD%90%E5%90%88%E5%B9%B6%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="石子合并问题"><a href="#石子合并问题" class="headerlink" title="石子合并问题"></a>石子合并问题</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p> <a href="https://blog.csdn.net/sunhengzhi_212/article/details/81199293?ops_request_misc=&request_id=&biz_id=102&utm_term=%E7%9F%B3%E5%AD%90%E5%90%88%E5%B9%B6%E9%97%AE%E9%A2%98&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-81199293.142%5Ev3%5Epc_search_result_control_group,143%5Ev4%5Econtrol&spm=1018.2226.3001.4187">(105条消息) dp算法 - 石子合并问题_lost_tower的博客-CSDN博客_石子合并</a> </p>
<p>他的这个收算法解释的，但是我们保证我写的是我自己思考出来的。</p>
<p>这里我只是借用他的写出来的问题</p>
<h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p> <img src="https://s3.bmp.ovh/imgs/2022/03/aa8c24a83eb5c406.jpg"> </p>
<p>这个是思考这个题时候的笔记，有手推过程，以及递推公式</p>
<hr>
<p><strong>手推过程</strong></p>
<p> <img src="https://s3.bmp.ovh/imgs/2022/03/ca4a7c3a96bbb6b6.jpg"> </p>
<h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo3__3</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> m[];<span class="comment">//m数组说是用来存放石头的</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> dp[][];<span class="comment">//用来存放合并后的石头堆</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> i;<span class="comment">//起始地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> j;<span class="comment">//终止地址</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> inf = <span class="number">9999</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] getM() &#123;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setM</span><span class="params">(<span class="keyword">int</span>[] m)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.m = m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] getDp() &#123;</span><br><span class="line">        <span class="keyword">return</span> dp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDp</span><span class="params">(<span class="keyword">int</span>[][] dp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dp = dp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getI</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setI</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.i = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getJ</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJ</span><span class="params">(<span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.j = j;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//这个是动态规划方法的主体</span></span><br><span class="line">    <span class="comment">//这个递归程序用来求最小代价</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demoMin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//对程序进行初始化</span></span><br><span class="line">        <span class="comment">//计算石头的数量</span></span><br><span class="line">        <span class="keyword">int</span> n = m.length;</span><br><span class="line">        <span class="comment">//不需要任何的初始化</span></span><br><span class="line">        <span class="comment">//初始化 都化为0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> d = <span class="number">1</span>;d&lt;n;d++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> e=<span class="number">1</span>;e&lt;n;e++)&#123;</span><br><span class="line">                dp[d][e] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对除了对角线以外的数据进行操作</span></span><br><span class="line">        <span class="comment">//这里 我们设a为列，b为行,c为间断点</span></span><br><span class="line">        <span class="comment">//因此 我们的思想是 从a合并到b，以c为间断点</span></span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        <span class="keyword">int</span> min;</span><br><span class="line">        <span class="keyword">for</span> (b=<span class="number">2</span>;b&lt;m.length;b++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (a=b-<span class="number">1</span>;a&gt;=<span class="number">1</span>;a--)&#123;</span><br><span class="line">                min = inf;</span><br><span class="line">                <span class="comment">//设置间断点</span></span><br><span class="line">                <span class="keyword">for</span> (c=b-<span class="number">1</span>;c&gt;=a;c--)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (dp[a][c]+dp[c+<span class="number">1</span>][b]+getNumber(a,b) &lt; min)&#123;</span><br><span class="line">                           min = dp[a][c]+dp[c+<span class="number">1</span>][b]+getNumber(a,b);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dp[a][b] = min;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//这个程序用来求最大代价</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demoMax</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//对程序进行初始化</span></span><br><span class="line">        <span class="comment">//计算石头的数量</span></span><br><span class="line">        <span class="keyword">int</span> n = m.length;</span><br><span class="line">        <span class="comment">//不需要任何的初始化</span></span><br><span class="line">        <span class="comment">//初始化</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> d = <span class="number">1</span>;d&lt;n;d++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> e = <span class="number">1</span>; e &lt; n; e++) dp[d][e] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;        <span class="comment">//对除了对角线以外的数据进行操作</span></span><br><span class="line">        <span class="comment">//这里 我们设a为列，b为行,c为间断点</span></span><br><span class="line">        <span class="comment">//因此 我们的思想是 从a合并到b，以c为间断点</span></span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        <span class="keyword">int</span> max;</span><br><span class="line">        <span class="keyword">for</span> (b=<span class="number">2</span>;b&lt;m.length;b++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (a=b-<span class="number">1</span>;a&gt;=<span class="number">1</span>;a--)&#123;</span><br><span class="line">                max = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">//设置间断点</span></span><br><span class="line">                <span class="keyword">for</span> (c=b-<span class="number">1</span>;c&gt;=a;c--)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (dp[a][c]+dp[c+<span class="number">1</span>][b]+getNumber(a,b) &gt; max)&#123;</span><br><span class="line">                        max = dp[a][c]+dp[c+<span class="number">1</span>][b]+getNumber(a,b);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dp[a][b] = max;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这个是获得合并后石头数量的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNumber</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> number = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k=i;k&lt;=j;k++)&#123;</span><br><span class="line">            number = number+m[k];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> number;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>检验</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.passage3.demo3__3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo3_3Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设置数组</span></span><br><span class="line">        <span class="keyword">int</span>[] m = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="comment">//设置dp数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[m.length][m.length];</span><br><span class="line">        <span class="comment">// 设置起始位置和终止位置</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        demo3__3 demo3__3 = <span class="keyword">new</span> demo3__3();</span><br><span class="line">        demo3__3.setDp(dp);</span><br><span class="line">        demo3__3.setI(i);</span><br><span class="line">        demo3__3.setJ(j);</span><br><span class="line">        demo3__3.setM(m);</span><br><span class="line">        <span class="comment">//执行找最小代价程序</span></span><br><span class="line">        demo3__3.demoMin();</span><br><span class="line">        <span class="keyword">int</span>[][] dp1 = demo3__3.getDp();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : dp1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;==============================&quot;</span>);</span><br><span class="line">        <span class="comment">//执行找最大代价的程序</span></span><br><span class="line">        demo3__3.demoMax();</span><br><span class="line">        <span class="keyword">int</span>[][] dp2 = demo3__3.getDp();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints : dp2) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.print(anInt+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>输出结果</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">13</span>	<span class="number">25</span>	<span class="number">48</span>	<span class="number">64</span>	<span class="number">85</span>	<span class="number">106</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">10</span>	<span class="number">29</span>	<span class="number">44</span>	<span class="number">65</span>	<span class="number">83</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">11</span>	<span class="number">25</span>	<span class="number">40</span>	<span class="number">57</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">12</span>	<span class="number">27</span>	<span class="number">44</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">9</span>	<span class="number">22</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">10</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line">==============================</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">13</span>	<span class="number">28</span>	<span class="number">54</span>	<span class="number">81</span>	<span class="number">114</span>	<span class="number">151</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">10</span>	<span class="number">30</span>	<span class="number">52</span>	<span class="number">80</span>	<span class="number">112</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">11</span>	<span class="number">26</span>	<span class="number">50</span>	<span class="number">76</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">12</span>	<span class="number">30</span>	<span class="number">52</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">9</span>	<span class="number">23</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">10</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br></pre></td></tr></table></figure>

<p>可以看到这个结果和我们的手推的dp矩阵时一致的，因此是一个合适的答案</p>
<h2 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h2><p>在编写动态规划问题的时候，思考最多的是地推公式，应该仔细分析，得到一个正确的递归公式。</p>
<p>得到递归公式也不代表是解决了这个问题，要分析好这个三重for循环怎么写，算法实现怎么写。</p>
<p><strong>一定要注意，动态规划自底而上的原则</strong></p>
<p>在分析递推公式的时候一定要注意：</p>
<p><strong>dp[i] [j]矩阵的i和j到底代表着什么</strong></p>
]]></content>
  </entry>
  <entry>
    <title>第一个mybatis程序</title>
    <url>/2022/01/04/%E7%AC%AC%E4%B8%80%E4%B8%AAmybatis%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<p><strong>对于mybatis的学习应该尽量参考他的中文官方文档</strong></p>
<p>文档地址: <a href="https://mybatis.net.cn/">MyBatis中文网</a> </p>
<p><strong>mybatis是对永久层进行简化的几个框架，也就是说，它能够方便对数据库的操作</strong></p>
<p>因此需要先创建一个数据库</p>
<h2 id="用sql语句创建数据库"><a href="#用sql语句创建数据库" class="headerlink" title="用sql语句创建数据库"></a>用sql语句创建数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `mybatis`;</span><br><span class="line"></span><br><span class="line">USE `mybatis`;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CR`mybatis``student`EATE <span class="keyword">TABLE</span> `student`(</span><br><span class="line">	`id` <span class="type">INT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">	`name` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">	`password` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">)ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET <span class="operator">=</span> utf8;</span><br><span class="line"></span><br><span class="line">`student`<span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`id`,`name`,`password`)<span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;welcome&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;welcome&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;welcome&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://s3.bmp.ovh/imgs/2022/01/7d1bccd65cc2e6a8.png" alt="创建数据库的样式"></p>
<h2 id="mybatis框架"><a href="#mybatis框架" class="headerlink" title="mybatis框架"></a>mybatis框架</h2><p>mybatis是一个框架，是对数据库进行操作的，也需要创建测试类</p>
<p>因此需要导入的依赖有：mybatis、mysql、junit</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--对于mybatis需要 mysql mybatis Junit 等的依赖--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--mybatis依赖--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--mysql依赖--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--junit依赖--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="编写第一个mybatis程序"><a href="#编写第一个mybatis程序" class="headerlink" title="编写第一个mybatis程序"></a>编写第一个mybatis程序</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol>
<li>创建一个空的maven项目</li>
<li>删除src文件夹</li>
<li>导包（这样就获得了父项目）</li>
<li>创建module，maven（这样就获得了子程序）</li>
</ol>
<h4 id="创建pojo层"><a href="#创建pojo层" class="headerlink" title="创建pojo层"></a>创建pojo层</h4><p>以及与数据库中表格对应的映射类 以及get、set方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建与数据库映射的类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//无参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">student</span><span class="params">(<span class="keyword">int</span> id, String name, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//get和set方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="编写Dao层"><a href="#编写Dao层" class="headerlink" title="编写Dao层"></a>编写Dao层</h4><p>使用mybatis编写的Dao层，也可以称为Mapper层包括一个抽象的类 以及实现他的XML</p>
<p><strong>抽象的UserDao</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写一个抽象的DAO接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//编写这个接口需要的方法</span></span><br><span class="line">    <span class="function">List&lt;student&gt; <span class="title">getList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>UserMapper.xml实现抽象类</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这里是固定的格式，前边的都是文件配置，不需要更改--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这里是我们需要更改的地方 namespace表示 我们的Dao层在哪里（抽象类）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dwx.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--与Dao类的实现类一样 这里是写sql语句--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--id指的是我们调用这个sql使用的名字，可以理解为BaseDaoImp的方法名--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType表示返回的数据的类型 如果是自己创建的类 需要填写整个路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.dwx.pojo.student&quot;</span>&gt;</span></span><br><span class="line">        select * from student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>这个xml里上边的是文件参数，不需要更改</strong></p>
<p>需要更改的我都加有注释，可以看注释理解</p>
<h4 id="编写untils层"><a href="#编写untils层" class="headerlink" title="编写untils层"></a>编写untils层</h4><p>untils层包括使用MyBatis进行操作的类以及方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.untils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">//固定的格式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">//直接读取resources文件夹下的配置文件</span></span><br><span class="line">    String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">    <span class="comment">//将这个文件转换成输入流</span></span><br><span class="line">    InputStream inputStream;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将这个转化好的输入流设计为SqlSession工厂 通过工厂模式来创造SqlSession</span></span><br><span class="line">    SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">    <span class="comment">//获得SqlSession的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//通过SqlSession工厂直接获得sqlSession</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="keyword">return</span>  sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里使用的是工厂模式，来实现实例化对象.</p>
<p><strong>这个类中的方法都是固定的，不需要进行更改</strong></p>
<p>在这个类中可以看到一个mybatis-config.xml的文件被使用了，这个xml文件中包含着所有的与数据库相连的配置，在Jdbc里，我们使用的是driver、getConnection等等方法进行联结。</p>
<h3 id="编写mybatis-config-xml文件"><a href="#编写mybatis-config-xml文件" class="headerlink" title="编写mybatis-config.xml文件"></a>编写mybatis-config.xml文件</h3><p>这个文件必须在main文件夹下的resources文件夹下，这样才容易进行调用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--环境配置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--网上有模版--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span>       <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useUnicode=true<span class="symbol">&amp;amp;</span>characterEnconding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dwx&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--我们每一个xml文件都要在这里进行配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/dwx/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这个配置文件也是固定的格式</p>
<p>不过需要注意这个<code>&lt;mappers&gt;&lt;/mappers&gt;</code>这个标签对</p>
<p>这个标签对里包括的数据是：在整个程序（子程序）中，凡是创建的使用的xml文件都需要在这里进行配置。否则将会报错</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/01/8a247735f2a4fa79.png" alt="没有配置mapper时报的错"></p>
<p><img src="https://s3.bmp.ovh/imgs/2022/01/d993fca30216ec06.png" alt="文件分层"></p>
<h2 id="编写测试类来进行测试"><a href="#编写测试类来进行测试" class="headerlink" title="编写测试类来进行测试"></a>编写测试类来进行测试</h2><p>需要注意的是，这个文件测试类写在与main文件夹同级的test文件夹下的绿色java文件夹中</p>
<p><strong>需要测试哪个，就把哪个对应的全部包等等都创建出来</strong></p>
<p><img src="https://s3.bmp.ovh/imgs/2022/01/2bf028748af4705e.png" alt="测试类的编写规范"></p>
<h3 id="编写UserDaoTest类"><a href="#编写UserDaoTest类" class="headerlink" title="编写UserDaoTest类"></a>编写UserDaoTest类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dwx.pojo.student;</span><br><span class="line"><span class="keyword">import</span> com.dwx.untils.MyBatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//调用我们的myBatisUtils来获得是SqlSession</span></span><br><span class="line">        MyBatisUtils myBatisUtils = <span class="keyword">new</span> MyBatisUtils();</span><br><span class="line">        SqlSession sqlSession = myBatisUtils.getSqlSession();</span><br><span class="line">        <span class="comment">//sqlSession进行操作</span></span><br><span class="line">        <span class="comment">//通过反释来获得UserMapper</span></span><br><span class="line">        UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        <span class="comment">//获得的mapper对象就能调用“id”，来实现操作了</span></span><br><span class="line">        List&lt;student&gt; list = mapper.getList();</span><br><span class="line">        <span class="keyword">for</span> (student student : list) &#123;</span><br><span class="line">            System.out.print(student.getId());</span><br><span class="line">            System.out.print(student.getName());</span><br><span class="line">            System.out.println(student.getPassword());</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>必须注意的是，因为我们使用的是xml，但是这个xml并不会出现在target文件夹中，会出错。</p>
<p>这个错误指的是“数据冲突”错误</p>
<h3 id="解决数据冲突错误"><a href="#解决数据冲突错误" class="headerlink" title="解决数据冲突错误"></a>解决数据冲突错误</h3><p><strong>方法一：</strong>直接把缺少的xml文件夹复制到target中去</p>
<p><strong>方法二：</strong>在pom.xml配置文件中添加如下<code>&lt;bulid&gt;&lt;/build&gt;</code>标签对</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>这个是固定格式 不用修改</strong></p>
<p>在父项目的pom.xml中添加可以作用到每一个子程序</p>
<p>在子项目的pom.xml中添加只能作用到这个子程序</p>
<h2 id="程序运行结果"><a href="#程序运行结果" class="headerlink" title="程序运行结果"></a>程序运行结果</h2><p>通过使用mybatis，在大量使用sql语句时方便了SQL语句的编写。</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/01/5afc2e51c77369ce.png" alt="运行结果"></p>
]]></content>
  </entry>
  <entry>
    <title>第一个带图片的博客</title>
    <url>/2021/12/22/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%B8%A6%E5%9B%BE%E7%89%87%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="为博客添加图片"><a href="#为博客添加图片" class="headerlink" title="为博客添加图片"></a>为博客添加图片</h2><p><strong>步骤</strong></p>
<h3 id="将图片添加到图床"><a href="#将图片添加到图床" class="headerlink" title="将图片添加到图床"></a>将图片添加到图床</h3><p>将图片添加到图床 能够实现将本地图片转化为网络图片</p>
<p>在添加<code>![]()</code>中使用网络图片地址</p>
<p>以下边的图片为例</p>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/65c5aadecf39c156.jpeg" alt="天安门"></p>
<h3 id="图床链接"><a href="#图床链接" class="headerlink" title="图床链接"></a>图床链接</h3><p><a href="https://imgurl.org/">图床链接</a></p>
]]></content>
  </entry>
  <entry>
    <title>第三章数据库作业</title>
    <url>/2022/11/16/%E7%AC%AC%E4%B8%89%E7%AB%A0%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<h1 id="第三章数据库作业"><a href="#第三章数据库作业" class="headerlink" title="第三章数据库作业"></a>第三章数据库作业</h1><h2 id="作业要求"><a href="#作业要求" class="headerlink" title="作业要求"></a>作业要求</h2><p>根据SPJ数据库，给出下列各题的命令语句，将执行的语句及结果复制到word文档中，（查询结果可复制，选中查询结果后，点击右键，在快捷菜单中选择相应选项）：</p>
<p>针对SPJ数据库，查询S表中供应商所在城市为天津的SNO，SNAME， CITY 。</p>
<p>\1.   查询工程项目所在城市有哪些？</p>
<p>\2.   查询SPJ表中供应数量大于200的记录的SNO，PNO，JNO，QTY，分别以供应商代码，零件代码，工程项目代码，供应数量显示</p>
<p>\3.   查询工程项目所在城市为北京、天津、南京的工程项目信息。</p>
<p>\4.   查询所有名称第一个字为“螺”的零件的信息</p>
<p>\5.   查询第二个字为“轮”的零件的信息</p>
<p>\6.   查询红色且重量大于20的零件的信息</p>
<p>\7.   查询红色或重量大于20的零件的信息</p>
<p>\8.   查询工程项目所在地不为北京和天津的工程项目信息</p>
<p>\9.   从SPJ表中查询工程项目代码为J1的记录信息，并按照供应数量递增排序。</p>
<p>\10.  统计SPJ表中使用P3零件的总数量，最小数量、最多数量、平均数量</p>
<p>13．统计SPJ表中使用各种零件的总数量，最小数量、最多数量、平均数量</p>
<p>14．统计SPJ表中各工程项目分别使用了几种零件</p>
<p>15．统计SPJ表中各工程项目分别使用各种零件的总数量</p>
<p>16．查询SPJ表中使用零件种类超过两种的工程项目。</p>
<p>17．查询SPJ表中各供应商分别给几个项目供应零件</p>
<p>18．查询SPJ表中各供应商分别供应每种零件给几个项目，及供应每种零件的总数量</p>
<p>19．查询SPJ表中所有供应商代码，供应商姓名，零件名，工程项目名，供应数量，且供应数量&gt;200的项目信息</p>
<p>20.查询所有工程项目代码，工程项目名，所在城市，及使用的各零件代码，和数量</p>
<p>以下使用嵌套查询实现</p>
<p>21．查询S1供应商供应的工程项目代码，工程项目名，所在城市</p>
<p>\22. 查询使用蓝色零件的项目的工程项目代码，工程项目名，所在城市</p>
<p>23．查询SPJ表中使用数量超过200的零件代码，零件名，颜色，</p>
<p>24．查询和s1在同一个城市的供应商代码，供应商名称</p>
<p>\25. 查询所有使用了p1零件项目代码，名称,城市（用exists查询实现）</p>
<p>26．查询没有使用p1零件的项目代码，名称,城市(用not exists查询)</p>
<p> <strong>作业分析</strong></p>
<p>是简单的数据库操作的考察，sql语句的考察，题目中的SPJ表在数的课后题里，需要自己创建。</p>
<h2 id="创建SPJ数据库"><a href="#创建SPJ数据库" class="headerlink" title="创建SPJ数据库"></a>创建SPJ数据库</h2><p><strong>创建数据库代码，用的是mysql数据库 不知道sql是否和其他的数据库通用</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">SQLyog Professional v12.09 (64 bit)</span></span><br><span class="line"><span class="comment">MySQL - 8.0.26 : Database - spj</span></span><br><span class="line"><span class="comment">*********************************************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40101 SET NAMES utf8 */</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40101 SET SQL_MODE=&#x27;&#x27;*/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=&#x27;NO_AUTO_VALUE_ON_ZERO&#x27; */</span>;</span><br><span class="line"><span class="comment">/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */</span>;</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE <span class="comment">/*!32312 IF NOT EXISTS*/</span>`spj` <span class="comment">/*!40100 DEFAULT CHARACTER SET utf8 */</span> <span class="comment">/*!80016 DEFAULT ENCRYPTION=&#x27;N&#x27; */</span>;</span><br><span class="line"></span><br><span class="line">USE `spj`;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `j` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `j`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `j` (</span><br><span class="line">  `JNO` <span class="type">varchar</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;项目代码&#x27;</span>,</span><br><span class="line">  `JNAME` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;工程项目名&#x27;</span>,</span><br><span class="line">  `CITY` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;工程项目所在城市&#x27;</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb3;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `j` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `j`(`JNO`,`JNAME`,`CITY`) <span class="keyword">values</span> (<span class="string">&#x27;J1&#x27;</span>,<span class="string">&#x27;三建&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>),(<span class="string">&#x27;J2&#x27;</span>,<span class="string">&#x27;一汽&#x27;</span>,<span class="string">&#x27;长春&#x27;</span>),(<span class="string">&#x27;J3&#x27;</span>,<span class="string">&#x27;弹簧厂&#x27;</span>,<span class="string">&#x27;天津&#x27;</span>),(<span class="string">&#x27;J4&#x27;</span>,<span class="string">&#x27;造船厂&#x27;</span>,<span class="string">&#x27;天津&#x27;</span>),(<span class="string">&#x27;J5&#x27;</span>,<span class="string">&#x27;机车厂&#x27;</span>,<span class="string">&#x27;唐山&#x27;</span>),(<span class="string">&#x27;J6&#x27;</span>,<span class="string">&#x27;无线电厂&#x27;</span>,<span class="string">&#x27;常州&#x27;</span>),(<span class="string">&#x27;J7&#x27;</span>,<span class="string">&#x27;半导体厂&#x27;</span>,<span class="string">&#x27;南京&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `p` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `p`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `p` (</span><br><span class="line">  `PNO` <span class="type">varchar</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;零件代码&#x27;</span>,</span><br><span class="line">  `PNAME` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;零件名&#x27;</span>,</span><br><span class="line">  `COLOR` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;颜色&#x27;</span>,</span><br><span class="line">  `WEIGHT` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;重量&#x27;</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb3;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `p` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `p`(`PNO`,`PNAME`,`COLOR`,`WEIGHT`) <span class="keyword">values</span> (<span class="string">&#x27;P1&#x27;</span>,<span class="string">&#x27;螺母&#x27;</span>,<span class="string">&#x27;红&#x27;</span>,<span class="number">12</span>),(<span class="string">&#x27;P2&#x27;</span>,<span class="string">&#x27;螺栓&#x27;</span>,<span class="string">&#x27;绿&#x27;</span>,<span class="number">17</span>),(<span class="string">&#x27;P3&#x27;</span>,<span class="string">&#x27;螺丝刀&#x27;</span>,<span class="string">&#x27;蓝&#x27;</span>,<span class="number">14</span>),(<span class="string">&#x27;P4&#x27;</span>,<span class="string">&#x27;螺丝刀&#x27;</span>,<span class="string">&#x27;红&#x27;</span>,<span class="number">14</span>),(<span class="string">&#x27;P5&#x27;</span>,<span class="string">&#x27;凸轮&#x27;</span>,<span class="string">&#x27;蓝&#x27;</span>,<span class="number">40</span>),(<span class="string">&#x27;P6&#x27;</span>,<span class="string">&#x27;齿轮&#x27;</span>,<span class="string">&#x27;红&#x27;</span>,<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `s` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `s`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `s` (</span><br><span class="line">  `SNO` <span class="type">varchar</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商代码&#x27;</span>,</span><br><span class="line">  `SNAME` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商姓名&#x27;</span>,</span><br><span class="line">  `STATUS` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商状态&#x27;</span>,</span><br><span class="line">  `CITY` <span class="type">varchar</span>(<span class="number">3</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;城市&#x27;</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb3;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `s` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `s`(`SNO`,`SNAME`,`STATUS`,`CITY`) <span class="keyword">values</span> (<span class="string">&#x27;S1&#x27;</span>,<span class="string">&#x27;精益&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;天津&#x27;</span>),(<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;盛锡&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;北京&#x27;</span>),(<span class="string">&#x27;S3&#x27;</span>,<span class="string">&#x27;东方红&#x27;</span>,<span class="number">30</span>,<span class="string">&#x27;北京&#x27;</span>),(<span class="string">&#x27;S4&#x27;</span>,<span class="string">&#x27;丰泰盛&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;天津&#x27;</span>),(<span class="string">&#x27;S5&#x27;</span>,<span class="string">&#x27;为民&#x27;</span>,<span class="number">30</span>,<span class="string">&#x27;上海&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `spj` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `spj`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `spj` (</span><br><span class="line">  `SNO` <span class="type">varchar</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商代码&#x27;</span>,</span><br><span class="line">  `PNO` <span class="type">varchar</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;零件代码&#x27;</span>,</span><br><span class="line">  `JNO` <span class="type">varchar</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;工程项目代码&#x27;</span>,</span><br><span class="line">  `QTY` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应数量&#x27;</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb3;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `spj` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `spj`(`SNO`,`PNO`,`JNO`,`QTY`) <span class="keyword">values</span> (<span class="string">&#x27;S1&#x27;</span>,<span class="string">&#x27;P1&#x27;</span>,<span class="string">&#x27;J1&#x27;</span>,<span class="number">200</span>),(<span class="string">&#x27;S1&#x27;</span>,<span class="string">&#x27;P1&#x27;</span>,<span class="string">&#x27;J3&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;S1&#x27;</span>,<span class="string">&#x27;P1&#x27;</span>,<span class="string">&#x27;J4&#x27;</span>,<span class="number">700</span>),(<span class="string">&#x27;S1&#x27;</span>,<span class="string">&#x27;p2&#x27;</span>,<span class="string">&#x27;J2&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;P3&#x27;</span>,<span class="string">&#x27;J1&#x27;</span>,<span class="number">400</span>),(<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;P3&#x27;</span>,<span class="string">&#x27;J2&#x27;</span>,<span class="number">200</span>),(<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;P3&#x27;</span>,<span class="string">&#x27;J5&#x27;</span>,<span class="number">400</span>),(<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;P5&#x27;</span>,<span class="string">&#x27;J2&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;P3&#x27;</span>,<span class="string">&#x27;J4&#x27;</span>,<span class="number">500</span>),(<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;P5&#x27;</span>,<span class="string">&#x27;J1&#x27;</span>,<span class="number">400</span>),(<span class="string">&#x27;S3&#x27;</span>,<span class="string">&#x27;P3&#x27;</span>,<span class="string">&#x27;J1&#x27;</span>,<span class="number">200</span>),(<span class="string">&#x27;S3&#x27;</span>,<span class="string">&#x27;P1&#x27;</span>,<span class="string">&#x27;J1&#x27;</span>,<span class="number">200</span>),(<span class="string">&#x27;S4&#x27;</span>,<span class="string">&#x27;P6&#x27;</span>,<span class="string">&#x27;J3&#x27;</span>,<span class="number">300</span>),(<span class="string">&#x27;S4&#x27;</span>,<span class="string">&#x27;P6&#x27;</span>,<span class="string">&#x27;J4&#x27;</span>,<span class="number">200</span>),(<span class="string">&#x27;S4&#x27;</span>,<span class="string">&#x27;P5&#x27;</span>,<span class="string">&#x27;J1&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;S5&#x27;</span>,<span class="string">&#x27;P3&#x27;</span>,<span class="string">&#x27;J1&#x27;</span>,<span class="number">200</span>),(<span class="string">&#x27;S5&#x27;</span>,<span class="string">&#x27;P6&#x27;</span>,<span class="string">&#x27;J2&#x27;</span>,<span class="number">200</span>),(<span class="string">&#x27;S5&#x27;</span>,<span class="string">&#x27;P6&#x27;</span>,<span class="string">&#x27;J4&#x27;</span>,<span class="number">500</span>),(<span class="string">&#x27;S5&#x27;</span>,<span class="string">&#x27;P2&#x27;</span>,<span class="string">&#x27;J4&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40101 SET SQL_MODE=@OLD_SQL_MODE */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */</span>;</span><br><span class="line"><span class="comment">/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p><strong>1.针对SPJ数据库，查询S表中供应商所在城市为天津的SNO，SNAME， CITY</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,SNAME,CITY</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> CITY <span class="operator">=</span> <span class="string">&#x27;天津&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZoNZV"><img src="https://s1.ax1x.com/2022/11/16/zZoNZV.png" alt="zZoNZV.png"></a></p>
<p> <strong>2.查询工程项目所在城市有哪些</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CITY</span><br><span class="line"><span class="keyword">FROM</span> j;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZo2dK"><img src="https://s1.ax1x.com/2022/11/16/zZo2dK.png" alt="zZo2dK.png"></a></p>
<p><strong>3. 查询SPJ表中供应数量大于200的记录的SNO，PNO，JNO，QTY，分别以供应商代码，零件代码，工程项目代码，供应数量显示</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO <span class="keyword">AS</span> `供应商代码`,PNO <span class="keyword">AS</span> `零件代码`,JNO <span class="keyword">AS</span> `工程项目代码`,QTY <span class="keyword">AS</span> `供应数量显示`</span><br><span class="line"><span class="keyword">FROM</span> spj</span><br><span class="line"><span class="keyword">WHERE</span> QTY <span class="operator">&gt;</span> <span class="number">200</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZo4RH"><img src="https://s1.ax1x.com/2022/11/16/zZo4RH.png" alt="zZo4RH.png"></a></p>
<p><strong>4.查询工程项目所在城市为北京、天津、南京的工程项目信息</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> j</span><br><span class="line"><span class="keyword">WHERE</span> CITY <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span> <span class="keyword">OR</span> CITY <span class="operator">=</span> <span class="string">&#x27;天津&#x27;</span> <span class="keyword">OR</span> CITY <span class="operator">=</span> <span class="string">&#x27;南京&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZooQA"><img src="https://s1.ax1x.com/2022/11/16/zZooQA.png" alt="zZooQA.png"></a></p>
<p><strong>5.查询所有名称第一个字为“螺”的零件的信息</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> p</span><br><span class="line"><span class="keyword">WHERE</span> PNAME <span class="keyword">LIKE</span> <span class="string">&#x27;螺%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZoTsI"><img src="https://s1.ax1x.com/2022/11/16/zZoTsI.png" alt="zZoTsI.png"></a></p>
<p><strong>6.查询第二个字为“轮”的零件的信息</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> p</span><br><span class="line"><span class="keyword">WHERE</span> PNAME <span class="keyword">LIKE</span> <span class="string">&#x27;_轮%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZTpyn"><img src="https://s1.ax1x.com/2022/11/16/zZTpyn.png" alt="zZTpyn.png"></a></p>
<p><strong>7. 查询红色且重量大于20的零件的信息</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> p</span><br><span class="line"><span class="keyword">WHERE</span> COLOR <span class="operator">=</span> <span class="string">&#x27;红&#x27;</span> <span class="keyword">AND</span> WEIGHT <span class="operator">&gt;</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZTFoT"><img src="https://s1.ax1x.com/2022/11/16/zZTFoT.png" alt="zZTFoT.png"></a></p>
<p><strong>8. 查询红色或重量大于20的零件的信息</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> p</span><br><span class="line"><span class="keyword">WHERE</span> COLOR <span class="operator">=</span> <span class="string">&#x27;红&#x27;</span> <span class="keyword">OR</span> WEIGHT <span class="operator">&gt;</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZTnyR"><img src="https://s1.ax1x.com/2022/11/16/zZTnyR.png" alt="zZTnyR.png"></a></p>
<p><strong>9.查询工程项目所在地不为北京和天津的工程项目信息</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> j</span><br><span class="line"><span class="keyword">WHERE</span> CITY <span class="operator">&lt;&gt;</span> <span class="string">&#x27;北京&#x27;</span> <span class="keyword">AND</span> CITY <span class="operator">&lt;&gt;</span> <span class="string">&#x27;天津&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZT3FO"><img src="https://s1.ax1x.com/2022/11/16/zZT3FO.png" alt="zZT3FO.png"></a></p>
<p><strong>10.从SPJ表中查询工程项目代码为J1的记录信息，并按照供应数量递增排序。</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> spj</span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="operator">=</span> <span class="string">&#x27;J1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> QTY <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZTtld"><img src="https://s1.ax1x.com/2022/11/16/zZTtld.png" alt="zZTtld.png"></a></p>
<p><strong>11. 统计SPJ表中使用P3零件的总数量，最小数量、最多数量、平均数量</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(QTY) <span class="keyword">AS</span> `总数量`,<span class="built_in">MIN</span>(QTY) <span class="keyword">AS</span> `最小数量`,<span class="built_in">MAX</span>(QTY) <span class="keyword">AS</span> `最大数量`,<span class="built_in">AVG</span>(QTY) <span class="keyword">AS</span> `平均数量`</span><br><span class="line"><span class="keyword">FROM</span> spj</span><br><span class="line"><span class="keyword">WHERE</span> PNO <span class="operator">=</span> <span class="string">&#x27;P3&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZTDk8"><img src="https://s1.ax1x.com/2022/11/16/zZTDk8.png" alt="zZTDk8.png"></a></p>
<p><strong>12.统计SPJ表中使用各种零件的总数量，最小数量、最多数量、平均数量</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> spj.SNO <span class="keyword">AS</span> `供应商代码`,<span class="built_in">SUM</span>(QTY) <span class="keyword">AS</span> `总数量`,<span class="built_in">MIN</span>(QTY) <span class="keyword">AS</span> `最小数量`,<span class="built_in">MAX</span>(QTY) <span class="keyword">AS</span> `最大数量`,<span class="built_in">AVG</span>(QTY) <span class="keyword">AS</span> `平均数量`</span><br><span class="line"><span class="keyword">FROM</span> spj</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> spj.SNO </span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZTg6s"><img src="https://s1.ax1x.com/2022/11/16/zZTg6s.png" alt="zZTg6s.png"></a></p>
<p><strong>13.统计SPJ表中各工程项目分别使用了几种零件</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> spj.`JNO`,<span class="built_in">COUNT</span>(PNO)</span><br><span class="line"><span class="keyword">FROM</span> spj</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> JNO;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZTh7V"><img src="https://s1.ax1x.com/2022/11/16/zZTh7V.png" alt="zZTh7V.png"></a></p>
<p><strong>14.统计SPJ表中各工程项目分别使用各种零件的总数量</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> spj.`JNO`,spj.`PNO`,<span class="built_in">SUM</span>(QTY)</span><br><span class="line"><span class="keyword">FROM</span> spj</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> JNO,PNO</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> JNO;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZTohF"><img src="https://s1.ax1x.com/2022/11/16/zZTohF.png" alt="zZTohF.png"></a></p>
<p><strong>15.查询SPJ表中使用零件种类超过两种的工程项目</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> spj.`JNO`,<span class="built_in">COUNT</span>(PNO)</span><br><span class="line"><span class="keyword">FROM</span> spj</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> JNO </span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(PNO) <span class="operator">&gt;</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZTxAK"><img src="https://s1.ax1x.com/2022/11/16/zZTxAK.png" alt="zZTxAK.png"></a></p>
<p><strong>16.查询SPJ表中各供应商分别给几个项目供应零件</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO ,<span class="built_in">COUNT</span>(JNO)</span><br><span class="line"><span class="keyword">FROM</span> spj</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> SNO;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZ799e"><img src="https://s1.ax1x.com/2022/11/16/zZ799e.png" alt="zZ799e.png"></a></p>
<p><strong>17.查询SPJ表中各供应商分别供应每种零件给几个项目，及供应每种零件的总数量</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO ,JNO,<span class="built_in">SUM</span>(QTY)</span><br><span class="line"><span class="keyword">FROM</span> spj</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> SNO,JNO;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZ7ZAf"><img src="https://s1.ax1x.com/2022/11/16/zZ7ZAf.png" alt="zZ7ZAf.png"></a></p>
<p><strong>18.查询SPJ表中所有供应商代码，供应商姓名，零件名，工程项目名，供应数量，且供应数量&gt;200的项目信息</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> spj.`SNO` <span class="keyword">AS</span> `供应商代码`,s.`SNAME` <span class="keyword">AS</span> `供应商名`</span><br><span class="line">,p.`PNAME` <span class="keyword">AS</span> `零件名`,j.`JNAME` <span class="keyword">AS</span> `项目名`</span><br><span class="line">,spj.`QTY` <span class="keyword">AS</span> 供应数量</span><br><span class="line"><span class="keyword">FROM</span> spj,s,p,j</span><br><span class="line"><span class="keyword">WHERE</span> spj.`SNO` <span class="operator">=</span> s.`SNO` <span class="keyword">AND</span> spj.`JNO` <span class="operator">=</span> j.`JNO`</span><br><span class="line"><span class="keyword">AND</span> spj.`PNO` <span class="operator">=</span> p.`PNO` <span class="keyword">AND</span> QTY <span class="operator">&gt;</span> <span class="number">200</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZ73Bq"><img src="https://s1.ax1x.com/2022/11/16/zZ73Bq.png" alt="zZ73Bq.png"></a></p>
<p><strong>19. 查询所有工程项目代码，工程项目名，所在城市，及使用的各零件代码，和数量</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">spj.`JNO` <span class="keyword">AS</span> `工程项目代码`</span><br><span class="line">,j.`JNAME` <span class="keyword">AS</span> `工程项目名`</span><br><span class="line">,j.`CITY` <span class="keyword">AS</span> `所在城市`</span><br><span class="line">,spj.`PNO` <span class="keyword">AS</span> `零件代码`</span><br><span class="line">,spj.`QTY` <span class="keyword">AS</span> `数量`</span><br><span class="line"><span class="keyword">FROM</span> spj,j</span><br><span class="line"><span class="keyword">WHERE</span> spj.`JNO` <span class="operator">=</span> j.`JNO`;</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZ7c4O"><img src="https://s1.ax1x.com/2022/11/16/zZ7c4O.png" alt="zZ7c4O.png"></a></p>
<p>==以下使用嵌套查询实现==</p>
<p><strong>20.查询S1供应商供应的工程项目代码，工程项目名，所在城市</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> j.`JNO`,j.`JNAME`,j.`CITY`</span><br><span class="line"><span class="keyword">FROM</span> j</span><br><span class="line"><span class="keyword">WHERE</span> j.`JNO` <span class="keyword">IN</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> spj.`JNO`</span><br><span class="line">	<span class="keyword">FROM</span> spj</span><br><span class="line">	<span class="keyword">WHERE</span> spj.`SNO` <span class="operator">=</span> <span class="string">&#x27;S1&#x27;</span>	</span><br><span class="line">	);</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZ75DI"><img src="https://s1.ax1x.com/2022/11/16/zZ75DI.png" alt="zZ75DI.png"></a></p>
<p><strong>21.查询使用蓝色零件的项目的工程项目代码，工程项目名，所在城市</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SELECT j.`JNO`,j.`JNAME`,j.`CITY`</span><br><span class="line">FROM j</span><br><span class="line">WHERE j.`JNO` IN(</span><br><span class="line">	SELECT j.`JNO`</span><br><span class="line">	FROM spj</span><br><span class="line">	WHERE spj.`PNO` IN(</span><br><span class="line">		SELECT p.`PNO`</span><br><span class="line">		FROM p</span><br><span class="line">		WHERE p.`COLOR` = <span class="string">&#x27;蓝&#x27;</span></span><br><span class="line">		</span><br><span class="line">		)</span><br><span class="line">	);</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZ7Xvj"><img src="https://s1.ax1x.com/2022/11/16/zZ7Xvj.png" alt="zZ7Xvj.png"></a></p>
<p><strong>22.查询SPJ表中使用数量超过200的零件代码，零件名，颜色</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> p.`PNO`,p.`PNAME`,p.`COLOR`</span><br><span class="line"><span class="keyword">FROM</span> p</span><br><span class="line"><span class="keyword">WHERE</span> p.`PNO` <span class="keyword">IN</span>(</span><br><span class="line">	<span class="keyword">SELECT</span> spj.`PNO`</span><br><span class="line">	<span class="keyword">FROM</span> spj</span><br><span class="line">	<span class="keyword">WHERE</span> spj.`QTY` <span class="operator">&gt;</span> <span class="number">200</span></span><br><span class="line">	</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZHpV0"><img src="https://s1.ax1x.com/2022/11/16/zZHpV0.png" alt="zZHpV0.png"></a></p>
<p><strong>23.查询和s1在同一个城市的供应商代码，供应商名称</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SELECT X.`SNO`,X.`SNAME`</span><br><span class="line">FROM s X</span><br><span class="line">WHERE X.`CITY` IN (</span><br><span class="line">	SELECT Y.`city`</span><br><span class="line">	FROM s Y</span><br><span class="line">	WHERE Y.`SNO` = <span class="string">&#x27;S1&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZHVM9"><img src="https://s1.ax1x.com/2022/11/16/zZHVM9.png" alt="zZHVM9.png"></a></p>
<p><strong>24.查询所有使用了p1零件项目代码，名称,城市（用exists查询实现）</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> j.`JNO`,j.`JNAME`,j.`CITY`</span><br><span class="line"><span class="keyword">FROM</span> j</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line">	<span class="keyword">SELECT</span> spj.`JNO`</span><br><span class="line">	<span class="keyword">FROM</span> spj</span><br><span class="line">	<span class="keyword">WHERE</span> j.`JNO` <span class="operator">=</span> spj.`JNO` <span class="keyword">AND</span> spj.`PNO` <span class="operator">=</span> <span class="string">&#x27;p1&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZHnVx"><img src="https://s1.ax1x.com/2022/11/16/zZHnVx.png" alt="zZHnVx.png"></a></p>
<p><strong>25.查询没有使用p1零件的项目代码，名称,城市(用not exists查询)</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> j.`JNO`,j.`JNAME`,j.`CITY`</span><br><span class="line"><span class="keyword">FROM</span> j</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line">	<span class="keyword">SELECT</span> spj.`JNO`</span><br><span class="line">	<span class="keyword">FROM</span> spj</span><br><span class="line">	<span class="keyword">WHERE</span> j.`JNO` <span class="operator">=</span> spj.`JNO` <span class="keyword">AND</span> spj.`PNO` <span class="operator">=</span> <span class="string">&#x27;p1&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/zZHlGD"><img src="https://s1.ax1x.com/2022/11/16/zZHlGD.png" alt="zZHlGD.png"></a></p>
]]></content>
  </entry>
  <entry>
    <title>监审网站的第二个编程阶段</title>
    <url>/2022/03/17/%E7%BC%96%E5%86%99%E7%9A%84%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5/</url>
    <content><![CDATA[<h1 id="了解了添加的原理-百年希尔过程"><a href="#了解了添加的原理-百年希尔过程" class="headerlink" title="了解了添加的原理 百年希尔过程"></a>了解了添加的原理 百年希尔过程</h1><h2 id="2022-3-3"><a href="#2022-3-3" class="headerlink" title="2022/3/3"></a>2022/3/3</h2><p>获得了后端接口和数据库 需要写一个注册功能</p>
<h2 id="2022-3-5"><a href="#2022-3-5" class="headerlink" title="2022/3/5"></a>2022/3/5</h2><p>编写完了登录和注册功能 还实现了信息的验证消息（虽然是我拿同学写好的）</p>
<h2 id="2022-3-6"><a href="#2022-3-6" class="headerlink" title="2022/3/6"></a>2022/3/6</h2><p>后端实现了对公办封面的信息收取和展示（数据库插入和查询）</p>
<p>信息的收取已经和前端进行了交互</p>
<h2 id="2022-3-9"><a href="#2022-3-9" class="headerlink" title="2022/3/9"></a>2022/3/9</h2><p>前后端交互 使用JSONarray</p>
<h2 id="2022-3-17"><a href="#2022-3-17" class="headerlink" title="2022/3/17"></a>2022/3/17</h2><p>简单来说 添加程序已经写完了，后续是跟前端交互。</p>
<p>本身计划我就写添加，但是情况有变，现在我还要写数据查询</p>
<p>数据的查询时对于我来说十分简单的，但是对于前端 会有点痛苦</p>
]]></content>
  </entry>
  <entry>
    <title>线性时间选择</title>
    <url>/2022/03/15/%E7%BA%BF%E6%80%A7%E6%97%B6%E9%97%B4%E9%80%89%E6%8B%A9/</url>
    <content><![CDATA[<h1 id="线性时间选择"><a href="#线性时间选择" class="headerlink" title="线性时间选择"></a>线性时间选择</h1><p>选择一个无序整数列中的第i小</p>
<h2 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h2><p>利用快速排序的思想 因为快速排序特点是 每一次排序一定能够把一个值给确定位置，因此这里如果我们给确定位置的值和我们要找的值一样 那么我们成功了</p>
<h3 id="RandomSelect"><a href="#RandomSelect" class="headerlink" title="RandomSelect"></a>RandomSelect</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomizedSelect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//正常来说 我们操作的都是整数数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> list[];</span><br><span class="line">    <span class="comment">//我们使用的是private私有对象 因此需要编写get/set方法来设置和获取值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] getList() &#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setList</span><span class="params">(<span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//快速排序的思路是将第一个作为端点 但是我们这里使用一个随机数来获得端点</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    参数表：</span></span><br><span class="line"><span class="comment">    start：列表要查询的开始</span></span><br><span class="line"><span class="comment">    end：列表查询的结束</span></span><br><span class="line"><span class="comment">    find：我们要查询的第几小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">RandomizedSelect</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end,<span class="keyword">int</span> find)</span></span>&#123;</span><br><span class="line">        <span class="comment">//编写程序结束程序</span></span><br><span class="line">        <span class="comment">//如果开始等于结束 我们没有什么课选的了 就选择到了合适的数据</span></span><br><span class="line">        <span class="keyword">if</span> (start==end)&#123;</span><br><span class="line">            <span class="comment">//这个就是我们找到的第几小的结果</span></span><br><span class="line">            <span class="keyword">return</span> list[start];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i = RandomQuickSort(start,end);</span><br><span class="line">        <span class="comment">//比较我们得到的这个第几小和我们的目标小又什么区别</span></span><br><span class="line">        <span class="comment">//如果i大 则说明我们要找的find在划分后的后边</span></span><br><span class="line">        <span class="comment">//则将我们的起始地址设置为i+1,结束还是end，此时我们要找find-i小</span></span><br><span class="line">        <span class="comment">//注意 我们这里的j 因为 我们的start 不一定就是从零开始的 因此 我们选择后的第几小 就需要用find-j</span></span><br><span class="line">        <span class="keyword">int</span> j = i-start+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (find&lt;=j)&#123;</span><br><span class="line">            <span class="keyword">return</span> RandomizedSelect(start,i,find);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> RandomizedSelect(i+<span class="number">1</span>,end,find-j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//这个程序是对我们需要的list的一段进行一次快排 二我们快排的结果是随机的 通过random来获得我们的基准元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">RandomQuickSort</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">        <span class="comment">//我们这里只需要一个开始和一个结束</span></span><br><span class="line">        <span class="comment">//获得一个随机数 在start和end之间</span></span><br><span class="line">        <span class="comment">//我们这里的随机数要设置好</span></span><br><span class="line">        <span class="keyword">int</span> n = (<span class="keyword">int</span>)(Math.random()*<span class="number">100</span>)%(end-start)+start;</span><br><span class="line">        System.out.println(<span class="string">&quot;这里我们将第&quot;</span>+n+<span class="string">&quot;个元素作为基准元素&quot;</span>);</span><br><span class="line">        <span class="comment">//将我们的基准元素存储起来</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> t = list[n];</span><br><span class="line">        list[n] = list[start];</span><br><span class="line">        list[start] = t;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">        <span class="comment">//我们准备进行快排</span></span><br><span class="line">        i = start;</span><br><span class="line">        j = end;</span><br><span class="line">        <span class="comment">//快速排序的思想就是把比基准元素小的都放在左边</span></span><br><span class="line">        <span class="comment">//把比基准元素大的都放在右边 然后把基准元素归位</span></span><br><span class="line">        <span class="keyword">while</span> (i != j)&#123;</span><br><span class="line">            <span class="comment">//先让右哨兵动 找到合适数据后才停止</span></span><br><span class="line">            <span class="keyword">while</span> (list[j]&gt;=t &amp;&amp; j&gt;i)&#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//说明右哨兵已经选择好了 使左哨兵开始动</span></span><br><span class="line">            <span class="keyword">while</span> (list[i]&lt;=t &amp;&amp; i&lt;j)&#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//两个哨兵都找到了 交换数据</span></span><br><span class="line">            <span class="keyword">if</span> (i&lt;j) &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = list[i];</span><br><span class="line">                list[i] = list[j];</span><br><span class="line">                list[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将我们的基准元素放到合适的地方</span></span><br><span class="line">        list[start] = list[i];</span><br><span class="line">        list[i] = t;</span><br><span class="line">        <span class="comment">//我们找到的i就是我们这一次找到的目的元素所在的位置(即第几小)</span></span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>实现类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.passage2.RandomizedSelect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomSelectTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        RandomizedSelect select = <span class="keyword">new</span> RandomizedSelect();</span><br><span class="line">        <span class="comment">//选择我们的一个list</span></span><br><span class="line">        <span class="keyword">int</span>[] list = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">13</span>,<span class="number">45</span>,<span class="number">85</span>,<span class="number">63</span>,<span class="number">21</span>,<span class="number">54</span>,<span class="number">96</span>,<span class="number">35</span>,<span class="number">74</span>,<span class="number">84</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;我们的无序数组的长度&quot;</span>+list.length);</span><br><span class="line">        select.setList(list);</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入我们要选择第几小:&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> find = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> i = select.RandomizedSelect(<span class="number">0</span>, list.length - <span class="number">1</span>, find);</span><br><span class="line">        System.out.println(<span class="string">&quot;我们找到的数据&quot;</span>+i);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;====================================&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i1 : list) &#123;</span><br><span class="line">            System.out.print(i1+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;====================================&quot;</span>);</span><br><span class="line">        <span class="comment">//这里设置一个简单排序来检测结果的正确性</span></span><br><span class="line">        <span class="keyword">int</span>[] query = query(list);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i1 : query) &#123;</span><br><span class="line">            System.out.print(i1+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;理论上我们的目标值&quot;</span>+list[find-<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下边我们写一个冒泡排序 把我们的list进行一个排序 看看是否我们的答案和我们的找到的数据相同</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] query(<span class="keyword">int</span>[] list)&#123;</span><br><span class="line">        <span class="comment">//冒泡排序</span></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="comment">//冒泡排序的思想是 每次找到一个最小的放在应该最小的位置</span></span><br><span class="line">        <span class="keyword">int</span> min;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;list.length;i++)&#123;</span><br><span class="line">            min = i;</span><br><span class="line">            <span class="keyword">for</span> (j=i;j&lt;list.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (list[j] &lt; list[min])&#123;</span><br><span class="line">                    <span class="comment">//记录找到的最小的数的下标</span></span><br><span class="line">                    min = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            if (i!=min) &#123;</span></span><br><span class="line">                temp = list[min];</span><br><span class="line">                list[min] = list[i];</span><br><span class="line">                list[i] = temp;</span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这里我们还加装了一个一般排序来检测是否我们实现了</p>
<p>写这个算法真考研逻辑思维能力</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/%E7%BB%84%E5%90%88%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="组合查询"><a href="#组合查询" class="headerlink" title="组合查询"></a>组合查询</h1><p>多数的SQL查询都值包含从一个或多个表中返回数据的单条SELECT语句，MYSQL也允许执行多个查询，并将结果单一返回。这些组合查询通常称为并或符合查询</p>
<p><strong>以下两种情况需要用到组合查询</strong></p>
<ul>
<li>在单个查询中从不同的表返回类似结构的数据；</li>
<li>对单个表执行多个查询，按单个查询返回数据。</li>
</ul>
<p><strong>组合查询和多个WHERE条件</strong>：组合相同表的两个查询完成的工作与具有多个WHERE子句条件的单条查询完成的工作相同。</p>
<h2 id="创建组合查询"><a href="#创建组合查询" class="headerlink" title="创建组合查询"></a>创建组合查询</h2><p>可用UNION操作符来组合数条SQL查询。利用<strong>UNION</strong>。可以给出多条SELECT语句，将他们的结果组合成的那个结果集。</p>
<h3 id="使用UNION"><a href="#使用UNION" class="headerlink" title="使用UNION"></a>使用UNION</h3><p><strong>UNION的使用方法</strong>：所需做得只是给出每条SELECT语句，在各条语句之间放上关键字UNION</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一条SELECT语句</span><br><span class="line">UNION</span><br><span class="line">第二天SELECT语句;</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：这样使用组合查询，返回的是两条SELECT语句可以返回的数据对的并集。</p>
<h3 id="UNION规则"><a href="#UNION规则" class="headerlink" title="UNION规则"></a>UNION规则</h3><p><strong>UNION的使用规则</strong>：</p>
<ul>
<li>UNION必须由两条或两条以上的SELECT语句组成，语句之间用关联词UNION分隔</li>
<li>UNION中的每个查询必须包含相同的列、表达式或聚集函数</li>
<li>列数据类型必须兼容：类型不必完全相同，但必须是DBMS可以隐含地转换的类型</li>
</ul>
<h3 id="包含或取消重复的行"><a href="#包含或取消重复的行" class="headerlink" title="包含或取消重复的行"></a>包含或取消重复的行</h3><p>UNION从查询结果集中自动去除重复的行（换句话说，他的行为与单条SELECT语句中使用多个WHERE子句条件一样）。</p>
<p>如果想要返回所有的数据，使用UNION ALL而不是UNION</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一条SELECT语句</span><br><span class="line">UNION ALL</span><br><span class="line">第二条SELECT语句;</span><br></pre></td></tr></table></figure>

<h3 id="对组合查询结果排序"><a href="#对组合查询结果排序" class="headerlink" title="对组合查询结果排序"></a>对组合查询结果排序</h3><p>在使用UNION组合查询时，只能使用一条ORDER BY子句，它必须出现在最后一条SELECT语句之后。对于结果集，不存在用一种方式排序一部分，而有用另一种方式排序另一部分的情况，因此不允许使用多条ORDER BY子句。</p>
<p><strong>如果要排序，在最后一个SELECT子句中使用</strong></p>
]]></content>
  </entry>
  <entry>
    <title>网页调用摄像头技术</title>
    <url>/2022/10/27/%E7%BD%91%E9%A1%B5%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<h1 id="网页调用摄像头技术"><a href="#网页调用摄像头技术" class="headerlink" title="网页调用摄像头技术"></a>网页调用摄像头技术</h1><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>[(182条消息) Html-网页调用摄像头并拍照效果_小狗蛋ing的博客-CSDN博客_网页调用摄像头](<a href="https://blog.csdn.net/As_thin/article/details/118313591?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=html">https://blog.csdn.net/As_thin/article/details/118313591?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=html</a> 调用摄像头拍照&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<del>all</del>sobaiduweb~default-0-118313591.142^v62^pc_search_tree,201^v3^control_2,213^v1^t3_esquery_v2&amp;spm=1018.2226.3001.4187)</p>
<p><a href="https://blog.csdn.net/qq_42393859/article/details/109472060">(182条消息) 前端网页打开摄像头并将图像传给后端_blog_1103的博客-CSDN博客</a></p>
<p><strong>别人的代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">  &lt;title&gt;网页调取摄像头&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;https://code.jquery.com/jquery-3.3.1.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">        #capture&#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            right: 190px;</span><br><span class="line">            bottom: -40px;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        #video&#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            right: <span class="number">0</span>;</span><br><span class="line">            top: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        #img&#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: <span class="number">0</span>;</span><br><span class="line">            top: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        .auto&#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: <span class="number">50</span>%;</span><br><span class="line">            top: <span class="number">50</span>%;</span><br><span class="line">            height: 320px;</span><br><span class="line">            margin-top: -160px;</span><br><span class="line">        &#125;</span><br><span class="line">        #sure&#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 210px;</span><br><span class="line">            bottom: -40px;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        button&#123;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            margin: <span class="number">0</span> auto;</span><br><span class="line">            border: 1px solid #f0f0f0;</span><br><span class="line">            background: #5CACEE;</span><br><span class="line">            color: #FFF;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 36px;</span><br><span class="line">            line-height: 36px;</span><br><span class="line">            border-radius: 8px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            <span class="comment">/*禁止选择*/</span></span><br><span class="line">            -webkit-touch-callout: none; <span class="comment">/* iOS Safari */</span></span><br><span class="line">            -webkit-user-select: none; <span class="comment">/* Chrome/Safari/Opera */</span></span><br><span class="line">            -khtml-user-select: none; <span class="comment">/* Konqueror */</span></span><br><span class="line">            -moz-user-select: none; <span class="comment">/* Firefox */</span></span><br><span class="line">            -ms-user-select: none; <span class="comment">/* Internet Explorer/Edge */</span></span><br><span class="line">            user-select: none; <span class="comment">/* Non-prefixed version, currently not supported by any browser */</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;auto&quot;</span>&gt;</span><br><span class="line">            &lt;video id=<span class="string">&quot;video&quot;</span> width=<span class="string">&quot;480&quot;</span> height=<span class="string">&quot;320&quot;</span> autoplay&gt;&lt;/video&gt;</span><br><span class="line">            &lt;canvas id=<span class="string">&quot;canvas&quot;</span> width=<span class="string">&quot;480&quot;</span> height=<span class="string">&quot;320&quot;</span> style=<span class="string">&quot;display: none;&quot;</span>&gt;&lt;/canvas&gt;</span><br><span class="line">            &lt;img src=<span class="string">&quot;./body_default.png&quot;</span> id=<span class="string">&quot;img&quot;</span> width=<span class="string">&quot;480&quot;</span> height=<span class="string">&quot;320&quot;</span> style=<span class="string">&quot;margin-left: 20px;&quot;</span>&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;button id=<span class="string">&quot;capture&quot;</span> title=<span class="string">&quot;点击进行拍照&quot;</span>&gt;拍照&lt;/button&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;button id=<span class="string">&quot;sure&quot;</span> title=<span class="string">&quot;是否用这张图片进行验证&quot;</span>&gt;确认&lt;/button&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> file ,stream;</span><br><span class="line">    <span class="comment">//访问用户媒体设备的兼容方法</span></span><br><span class="line">    <span class="function">function <span class="title">getUserMedia</span><span class="params">(constraints, success, error)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (navigator.mediaDevices.getUserMedia) &#123;</span><br><span class="line">        <span class="comment">//最新的标准API</span></span><br><span class="line">        navigator.mediaDevices.getUserMedia(constraints).then(success).<span class="keyword">catch</span>(error);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.webkitGetUserMedia) &#123;</span><br><span class="line">        <span class="comment">//webkit核心浏览器</span></span><br><span class="line">        navigator.webkitGetUserMedia(constraints,success, error)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.mozGetUserMedia) &#123;</span><br><span class="line">        <span class="comment">//firfox浏览器</span></span><br><span class="line">        navigator.mozGetUserMedia(constraints, success, error);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.getUserMedia) &#123;</span><br><span class="line">        <span class="comment">//旧版API</span></span><br><span class="line">        navigator.getUserMedia(constraints, success, error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    let video = document.getElementById(<span class="string">&#x27;video&#x27;</span>);</span><br><span class="line">    let canvas = document.getElementById(<span class="string">&#x27;canvas&#x27;</span>);</span><br><span class="line">    let context = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="function">function <span class="title">success</span><span class="params">(stream)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//兼容webkit核心浏览器</span></span><br><span class="line">      let CompatibleURL = window.URL || window.webkitURL;</span><br><span class="line">      <span class="comment">//将视频流设置为video元素的源</span></span><br><span class="line">      console.log(stream);</span><br><span class="line">      stream = stream;</span><br><span class="line">      <span class="comment">//video.src = CompatibleURL.createObjectURL(stream);</span></span><br><span class="line">      video.srcObject = stream;</span><br><span class="line">      video.play();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function">function <span class="title">error</span><span class="params">(error)</span> </span>&#123;</span><br><span class="line">      console.log(`访问用户媒体设备失败$&#123;error.name&#125;, $&#123;error.message&#125;`);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia) &#123;</span><br><span class="line">      <span class="comment">//调用用户媒体设备, 访问摄像头</span></span><br><span class="line">      getUserMedia(&#123;video : &#123;width: <span class="number">480</span>, height: <span class="number">320</span>&#125;&#125;, success, error);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      alert(<span class="string">&#x27;不支持访问用户媒体&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">// base64转文件</span></span><br><span class="line"></span><br><span class="line">    document.getElementById(<span class="string">&#x27;capture&#x27;</span>).addEventListener(<span class="string">&#x27;click&#x27;</span>, function () &#123;</span><br><span class="line">      context.drawImage(video, <span class="number">0</span>, <span class="number">0</span>, <span class="number">480</span>, <span class="number">320</span>);      </span><br><span class="line">        <span class="comment">// 获取图片base64链接</span></span><br><span class="line">        <span class="keyword">var</span> image = canvas.toDataURL(<span class="string">&#x27;image/png&#x27;</span>);</span><br><span class="line">        <span class="comment">// 定义一个img</span></span><br><span class="line">        <span class="keyword">var</span> img = document.getElementById(<span class="string">&quot;img&quot;</span>);</span><br><span class="line">        <span class="comment">//设置属性和src</span></span><br><span class="line">        <span class="comment">//img.id = &quot;imgBoxxx&quot;;</span></span><br><span class="line">        img.src = image;</span><br><span class="line">        <span class="comment">//将图片添加到页面中</span></span><br><span class="line">        <span class="comment">//document.body.appendChild(img);</span></span><br><span class="line">        <span class="function">function <span class="title">dataURLtoFile</span><span class="params">(dataurl, filename)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> arr = dataurl.split(<span class="string">&#x27;,&#x27;</span>), mime = arr[<span class="number">0</span>].match(/:(.*?);/)[<span class="number">1</span>],</span><br><span class="line">                bstr = atob(arr[<span class="number">1</span>]), n = bstr.length, u8arr = <span class="keyword">new</span> Uint8Array(n);</span><br><span class="line">            <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">                u8arr[n] = bstr.charCodeAt(n);</span><br><span class="line">            &#125;</span><br><span class="line">            file = <span class="keyword">new</span> File([u8arr], filename, &#123;type: mime&#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> File([u8arr], filename, &#123;type: mime&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(dataURLtoFile(image, <span class="string">&#x27;aa.png&#x27;</span>));</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    document.getElementById(<span class="string">&#x27;sure&#x27;</span>).addEventListener(<span class="string">&#x27;click&#x27;</span>, function () &#123;</span><br><span class="line">        <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">        formData.append(<span class="string">&quot;file&quot;</span>,file);</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">&quot;POST&quot;</span>, <span class="comment">// 数据提交类型</span></span><br><span class="line">            url: <span class="string">&quot;***********&quot;</span>, <span class="comment">// 发送地址</span></span><br><span class="line">            data: formData, <span class="comment">//发送数据</span></span><br><span class="line">            async: <span class="keyword">true</span>, <span class="comment">// 是否异步</span></span><br><span class="line">            processData: <span class="keyword">false</span>, <span class="comment">//processData 默认为false，当设置为true的时候,jquery ajax 提交的时候不会序列化 data，而是直接使用data</span></span><br><span class="line">            contentType: <span class="keyword">false</span>,</span><br><span class="line">            success:function(data)&#123;</span><br><span class="line">                <span class="keyword">if</span>(data.code === <span class="number">200</span>)&#123;</span><br><span class="line">                    console.log(`$&#123;data.message&#125;`);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    console.log(`$&#123;data.message&#125;`);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error:function(e)&#123;</span><br><span class="line">                self.$message.warning(`$&#123;e&#125;`);</span><br><span class="line">                <span class="comment">//console.log(&quot;不成功&quot;+e);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        stream.getTracks()[<span class="number">0</span>].stop();<span class="comment">//结束关闭流</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h2><p>进过各种尝试，终于，写好了前端拍照端接收</p>
<p><strong>结果</strong></p>
<p><img src="https://pic1.imgdb.cn/item/635a515416f2c2beb109b304.png"></p>
<p><strong>前端代码</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>网页调取摄像头<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.3.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#capture</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">190px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">bottom</span>: -<span class="number">40px</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#video</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#img</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.auto</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">320px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: -<span class="number">160px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#sure</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">210px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">bottom</span>: -<span class="number">40px</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">button</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#5CACEE</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="comment">/*禁止选择*/</span></span></span><br><span class="line"><span class="css">            -webkit-touch-callout: none; <span class="comment">/* iOS Safari */</span></span></span><br><span class="line"><span class="css">            -webkit-user-select: none; <span class="comment">/* Chrome/Safari/Opera */</span></span></span><br><span class="line"><span class="css">            -khtml-user-select: none; <span class="comment">/* Konqueror */</span></span></span><br><span class="line"><span class="css">            -moz-user-select: none; <span class="comment">/* Firefox */</span></span></span><br><span class="line"><span class="css">            -ms-user-select: none; <span class="comment">/* Internet Explorer/Edge */</span></span></span><br><span class="line"><span class="css">            user-select: none; <span class="comment">/* Non-prefixed version, currently not supported by any browser */</span></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;auto&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;video&quot;</span> <span class="attr">width</span>=<span class="string">&quot;480&quot;</span> <span class="attr">height</span>=<span class="string">&quot;320&quot;</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span> <span class="attr">width</span>=<span class="string">&quot;480&quot;</span> <span class="attr">height</span>=<span class="string">&quot;320&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./body_default.png&quot;</span> <span class="attr">id</span>=<span class="string">&quot;img&quot;</span> <span class="attr">width</span>=<span class="string">&quot;480&quot;</span> <span class="attr">height</span>=<span class="string">&quot;320&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 20px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;capture&quot;</span> <span class="attr">title</span>=<span class="string">&quot;点击进行拍照&quot;</span>&gt;</span>拍照<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;sure&quot;</span> <span class="attr">title</span>=<span class="string">&quot;是否用这张图片进行验证&quot;</span>&gt;</span>确认<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> file ,stream;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//访问用户媒体设备的兼容方法</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">getUserMedia</span>(<span class="params">constraints, success, error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (navigator.mediaDevices.getUserMedia) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//最新的标准API</span></span></span><br><span class="line"><span class="javascript">        navigator.mediaDevices.getUserMedia(constraints).then(success).catch(error);</span></span><br><span class="line"><span class="javascript">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.webkitGetUserMedia) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//webkit核心浏览器</span></span></span><br><span class="line"><span class="javascript">        navigator.webkitGetUserMedia(constraints,success, error)</span></span><br><span class="line"><span class="javascript">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.mozGetUserMedia) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//firfox浏览器</span></span></span><br><span class="line"><span class="javascript">        navigator.mozGetUserMedia(constraints, success, error);</span></span><br><span class="line"><span class="javascript">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.getUserMedia) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//旧版API</span></span></span><br><span class="line"><span class="javascript">        navigator.getUserMedia(constraints, success, error);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> video = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;video&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> context = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">success</span>(<span class="params">stream</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//兼容webkit核心浏览器</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> CompatibleURL = <span class="built_in">window</span>.URL || <span class="built_in">window</span>.webkitURL;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//将视频流设置为video元素的源</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(stream);</span></span><br><span class="line"><span class="javascript">      stream = stream;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//video.src = CompatibleURL.createObjectURL(stream);</span></span></span><br><span class="line"><span class="javascript">      video.srcObject = stream;</span></span><br><span class="line"><span class="javascript">      video.play();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">error</span>(<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">`访问用户媒体设备失败<span class="subst">$&#123;error.name&#125;</span>, <span class="subst">$&#123;error.message&#125;</span>`</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//调用用户媒体设备, 访问摄像头</span></span></span><br><span class="line"><span class="javascript">      getUserMedia(&#123;<span class="attr">video</span> : &#123;<span class="attr">width</span>: <span class="number">480</span>, <span class="attr">height</span>: <span class="number">320</span>&#125;&#125;, success, error);</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">      alert(<span class="string">&#x27;不支持访问用户媒体&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// base64转文件</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;capture&#x27;</span>).addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      context.drawImage(video, <span class="number">0</span>, <span class="number">0</span>, <span class="number">480</span>, <span class="number">320</span>);      </span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取图片base64链接</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> image = canvas.toDataURL(<span class="string">&#x27;image/png&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定义一个img</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">&quot;img&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//设置属性和src</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//img.id = &quot;imgBoxxx&quot;;</span></span></span><br><span class="line"><span class="javascript">        img.src = image;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//将图片添加到页面中</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//document.body.appendChild(img);</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">dataURLtoFile</span>(<span class="params">dataurl, filename</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> arr = dataurl.split(<span class="string">&#x27;,&#x27;</span>), mime = arr[<span class="number">0</span>].match(<span class="regexp">/:(.*?);/</span>)[<span class="number">1</span>],</span></span><br><span class="line"><span class="javascript">                bstr = atob(arr[<span class="number">1</span>]), n = bstr.length, u8arr = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(n);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">while</span> (n--) &#123;</span></span><br><span class="line"><span class="javascript">                u8arr[n] = bstr.charCodeAt(n);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            file = <span class="keyword">new</span> File([u8arr], filename, &#123;<span class="attr">type</span>: mime&#125;);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(file)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="keyword">new</span> File([u8arr], filename, &#123;<span class="attr">type</span>: mime&#125;);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(dataURLtoFile(image, <span class="string">&quot;aa.png&quot;</span>));</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;sure&quot;</span>).addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(file)</span></span><br><span class="line"><span class="javascript">        formData.append(<span class="string">&quot;file&quot;</span>,file);</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">type</span>: <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="comment">//后端需要调用的地址</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">url</span>:<span class="string">&quot;http://localhost:8089/plotform/areFace.do&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>:formData, <span class="comment">//发送数据</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">async</span>: <span class="literal">true</span>, <span class="comment">// 是否异步</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">processData</span>: <span class="literal">false</span>, <span class="comment">//processData 默认为false，当设置为true的时候,jquery ajax 提交的时候不会序列化 data，而是直接使用data</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">contentType</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(data.code === <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;data.message&#125;</span>`</span>);</span></span><br><span class="line"><span class="javascript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;data.message&#125;</span>`</span>);</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">error</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                self.$message.warning(<span class="string">`<span class="subst">$&#123;e&#125;</span>`</span>);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//console.log(&quot;不成功&quot;+e);</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">        stream.getTracks()[<span class="number">0</span>].stop();<span class="comment">//结束关闭流</span></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>后端代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartHttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">areFaceController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/areFace.do&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">areFaceTest</span><span class="params">(HttpServletRequest request,HttpServletRequest response,HttpSession session)</span> </span>&#123;</span><br><span class="line">        MultipartHttpServletRequest multipartRequest=(MultipartHttpServletRequest) request;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;sxt&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>注意，这里需要在springmvc.xml中添加一个bean配置否则会出错</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--在SpringMvc.xml文件中增加Spring文件上传的解析器--&gt;</span><br><span class="line">   &lt;bean id=&quot;multipartResolver&quot;</span><br><span class="line">         class=&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;&gt;</span><br><span class="line">       &lt;property name=&quot;maxUploadSize&quot; value=&quot;10485760&quot; /&gt;</span><br><span class="line">       &lt;!-- resolveLazily属性启用是为了推迟文件解析，以便在Action 中捕获文件大小异常 --&gt;</span><br><span class="line">       &lt;property name=&quot;resolveLazily&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">       &lt;property name=&quot;defaultEncoding&quot; value=&quot;UTF-8&quot; /&gt;</span><br><span class="line">   &lt;/bean&gt;</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title>艺术上推荐系统编写过程（第一版）</title>
    <url>/2022/06/08/%E8%89%BA%E6%9C%AF%E7%94%9F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%BC%96%E5%86%99%E8%BF%87%E7%A8%8B%E7%AC%AC%E4%B8%80%E7%89%88/</url>
    <content><![CDATA[<h1 id="2022-5-21"><a href="#2022-5-21" class="headerlink" title="2022/5/21"></a>2022/5/21</h1><p><strong>编写工作开始</strong></p>
<ul>
<li>熟悉艺术生的填报规则</li>
<li>搭建一个艺术生专业课优先的数据库</li>
<li>将程序的后端搭建起来</li>
</ul>
<p><strong>问题所在：</strong></p>
<p>经过上网查询，并没有发现网络上有类似的对艺术生的高考推荐程序，因为，艺术生的报考模式很奇怪，报考规则不一样，也没有一个全省的排名，社会上的公司都没在做这方面的工作，我对是否能写出这个程序表示担心。</p>
<h2 id="2022-5-22"><a href="#2022-5-22" class="headerlink" title="2022/5/22"></a>2022/5/22</h2><p><strong>重新缕了一下思路 后端程序已经搭建完成 程序已经写好了 问题在于数据库的导入</strong></p>
<p><strong>数据库出问题</strong></p>
<ul>
<li>数据库发生改变时要求数据类型符合数据库中的要求的数据类型 否则就会回滚 返回之前的数据</li>
<li>将xlsx转化成csv能够实现数据的快速导入</li>
<li>csv中不存在只有整数部分的小数 如（65.0）在导入到数据库时会被认为是整数 (65)</li>
</ul>
<p>美术推荐已经写好 工作重点在于数据库中数据的处理</p>
<p><strong>推荐过程</strong></p>
<ul>
<li>首先计算这人是属于那个成绩段的</li>
<li>到该程序段通过比例求得他的分数 与数据库中的分数线进行比较</li>
<li>找到所有的符合要求的数据 返回给前端</li>
</ul>
<h2 id="2022年5月31日"><a href="#2022年5月31日" class="headerlink" title="2022年5月31日"></a>2022年5月31日</h2><p>已经写好了一版，由于太简单，老师不满意 继续更改</p>
<hr>
<p><strong>第一版的输入页面</strong></p>
<p> <img src="https://i.bmp.ovh/imgs/2022/05/31/9bdae0f0a7199e97.png"> </p>
<p><strong>第一版的展示页面</strong></p>
<p> <img src="https://i.bmp.ovh/imgs/2022/05/31/76010257e6ab012d.png"> </p>
<p><strong>重新分析了需求</strong></p>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/31/c433da447721bbdb.jpg"></p>
<p><strong>重新建了数据库</strong></p>
<p>  <img src="https://s3.bmp.ovh/imgs/2022/05/31/97ae82e068d021ae.jpg">  </p>
<h2 id="2022-6-4"><a href="#2022-6-4" class="headerlink" title="2022/6/4"></a>2022/6/4</h2><p>导入学校数据<img src="https://pic.imgdb.cn/item/629f800009475431293d238b.jpg">学校推荐程序已经写好了 </p>
<p>由于没有使用ajax 不能实现局部刷新 是一个跳转过程</p>
<p>前端样式还是需要改</p>
<p>学校的排名太无序，但是我没有别的方法 只能让他无序吧</p>
<h2 id="2022-6-5"><a href="#2022-6-5" class="headerlink" title="2022/6/5"></a>2022/6/5</h2><p><img src="https://pic.imgdb.cn/item/629f7fb809475431293cc214.jpg"></p>
<p>学院细节已经能写了</p>
<p>继续编写程序 </p>
<ul>
<li>专业 （可以上的专业/所有的专业）</li>
<li>录取分数线（需要用ajax）</li>
<li>招生计划（要当年的招生计划）（每年都需要导入数据）</li>
</ul>
<h1 id="2022-6-6"><a href="#2022-6-6" class="headerlink" title="2022/6/6"></a>2022/6/6</h1><p>专业信息已经录入了</p>
<p><img src="https://pic.imgdb.cn/item/629f7f9a09475431293c9bbd.jpg"></p>
<p><img src="https://pic.imgdb.cn/item/629f7f5a09475431293c572b.jpg"></p>
<p>程序最后写好了</p>
<p>问题来自：</p>
<ul>
<li>前端给数据块设置的是默认不展示</li>
<li>前端安排的程序块分布问题 分的太开了</li>
</ul>
<p>明天计划 把录取分数线写了 不过需要前端进行一点修改了 <img src="https://i.bmp.ovh/imgs/2022/06/08/867ea6a610fdec29.png"> </p>
<p>这个界面不太好看而且明显需要使用ajax 看看是否有平替的方法</p>
<h1 id="2022-6-7"><a href="#2022-6-7" class="headerlink" title="2022/6/7"></a>2022/6/7</h1><p>今天把招生计划</p>
<p> <img src="https://i.bmp.ovh/imgs/2022/06/08/3472692fbdd5faf7.png"> </p>
<p>只剩下一个页面了“录取分数线”</p>
<p>但是那个录取分数线需要使用ajax，就交给前端的同学去写，我先不动</p>
<h1 id="2022-6-8"><a href="#2022-6-8" class="headerlink" title="2022/6/8"></a>2022/6/8</h1><p>ajax就是个屑 不用局部刷新 加个from表单照样进行查询 <img src="https://i.bmp.ovh/imgs/2022/06/08/22772a983e0cde8b.png"> </p>
<p> <img src="https://i.bmp.ovh/imgs/2022/06/08/1616e6d0dc7bab6f.png"> </p>
<p>除了重新跳到这个页面会是null以外 根本没有问题</p>
<p>真不错</p>
<p>程序写完了</p>
<p><img src="https://i.bmp.ovh/imgs/2022/06/08/b2d9650ab7a43a22.png"> </p>
<p>招生计划前端加了个样式 真不错</p>
<p>2022年6月8日 0点30分 程序写完了（第一阶段写完了）</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/%E8%81%94%E7%BB%93%E8%A1%A8/</url>
    <content><![CDATA[<h1 id="联结表"><a href="#联结表" class="headerlink" title="联结表"></a>联结表</h1><h2 id="联结"><a href="#联结" class="headerlink" title="联结"></a>联结</h2><p>SQL最强大的功能之一是联结。</p>
<p>使用联结可以将不同表中的列联结在一起</p>
<p>这里的联结只是一种表达形式，没有真正的形成物理意义上的联结后的数据库</p>
<p><strong>为什么要使用联结库</strong></p>
<p>因为一般情况下，数据库中会出现相同的数据。</p>
<p><strong>外键</strong>：外键为某个表中的一列，它包含领一个表的主键值，定义了两个表之间的关系</p>
<p>使用外键进行小数据库关联，而不是使用一个统一的大的数据库的好处</p>
<ul>
<li>数据不重复，不会浪费空间和时间</li>
<li>更新数据时，只需要更改需要涉及的数据库中的数据</li>
<li>数据没有重复的，处理数据更加简单</li>
<li>关系数据库的可伸缩性远比非关系数据库要好</li>
</ul>
<p><strong>可伸缩性</strong>：能够适应不断增加的工作量而不失败。涉及良好的数据库或应用程序称之为可伸缩性好</p>
<h2 id="为什么要使用联结"><a href="#为什么要使用联结" class="headerlink" title="为什么要使用联结"></a>为什么要使用联结</h2><p>联结是一种机制，用来在一条SELECT语句中关联表，因此称之为联结。可以联结多个表返回一组输出，联结在运行时关联表中正确的行。</p>
<p><strong>重要的是</strong>：联结不是物理实体，联结有MySQL根据需要创建，它存在于子查询的执行当中。</p>
<h2 id="创建联结"><a href="#创建联结" class="headerlink" title="创建联结"></a>创建联结</h2><p>创建联结十分容易（相对于使用嵌套子查询来说）</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 表格1中的列名,表格2中的列名,表格1中的列名,.....</span><br><span class="line">FROM 表格1,表格2</span><br><span class="line">SELECT 限制条件</span><br><span class="line">ORDER BY 列名(可以属于表格1，也可以属于表格2)</span><br></pre></td></tr></table></figure>

<p>我们需要注意在限制条件需要用到列名时应该使用<strong>完全限定列名</strong>，因为可能不同表中有列名相同的，此时系统不知道到底是哪个。</p>
<p><strong>完全限定列名</strong>：在引用的列可能出现二义性是，必须使用完全限定列名（用一个点分隔表名和列名）</p>
<h2 id="WHERE子句的重要性"><a href="#WHERE子句的重要性" class="headerlink" title="WHERE子句的重要性"></a>WHERE子句的重要性</h2><p>在对两个表格进行联结时，必须要注意WHERE子句的使用。如果不适用WHERE子句对数据进行过滤，第一个表中的每一行将与第二个表中的每一行进行配对，不管他们逻辑上是否可以配在一起。</p>
<p><strong>笛卡尔积</strong>：由没有联结条件的表关系返回的结果为笛卡尔积。检索出的行的数目将是第一个表中的行数乘以第二个表中的行数</p>
<h2 id="内部联结"><a href="#内部联结" class="headerlink" title="内部联结"></a>内部联结</h2><p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 表格1中的列名,表格2中的列名,表格1中的列名,....</span><br><span class="line">FROM 表格名1 INNER JOIN 表格名2</span><br><span class="line">ON 限制条件;</span><br></pre></td></tr></table></figure>

<p>在使用这种语法时，联结条件用特定的ON子句而不是WHERE子句给出。传递给ON的实际条件与传递给WHERE的相同。</p>
<h2 id="联结多个表"><a href="#联结多个表" class="headerlink" title="联结多个表"></a>联结多个表</h2><p>SQL对于一条SELECT语句中可以联结的表的数目没有限制。</p>
<p>有一点要注意，在SELECT中出现的列所属的表格名一定要在FROM子句中出现</p>
<p><strong>性能考虑</strong>：联结的表越多，性能下降月厉害，因此在使用联结时要考虑性能。</p>
]]></content>
  </entry>
  <entry>
    <title>坚定地同志——乔治布莱克</title>
    <url>/2021/12/25/%E8%A7%82%E5%BD%B1%E4%BD%93%E9%AA%8Cdemo1/</url>
    <content><![CDATA[<h2 id="硬核狠人乔治布莱克"><a href="#硬核狠人乔治布莱克" class="headerlink" title="硬核狠人乔治布莱克"></a>硬核狠人乔治布莱克</h2><p>2021/12/25日 今天观看了小约翰可汗的<a href="https://www.bilibili.com/video/BV16F411B744?from=search&seid=9917106160421699368&spm_id_from=333.337.0.0">硬核狠人第21期</a> </p>
<h3 id="感动点"><a href="#感动点" class="headerlink" title="感动点"></a>感动点</h3><p>或许，我们真正喜爱的是那个精神，而不是那个国家。</p>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/72ab02233f5a2c70.jpg" alt="也许苏联的路走错了"></p>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/7208b2b5e9adc66b.jpg" alt="但我坚信共产主义的理想没有错"></p>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/7b48331511b29ce8.jpg" alt="它也一定会实现"></p>
<p><img src="https://s3.bmp.ovh/imgs/2021/12/64630f7e25129c4b.jpg" alt="即使花上一千年"></p>
]]></content>
  </entry>
  <entry>
    <title>艺术生的填报规则分析</title>
    <url>/2022/05/21/%E8%89%BA%E6%9C%AF%E7%94%9F%E7%9A%84%E5%A1%AB%E6%8A%A5%E8%A7%84%E5%88%99%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="艺术生的填报规则分析"><a href="#艺术生的填报规则分析" class="headerlink" title="艺术生的填报规则分析"></a>艺术生的填报规则分析</h1><p> <a href="https://gaokao.haedu.cn/index.php/art/content/52436">河南2021艺术类高校（或专业）志愿填报和录取有关规定-河南省阳光高考 (haedu.cn)</a> </p>
<p>根据上述这个网站的红头文件，我对<strong>河南省</strong>的艺术生报名做出如下分析。</p>
<h2 id="报名要求"><a href="#报名要求" class="headerlink" title="报名要求"></a>报名要求</h2><p>**专业省统考成绩合格并参加全国普通高等学校招生文化课统一考试且成绩达到相应分数线的考生可按艺术类填报志愿。 **</p>
<p><strong>河南省专业省统考成绩：</strong></p>
<ul>
<li>美术类 180分；</li>
<li>编导制作类 115分；</li>
<li>书法类 190分；</li>
<li>艺术舞蹈 140分；</li>
<li>国际标准舞 140分；</li>
</ul>
<p><strong>各种艺术类专业的总分</strong></p>
<p> <strong>艺术类专业招生分为美术类（总分300分）</strong></p>
<p><strong>音乐类（分声乐和器乐，考生任选其一，总分200分）、</strong></p>
<p><strong>播音与主持类（总分400分）、</strong></p>
<p><strong>编导制作类（总分200分）、</strong></p>
<p><strong>书法类（总分300分）、</strong></p>
<p><strong>舞蹈类（分艺术舞蹈和国际标准舞，考生任选其一，总分200分</strong></p>
<p>**表演类（总分200分 **</p>
<p><strong>数据来源：</strong> <a href="https://new.qq.com/omn/20220106/20220106A05S9E00.html">2022年河南省统考分数线公布_腾讯新闻 (qq.com)</a> </p>
<p><strong>高考成绩分档：</strong></p>
<p><img src="https://img1.imgtp.com/2022/05/21/2kIT5158.jpg">    </p>
<p><strong>要专业成绩和文化课成绩双双过线才能报考某个段的学校</strong></p>
<p><strong>21年成绩</strong><img src="https://img1.imgtp.com/2022/05/21/HEndtztS.png" alt="1653124042280.png"></p>
<h2 id="报名时间"><a href="#报名时间" class="headerlink" title="报名时间"></a>报名时间</h2><p><img src="https://img1.imgtp.com/2022/05/21/GsHO0J5Q.jpg" alt="报名时间"></p>
<h2 id="对分段的分析"><a href="#对分段的分析" class="headerlink" title="对分段的分析"></a>对分段的分析</h2><p> 理论来源： <a href="http://www.gaosan.com/gaokao/397739.html">艺术类本科批A段和B段的区别 有什么不同_高三网 (gaosan.com)</a> </p>
<p>**本A段是一本和二本，这类大学是公办学校，有国家重点，也有地方重点，有不少学校相关专业实力都不错，本B段是原来的三本，独立学院、民办院校和中外合作办学专业，学费也比较高。 **</p>
<p><strong>要专业成绩和文化课成绩双双过线才能报考某个段的学校</strong></p>
]]></content>
  </entry>
  <entry>
    <title>实现SMBMS</title>
    <url>/2021/12/16/%E8%BE%83%E4%B8%BA%E5%AE%8C%E5%96%84%E7%9A%84javaweb%E4%BE%9D%E8%B5%96/</url>
    <content><![CDATA[<h2 id="实现SMBMS"><a href="#实现SMBMS" class="headerlink" title="实现SMBMS"></a>实现SMBMS</h2><p>实现这个SMBMS用到了包括servlet jsp jstl standard mysql等的依赖</p>
<p>由于Tomcat版本过高原因，javax已经不再适用 而替换成了jakarta</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--jsp的依赖--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;jakarta.servlet.jsp&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jakarta.servlet.jsp-api&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.0.0&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--jar包的依赖--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;5.0.0&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;4.11&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--这个项目里我自己倒的包--&gt;</span><br><span class="line">    &lt;!--servlet 5.0--&gt;</span><br><span class="line">    &lt;!--servlet依赖--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;5.0.0&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--jsp2.2--&gt;</span><br><span class="line">    &lt;!--mysql依赖--&gt;</span><br><span class="line">    &lt;!-- https://mvnrepository.com/artifact/org.wisdom-framework/mysql-connector-java --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;8.0.27&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">  &lt;!--standard--&gt;</span><br><span class="line">    &lt;!-- https://mvnrepository.com/artifact/taglibs/standard --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;taglibs&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;standard&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.1.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jakarta.servlet.jsp.jstl&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;2.0.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;2.2&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;junit-jupiter&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;RELEASE&lt;/version&gt;</span><br><span class="line">          &lt;scope&gt;compile&lt;/scope&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.testng&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;testng&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;RELEASE&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;compile&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/16/%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="过滤数据"><a href="#过滤数据" class="headerlink" title="过滤数据"></a>过滤数据</h1><h2 id="使用WHERE子句"><a href="#使用WHERE子句" class="headerlink" title="使用WHERE子句"></a>使用WHERE子句</h2><p>数据WHERE子句中指定的搜索条件进行过滤WHERE子句在表名（FROM子句）之后给出。</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 条件;</span><br></pre></td></tr></table></figure>

<p>它检查的是一个列是否具有指定的值据此进行过滤</p>
<h1 id="WHERE子句操作符"><a href="#WHERE子句操作符" class="headerlink" title="WHERE子句操作符"></a>WHERE子句操作符</h1><p><strong>WHERE子句操作符</strong></p>
<table>
<thead>
<tr>
<th>操作符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>=</td>
<td>等于</td>
</tr>
<tr>
<td>&lt;&gt;</td>
<td>不等于</td>
</tr>
<tr>
<td>!=</td>
<td>不等于</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于</td>
</tr>
<tr>
<td>&lt;=</td>
<td>小于等于</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于</td>
</tr>
<tr>
<td>&gt;=</td>
<td>大于等于</td>
</tr>
<tr>
<td>BETWEEN</td>
<td>在指定的两个数中间(包含这两个数)</td>
</tr>
</tbody></table>
<p><strong>注意，在比较时，我们有事会使用到单引号（’’）</strong></p>
<ul>
<li>当比较的数据是数字类型则不需要用单引号</li>
<li>当比较的数据是字符串类型则需要用单引号将子句括起来</li>
</ul>
<h2 id="范围值检查"><a href="#范围值检查" class="headerlink" title="范围值检查"></a>范围值检查</h2><p>范围值检查使用的是关键字<strong>BETWEEN</strong></p>
<p>在使用<strong>BETWEEN</strong>时，必须给出范围所需的低端值和高端值，这两个值必须使用AND关键字分隔.。</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 列名 BETWEEN x AND x;</span><br></pre></td></tr></table></figure>

<h3 id="空值检查"><a href="#空值检查" class="headerlink" title="空值检查"></a>空值检查</h3><p>空值检查是可以用**(NULL)**表示的，但是可以检索到，不能提取出来</p>
<p><strong>语法结构</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 列名</span><br><span class="line">FROM 表格</span><br><span class="line">WHERE 列名 IS NULL;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>选址问题</title>
    <url>/2022/03/20/%E9%80%89%E5%9D%80%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="选址问题"><a href="#选址问题" class="headerlink" title="选址问题"></a>选址问题</h1><p>选址问题是指为一个或者几个服务设置在一定区域内选定他的位置，是的某一指标达到最优值。选址问题根据这些设置需要的指标的要求可以大致分为两类：</p>
<ul>
<li>中心问题</li>
<li>重心问题</li>
</ul>
<h2 id="中心问题"><a href="#中心问题" class="headerlink" title="中心问题"></a>中心问题</h2><p>中心问题指的是一些紧急公共设施如医院、消防站的选址，要求网路中最远的被服务对象离服务站的距离尽可能小。‘因此我们可以使用Floyd算法求得每组两点之间的最短距离。在选择某一行最大值的与其他行进行比较。选择最大值的最小值。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.passage2.Floyd;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">zhongxinwenrti</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//我们这边使用的是无向图</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> inf = <span class="number">99999999</span>;</span><br><span class="line">        <span class="comment">//m 表示点数 n表示边数</span></span><br><span class="line">        <span class="keyword">int</span> m = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="keyword">double</span> l;</span><br><span class="line">        <span class="comment">//创建数组</span></span><br><span class="line">        <span class="keyword">double</span>[][] a = <span class="keyword">new</span> <span class="keyword">double</span>[m][m];</span><br><span class="line">        <span class="comment">//对数组初始化</span></span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">                    a[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    a[i][j] = inf;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//导入边数据</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="comment">//x表示横坐标 y表示纵坐标 l表示长度</span></span><br><span class="line">            x = scanner.nextInt();</span><br><span class="line">            y = scanner.nextInt();</span><br><span class="line">            l = scanner.nextDouble();</span><br><span class="line">            <span class="comment">//这里我们使用的是无向图</span></span><br><span class="line">            a[x][y] = l;</span><br><span class="line">            a[y][x] = l;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">double</span>[] ints : a) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">double</span> anInt : ints) &#123;</span><br><span class="line">                <span class="keyword">if</span> (anInt == inf) &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;inf&quot;</span> + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(anInt + <span class="string">&quot;    &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=====================&quot;</span>);</span><br><span class="line">            <span class="comment">//调用Floyd算法求得 两两点之间的最短路径</span></span><br><span class="line">            Floyd floyd = <span class="keyword">new</span> Floyd();</span><br><span class="line">            floyd.setE(a);</span><br><span class="line">            floyd.floyd();</span><br><span class="line">            <span class="keyword">double</span>[][] e = floyd.getE();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">double</span>[] ints1 : e) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">double</span> anInt : ints1) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (anInt == inf) &#123;</span><br><span class="line">                        System.out.print(<span class="string">&quot;inf&quot;</span> + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        System.out.print(anInt + <span class="string">&quot;    &quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>程序输出:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">0.0</span>    <span class="number">3.0</span>    <span class="number">5.0</span>    <span class="number">10.0</span>    <span class="number">7.0</span>    <span class="number">5.5</span>    <span class="number">7.0</span>    </span><br><span class="line"><span class="number">3.0</span>    <span class="number">0.0</span>    <span class="number">2.0</span>    <span class="number">7.0</span>    <span class="number">4.0</span>    <span class="number">2.5</span>    <span class="number">4.0</span>    </span><br><span class="line"><span class="number">5.0</span>    <span class="number">2.0</span>    <span class="number">0.0</span>    <span class="number">5.0</span>    <span class="number">2.0</span>    <span class="number">4.5</span>    <span class="number">6.0</span>    </span><br><span class="line"><span class="number">10.0</span>    <span class="number">7.0</span>    <span class="number">5.0</span>    <span class="number">0.0</span>    <span class="number">3.0</span>    <span class="number">7.0</span>    <span class="number">8.5</span>    </span><br><span class="line"><span class="number">7.0</span>    <span class="number">4.0</span>    <span class="number">2.0</span>    <span class="number">3.0</span>    <span class="number">0.0</span>    <span class="number">4.0</span>    <span class="number">5.5</span>    </span><br><span class="line"><span class="number">5.5</span>    <span class="number">2.5</span>    <span class="number">4.5</span>    <span class="number">7.0</span>    <span class="number">4.0</span>    <span class="number">0.0</span>    <span class="number">1.5</span>    </span><br><span class="line"><span class="number">7.0</span>    <span class="number">4.0</span>    <span class="number">6.0</span>    <span class="number">8.5</span>    <span class="number">5.5</span>    <span class="number">1.5</span>    <span class="number">0.0</span>    </span><br></pre></td></tr></table></figure>

<p>可以看到 我们的最短路径矩阵，每一行的最大值中的最小值是在第3行 因此建设在V3点</p>
<h2 id="重心问题"><a href="#重心问题" class="headerlink" title="重心问题"></a>重心问题</h2><p>某些设备如工厂，学校，邮局等不是紧急单位，但是和民生息息相关的公共设置，需要选择要求到每个点的距离中的最短，才能保证有条件的公平与便利。</p>
<p><strong>解题思路：</strong>利用弗洛伊德算法，求得两点之间最短距离的矩阵，获得矩阵的各行的参数的相加。找到最小的。</p>
<p><strong>程序实现：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dwx.passage2.Floyd;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Zhongxinwenti</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> inf = <span class="number">99999999</span>;</span><br><span class="line">        <span class="comment">//创建矩阵</span></span><br><span class="line">        <span class="keyword">int</span> m = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        <span class="keyword">double</span>[][] a = <span class="keyword">new</span> <span class="keyword">double</span>[m][m];</span><br><span class="line">        <span class="comment">//矩阵初始化</span></span><br><span class="line">        <span class="keyword">int</span> i,j,k,x,y;</span><br><span class="line">        <span class="keyword">double</span> l;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i==j)&#123;</span><br><span class="line">                    a[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    a[i][j] = inf;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//读入数据</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            x = scanner.nextInt();</span><br><span class="line">            y = scanner.nextInt();</span><br><span class="line">            l = scanner.nextDouble();</span><br><span class="line">            a[x][y] = l;</span><br><span class="line">            a[y][x] = l;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用弗洛伊德算法求解</span></span><br><span class="line">        Floyd floyd = <span class="keyword">new</span> Floyd();</span><br><span class="line">        floyd.setE(a);</span><br><span class="line">        floyd.floyd();</span><br><span class="line">        <span class="keyword">double</span>[][] e = floyd.getE();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">double</span>[] doubles : e) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">double</span> aDouble : doubles) &#123;</span><br><span class="line">                System.out.print(aDouble+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================================&quot;</span>);</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">double</span>[] doubles : e) &#123;</span><br><span class="line">            sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">double</span> aDouble : doubles) &#123;</span><br><span class="line">                sum = sum + aDouble;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(sum);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>输出：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">0.0</span>	<span class="number">3.0</span>	<span class="number">5.0</span>	<span class="number">8.0</span>	<span class="number">7.0</span>	<span class="number">7.0</span>	<span class="number">8.5</span>	</span><br><span class="line"><span class="number">3.0</span>	<span class="number">0.0</span>	<span class="number">2.0</span>	<span class="number">5.0</span>	<span class="number">4.0</span>	<span class="number">4.0</span>	<span class="number">5.5</span>	</span><br><span class="line"><span class="number">5.0</span>	<span class="number">2.0</span>	<span class="number">0.0</span>	<span class="number">3.0</span>	<span class="number">2.0</span>	<span class="number">6.0</span>	<span class="number">7.5</span>	</span><br><span class="line"><span class="number">8.0</span>	<span class="number">5.0</span>	<span class="number">3.0</span>	<span class="number">0.0</span>	<span class="number">1.0</span>	<span class="number">5.0</span>	<span class="number">6.5</span>	</span><br><span class="line"><span class="number">7.0</span>	<span class="number">4.0</span>	<span class="number">2.0</span>	<span class="number">1.0</span>	<span class="number">0.0</span>	<span class="number">4.0</span>	<span class="number">5.5</span>	</span><br><span class="line"><span class="number">7.0</span>	<span class="number">4.0</span>	<span class="number">6.0</span>	<span class="number">5.0</span>	<span class="number">4.0</span>	<span class="number">0.0</span>	<span class="number">1.5</span>	</span><br><span class="line"><span class="number">8.5</span>	<span class="number">5.5</span>	<span class="number">7.5</span>	<span class="number">6.5</span>	<span class="number">5.5</span>	<span class="number">1.5</span>	<span class="number">0.0</span>	</span><br><span class="line">=========================================</span><br><span class="line"><span class="number">38.5</span></span><br><span class="line"><span class="number">23.5</span></span><br><span class="line"><span class="number">25.5</span></span><br><span class="line"><span class="number">28.5</span></span><br><span class="line"><span class="number">23.5</span></span><br><span class="line"><span class="number">27.5</span></span><br><span class="line"><span class="number">35.0</span></span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>由此可知 建在v2或者v5都可以</p>
]]></content>
  </entry>
  <entry>
    <title>编写软件的过程</title>
    <url>/2022/03/03/%E7%BC%96%E5%86%99%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="编写软件的过程"><a href="#编写软件的过程" class="headerlink" title="编写软件的过程"></a>编写软件的过程</h1><h2 id="2022-2-23"><a href="#2022-2-23" class="headerlink" title="2022/2/23"></a>2022/2/23</h2><p>和胡振宇讨论了一下这个软件的大体内容，已经编写这个软件需求分析</p>
<h3 id="大致的步奏"><a href="#大致的步奏" class="headerlink" title="大致的步奏"></a>大致的步奏</h3><ul>
<li>上传数据</li>
<li>数据分析</li>
<li>生成文档</li>
</ul>
<h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><ul>
<li>数据库设置限制，有管理员能够修改数据</li>
<li>用户只需要填写表格 以及获得生成的最终表格 过程中的表格要管理员看</li>
</ul>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul>
<li>是填写数据还是上传有格式的文档（填写一到表5）</li>
<li>生成表格是直接生成还是有一段时间后生成（自动封锁24h）</li>
<li>表格生成给谁？</li>
<li>这些表格之间的关系</li>
</ul>
<h3 id="时间要求"><a href="#时间要求" class="headerlink" title="时间要求"></a>时间要求</h3><p>今年年底</p>
<h2 id="2022-2-24"><a href="#2022-2-24" class="headerlink" title="2022/2/24"></a>2022/2/24</h2><h3 id="了解了一下Excel的读方法"><a href="#了解了一下Excel的读方法" class="headerlink" title="了解了一下Excel的读方法"></a>了解了一下Excel的读方法</h3><p>Excel的读取方法不同于正常的文件的读写，需要导入阿帕奇的poi的包</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml-schemas<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>这边我做了一个简单的读取Excel文件的方法（这里是以.xlsx为尾缀的）</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReadExlse</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//正常的文件类File无法读取Excel文件，需要使用Apache的包</span></span><br><span class="line">        <span class="comment">//Excel的全路径</span></span><br><span class="line">        String path = <span class="string">&quot;E:\\java\\filetest\\src\\main\\java\\com\\dwx\\file\\test.xlsx&quot;</span>;</span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        System.out.println(file.isFile());</span><br><span class="line">        <span class="comment">//对文件进行操作 将文件转化成流</span></span><br><span class="line">        FileInputStream stream = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">        <span class="comment">//对这个文件流进行操作</span></span><br><span class="line">        <span class="comment">//创建这个Excel的对象</span></span><br><span class="line">        XSSFWorkbook sheets = <span class="keyword">new</span> XSSFWorkbook(stream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取全部的sheets数</span></span><br><span class="line">        <span class="keyword">int</span> numberOfSheets = sheets.getNumberOfSheets();</span><br><span class="line">        System.out.println(<span class="string">&quot;================================================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;此文件的所有表格数为：&quot;</span>+numberOfSheets);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;numberOfSheets;k++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;这是第&quot;</span>+(k+<span class="number">1</span>)+<span class="string">&quot;个表格&quot;</span>);</span><br><span class="line">            XSSFSheet sheetAt = sheets.getSheetAt(k);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> firstRowNum = sheetAt.getFirstRowNum();</span><br><span class="line">            <span class="keyword">int</span> lastRowNum = sheetAt.getLastRowNum();</span><br><span class="line">            System.out.println(firstRowNum);</span><br><span class="line">            System.out.println(lastRowNum);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = firstRowNum; i &lt;= lastRowNum; i++) &#123;</span><br><span class="line">                XSSFRow row = sheetAt.getRow(i);</span><br><span class="line">             <span class="keyword">if</span> (row==<span class="keyword">null</span>)&#123;</span><br><span class="line">                 System.out.println(<span class="string">&quot;         &quot;</span>);</span><br><span class="line">                 <span class="keyword">continue</span>;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">short</span> lastCellNum = row.getLastCellNum();</span><br><span class="line">                <span class="keyword">short</span> firstCellNum = row.getFirstCellNum();</span><br><span class="line">               <span class="keyword">if</span> (lastCellNum &lt; <span class="number">0</span> || firstCellNum &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                   <span class="keyword">continue</span>;</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = firstCellNum; j &lt;= lastCellNum; j++) &#123;</span><br><span class="line">                    XSSFCell cell = row.getCell(j);</span><br><span class="line">                    System.out.print(cell + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭流</span></span><br><span class="line">        sheets.close();</span><br><span class="line">        stream.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="了解了一下Excel的写的方法"><a href="#了解了一下Excel的写的方法" class="headerlink" title="了解了一下Excel的写的方法"></a>了解了一下Excel的写的方法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WriteExlse</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这个程序是一个写Excel的程序 面向的尾缀也是xlsx</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String fileName = <span class="string">&quot;C:\\Users\\Lenovo\\Desktop\\监审软件编译&quot;</span>+<span class="string">&quot;\\MyExlse&quot;</span>+<span class="string">&quot;.xlsx&quot;</span>;</span><br><span class="line">        String sheetName = <span class="string">&quot;sheet01&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置一个sheets</span></span><br><span class="line">        XSSFWorkbook sheets = <span class="keyword">new</span> XSSFWorkbook();</span><br><span class="line">        <span class="comment">//设置第一个表的表格</span></span><br><span class="line">        <span class="comment">//设置第一个表的row数目</span></span><br><span class="line">        <span class="keyword">int</span> firstRowNumber = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> lastRowNumber = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> firstCellNumber = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> lastCellNumber = <span class="number">5</span>;</span><br><span class="line">        <span class="comment">//一个整个Excel文件创建一个表</span></span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line">        XSSFRow xssfRow;</span><br><span class="line">        XSSFCell xssfCell;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=firstRowNumber;i&lt;lastRowNumber;i++)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//表给某一行设置一个行</span></span><br><span class="line">            XSSFRow row = sheet.createRow(i);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=firstCellNumber;j&lt;lastCellNumber;j++)&#123;</span><br><span class="line">                <span class="comment">//对这个行设置更多的cell（小室）</span></span><br><span class="line">                XSSFCell cell = row.createCell(j);</span><br><span class="line">                <span class="comment">//给这个cell（小室）设置值</span></span><br><span class="line">                cell.setCellValue(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//编写一个输出流</span></span><br><span class="line">        FileOutputStream stream = <span class="keyword">new</span> FileOutputStream(fileName);</span><br><span class="line">        <span class="comment">//把流写出去 一个sheets Excel表写出去</span></span><br><span class="line">        sheets.write(stream);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2022-2-26"><a href="#2022-2-26" class="headerlink" title="2022/2/26"></a>2022/2/26</h2><p>分析了数据库怎么建：选择创建链表的形式创建数据库</p>
<p>对用户的需求进行分析</p>
<h2 id="2022-2-27"><a href="#2022-2-27" class="headerlink" title="2022/2/27"></a>2022/2/27</h2><p>分析了应该去创建一个网站 我自己负责表格的编写工作</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">minban_fengmian</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setminban_fengmain</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置民办封面</span></span><br><span class="line">        <span class="comment">//创建一个sheet</span></span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(<span class="string">&quot;封面&quot;</span>);</span><br><span class="line">        <span class="comment">//封面的第一行是空着的</span></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        XSSFRow xssfRow;</span><br><span class="line">        XSSFCell xssfCell;</span><br><span class="line">        <span class="comment">// 申请第一行 行和列都是从零开始的</span></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">0</span>);</span><br><span class="line">        CellRangeAddress cellAddresses1 = <span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses1);</span><br><span class="line">        <span class="comment">//第一行是四个cell</span></span><br><span class="line">        <span class="keyword">for</span> ( i = <span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            XSSFCell cell = row.createCell(i);</span><br><span class="line">            <span class="comment">//第一行都是空着的 因此我们也把这个值设成空值</span></span><br><span class="line">            cell.setCellValue(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//下边编写第二行</span></span><br><span class="line">        <span class="comment">//第二行只用一列</span></span><br><span class="line">        <span class="comment">//设置单元格的合并</span></span><br><span class="line">        CellRangeAddress cellAddresses = <span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses);</span><br><span class="line">        XSSFRow row1 = sheet.createRow(<span class="number">1</span>);</span><br><span class="line">        XSSFCell cell = row1.createCell(<span class="number">0</span>);</span><br><span class="line">        cell.setCellValue(<span class="string">&quot;新乡市民办学校教育定价成本监审表&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第三行是一个空格行</span></span><br><span class="line">        CellRangeAddress cellAddresses2 = <span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses2);</span><br><span class="line">        XSSFRow row2 = sheet.createRow(<span class="number">2</span>);</span><br><span class="line">        XSSFCell cell1 = row2.createCell(<span class="number">0</span>);</span><br><span class="line">        cell1.setCellValue(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">//为第五后的合并单元格</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">3</span>;i&lt;=<span class="number">11</span>;i++)&#123;</span><br><span class="line">            CellRangeAddress cellAddresses4 = <span class="keyword">new</span> CellRangeAddress(i, i, <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">            sheet.addMergedRegion(cellAddresses4);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//第五航到第12行</span></span><br><span class="line">        String[] name = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;学 校 名 称&quot;</span>,<span class="string">&quot;法 定人 代 表&quot;</span>,<span class="string">&quot;学 校 地 址&quot;</span>,<span class="string">&quot;邮 政 编 码&quot;</span>,<span class="string">&quot;财务负责人&quot;</span>,<span class="string">&quot;填  表  人&quot;</span>,<span class="string">&quot;电     话  &quot;</span>,<span class="string">&quot;邮     箱&quot;</span>,<span class="string">&quot;传     真 &quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">3</span>;i&lt;=<span class="number">11</span>; i++)&#123;</span><br><span class="line">            XSSFRow row4 = sheet.createRow(i);</span><br><span class="line">            XSSFCell cell4 = row4.createCell(<span class="number">1</span>);</span><br><span class="line">            cell4.setCellValue(name[i-<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//第十三行是空格行</span></span><br><span class="line">        sheet.createRow(<span class="number">12</span>);</span><br><span class="line">        <span class="comment">//第十四行</span></span><br><span class="line">        XSSFRow row3 = sheet.createRow(<span class="number">13</span>);</span><br><span class="line">        XSSFCell cell2 = row3.createCell(<span class="number">3</span>);</span><br><span class="line">        cell2.setCellValue(<span class="string">&quot;学校盖章&quot;</span>);</span><br><span class="line">        CellRangeAddress cellAddresses3 = <span class="keyword">new</span> CellRangeAddress(<span class="number">13</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses3);</span><br><span class="line">        <span class="comment">//第十五行</span></span><br><span class="line"></span><br><span class="line">        XSSFRow row4 = sheet.createRow(<span class="number">14</span>);</span><br><span class="line">        XSSFCell cell3 = row4.createCell(<span class="number">3</span>);</span><br><span class="line">        cell3.setCellValue(<span class="string">&quot;          年&quot;</span>);</span><br><span class="line"></span><br><span class="line">        XSSFCell cell4 = row4.createCell(<span class="number">4</span>);</span><br><span class="line">        cell4.setCellValue(<span class="string">&quot;     月           日&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//一下是对表格的宽度等的优化</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置列宽</span></span><br><span class="line"></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>, <span class="number">258</span>*<span class="number">23</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">1</span>, <span class="number">258</span>*<span class="number">23</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">3</span>, <span class="number">258</span>*<span class="number">13</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">4</span>, <span class="number">258</span>*<span class="number">13</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">5</span>, <span class="number">258</span>*<span class="number">28</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置行高</span></span><br><span class="line">        sheet.setDefaultRowHeight((<span class="keyword">short</span>) <span class="number">456</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>生成的第一个目标Excel，编写的格式和列宽和行高需要以后在改</p>
<h2 id="2022-2-28"><a href="#2022-2-28" class="headerlink" title="2022/2/28"></a>2022/2/28</h2><p>编写民办的第三张表 编写表的过程越来越快 现在平均2h能编好一张表</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">minban_biaoyi</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String sheetName = <span class="string">&quot;基本情况表1&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//编写第一行的内容</span></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">0</span>);</span><br><span class="line">        XSSFCell cell = row.createCell(<span class="number">0</span>);</span><br><span class="line">        cell.setCellValue(<span class="string">&quot;表：一&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//编写第二行的内容</span></span><br><span class="line">        <span class="comment">//第二行是从A到L有一个合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses = <span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses);</span><br><span class="line">        XSSFRow row1 = sheet.createRow(<span class="number">1</span>);</span><br><span class="line">        XSSFCell cell1 = row1.createCell(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        cell1.setCellValue(<span class="string">&quot;XXX学校教育定价成本监审学生人数调查表&quot;</span>);</span><br><span class="line">        <span class="comment">//第三行也是一个大的合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses2 = <span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">11</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses2);</span><br><span class="line">        XSSFRow row2 = sheet.createRow(<span class="number">2</span>);</span><br><span class="line">        XSSFCell cell2 = row2.createCell(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        cell2.setCellValue(<span class="string">&quot;学校名称：（盖章）&quot;</span>);</span><br><span class="line">        <span class="comment">//第四五行有一个不规律的合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses1 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        CellRangeAddress cellAddresses6 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        CellRangeAddress cellAddresses3 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">8</span>);</span><br><span class="line">        CellRangeAddress cellAddresses4 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">9</span>);</span><br><span class="line">        CellRangeAddress cellAddresses5 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">        CellRangeAddress cellAddresses7 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">11</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses1);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses6);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses3);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses4);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses5);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses7);</span><br><span class="line">        <span class="comment">//又有一系列小的横向合并</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">8</span>;i=i+<span class="number">2</span>)&#123;</span><br><span class="line">            CellRangeAddress cellAddresses8 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">3</span>, i, i + <span class="number">1</span>);</span><br><span class="line">            sheet.addMergedRegion(cellAddresses8);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//给第4、5行填值</span></span><br><span class="line"></span><br><span class="line">        XSSFRow row3 = sheet.createRow(<span class="number">3</span>);</span><br><span class="line">        row3.createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;项          目&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;栏次及关系&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">8</span>).setCellValue(<span class="string">&quot;总监审数&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">9</span>).setCellValue(<span class="string">&quot;教育生均监审数&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;住宿生均监审数&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">11</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;2019年&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;2020年&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">6</span>).setCellValue(<span class="string">&quot;2021年&quot;</span>);</span><br><span class="line"></span><br><span class="line">        XSSFRow row4 = sheet.createRow(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>;j&lt;=<span class="number">7</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row4.createCell(j).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row4.createCell(j).setCellValue(<span class="string">&quot;核定数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对于表二 固定的值为两个列</span></span><br><span class="line">        <span class="comment">//使用数组的思路进行存值</span></span><br><span class="line">        String[] list1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                     <span class="string">&quot;一、规模班数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、班人数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;小学（人/班&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;初中（人/班&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;高中（人/班&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;三、规模人数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;四、实际班级数（个）&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;五、实际在校平均标准学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（一）小学标准学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;其中：年初学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;         年末学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（二）初中标准学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;其中：年初学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;         年末学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（三）高中标准学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;其中：年初学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;         年末学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;六、实际在校平均住宿标准学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（一）小学标准住宿学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;其中：年初学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;         年末学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（二）初中标准住宿学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;其中：年初学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;         年末学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（三）高中标准住宿学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;其中：年初学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;         年末学生数&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength,b;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        listLength = list1.length;</span><br><span class="line">        <span class="keyword">for</span> (b=<span class="number">0</span>;b&lt;listLength;b++)&#123;</span><br><span class="line">            XSSFRow row5 = sheet.createRow(b+<span class="number">5</span>);</span><br><span class="line">            row5.createCell(<span class="number">0</span>).setCellValue(list1[b]);</span><br><span class="line">            row5.createCell(<span class="number">1</span>).setCellValue(b+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//填充L列备注的填充</span></span><br><span class="line">        <span class="comment">//L列有几个单元格的合并</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">6</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">11</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">10</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">11</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">14</span>,<span class="number">16</span>,<span class="number">11</span>,<span class="number">11</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">18</span>,<span class="number">20</span>,<span class="number">11</span>,<span class="number">11</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">22</span>,<span class="number">30</span>,<span class="number">11</span>,<span class="number">11</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">32</span>,<span class="number">40</span>,<span class="number">11</span>,<span class="number">11</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给备注填值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> [] rowNumber = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">18</span>,<span class="number">22</span>,<span class="number">32</span>&#125;;</span><br><span class="line"></span><br><span class="line">        String[] rowValue = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;建校时可容纳班级数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2019-2020年填写“双减”前规模数；2021年按“双减”后规模数填写。&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;建校时每班人数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2019-2020年填写“双减”前规模数；2021年按“双减”后规模数填写。&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;规模人数=规模班数X班级人数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;纸质说明每个年级多少个班？&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;按实际在校学生人数填写，或按三年学籍人数纸质上报。&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;按实际在校住宿学生人数填写。&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> o=<span class="number">0</span>;o&lt;=<span class="number">7</span>;o++)&#123;</span><br><span class="line">            sheet.getRow(rowNumber[o]).createCell(<span class="number">11</span>).setCellValue(rowValue[o]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//内容填充部分已经全部填写完毕 开始设置表格的列宽</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">258</span>*<span class="number">36</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">1</span>,<span class="number">258</span>*<span class="number">22</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">11</span>,<span class="number">258</span>*<span class="number">66</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>我思考了一下问题，我可以通过添加一个set方法，来实现给每一张表中的数据进行填值</p>
<h2 id="2022-3-1"><a href="#2022-3-1" class="headerlink" title="2022/3/1"></a>2022/3/1</h2><p>编写了民办表基本情况表二</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">minban_biaoer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建子表格 并且给其附上名字</span></span><br><span class="line">        String sheetName = <span class="string">&quot;基本情况表2&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//编写第一行的内容</span></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">0</span>);</span><br><span class="line">        XSSFCell cell = row.createCell(<span class="number">0</span>);</span><br><span class="line">        cell.setCellValue(<span class="string">&quot;表：二&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//编写第二行的内容</span></span><br><span class="line">        <span class="comment">//第二行是从A到L有一个合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses = <span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses);</span><br><span class="line">        XSSFRow row1 = sheet.createRow(<span class="number">1</span>);</span><br><span class="line">        XSSFCell cell1 = row1.createCell(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        cell1.setCellValue(<span class="string">&quot;新乡市民办学校教育定价成本监审其它情况调查表&quot;</span>);</span><br><span class="line">        <span class="comment">//第三行也是一个大的合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses2 = <span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">11</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses2);</span><br><span class="line">        XSSFRow row2 = sheet.createRow(<span class="number">2</span>);</span><br><span class="line">        XSSFCell cell2 = row2.createCell(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        cell2.setCellValue(<span class="string">&quot;学校名称：（盖章）                                                                                                  单位：人&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第四五行有一个不规律的合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses1 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        CellRangeAddress cellAddresses6 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        CellRangeAddress cellAddresses3 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">8</span>);</span><br><span class="line">        CellRangeAddress cellAddresses4 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">9</span>);</span><br><span class="line">        CellRangeAddress cellAddresses5 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">        CellRangeAddress cellAddresses7 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">11</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses1);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses6);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses3);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses4);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses5);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses7);</span><br><span class="line">        <span class="comment">//又有一系列小的横向合并</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">8</span>;i=i+<span class="number">2</span>)&#123;</span><br><span class="line">            CellRangeAddress cellAddresses8 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">3</span>, i, i + <span class="number">1</span>);</span><br><span class="line">            sheet.addMergedRegion(cellAddresses8);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//给第4、5行填值</span></span><br><span class="line"></span><br><span class="line">        XSSFRow row3 = sheet.createRow(<span class="number">3</span>);</span><br><span class="line">        row3.createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;项          目&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;栏次及关系&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">8</span>).setCellValue(<span class="string">&quot;总监审数&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">9</span>).setCellValue(<span class="string">&quot;教育生均监审数&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;住宿生均监审数&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">11</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;2019年&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;2020年&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">6</span>).setCellValue(<span class="string">&quot;2021年&quot;</span>);</span><br><span class="line"></span><br><span class="line">        XSSFRow row4 = sheet.createRow(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>;j&lt;=<span class="number">7</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row4.createCell(j).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row4.createCell(j).setCellValue(<span class="string">&quot;核定数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] listC1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、教职工总数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（一）行政管理人数 &quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（二）小学教师人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（三）初中教师人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（四）高中教师人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（五）宿管人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（六）餐厅人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（七）其他辅助人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（八）临时人员 &quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、总建筑面积&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（一）教学建筑面积&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;共用建筑面积&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（二）住宿面积&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（三）餐厅面积&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;三、年收入&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;学费收入&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;餐厅收入&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;其它收入&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;四、现执行收费标准&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        String[] listC10 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;指校长、学生科、教导处、会计室、维修人员等&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;保洁、保安和其它人员&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;低质说明从事什么岗位，工资如何发放。&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;指大门、厕所等共用设施&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;单位：元/生.年&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listC1Length = listC1.length;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;listC1Length;i++)&#123;</span><br><span class="line">            XSSFRow row5 = sheet.createRow(i + <span class="number">5</span>);</span><br><span class="line">            row5.createCell(<span class="number">0</span>).setCellValue(listC1[i]);</span><br><span class="line">            row5.createCell(<span class="number">1</span>).setCellValue(i+<span class="number">1</span>);</span><br><span class="line">            row5.createCell(<span class="number">11</span>).setCellValue(listC10[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//内容填充部分已经全部填写完毕 开始设置表格的列宽</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">258</span>*<span class="number">36</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">1</span>,<span class="number">258</span>*<span class="number">22</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">11</span>,<span class="number">258</span>*<span class="number">66</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>表三编写成功</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">minban_biaosan</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建的子表格的名字</span></span><br><span class="line">        String sheetName = <span class="string">&quot;三年审计报告表3&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//编写第一行的内容</span></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">0</span>);</span><br><span class="line">        XSSFCell cell = row.createCell(<span class="number">0</span>);</span><br><span class="line">        cell.setCellValue(<span class="string">&quot;表三&quot;</span>);</span><br><span class="line">        <span class="comment">//编写第二行的内容</span></span><br><span class="line">        <span class="comment">//第二行是从A到L有一个合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses = <span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses);</span><br><span class="line">        XSSFRow row1 = sheet.createRow(<span class="number">1</span>);</span><br><span class="line">        XSSFCell cell1 = row1.createCell(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        cell1.setCellValue(<span class="string">&quot;新乡市xxx学校审计数基本情况表&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第四五行有一个不规律的合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses1 = <span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        CellRangeAddress cellAddresses2 = <span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses1);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//又有一系列小的横向合并</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i=i+<span class="number">3</span>)&#123;</span><br><span class="line">            CellRangeAddress cellAddresses8 = <span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>, <span class="number">2</span>, i, i + <span class="number">2</span>);</span><br><span class="line">            sheet.addMergedRegion(cellAddresses8);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//给第4、5行填值</span></span><br><span class="line"></span><br><span class="line">        XSSFRow row3 = sheet.createRow(<span class="number">2</span>);</span><br><span class="line">        row3.createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        row3.createCell(<span class="number">1</span>).setCellValue(<span class="number">2019</span>);</span><br><span class="line">        row3.createCell(<span class="number">4</span>).setCellValue(<span class="number">2020</span>);</span><br><span class="line">        row3.createCell(<span class="number">7</span>).setCellValue(<span class="number">2021</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        XSSFRow row2 = sheet.createRow(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j&lt;=<span class="number">9</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row2.createCell(j).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                row2.createCell(j).setCellValue(<span class="string">&quot;核增核减数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row2.createCell(j).setCellValue(<span class="string">&quot;审计数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        row3.createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//第一列的所有数据</span></span><br><span class="line">        String[] listC1  = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">            <span class="string">&quot;一、人员支出&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;1、行政和其它人员&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;2、教师&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;3、宿管人员&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;4、社会保障费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;5、福利费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;（一）小学人员支出&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;1、行政和其它人员&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;2、教师&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;3、宿管人员&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;4、社会保障费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;5、福利费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;（二）初中人员支出&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;1、行政和其它人员&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;2、教师&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;3、宿管人员&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;4、社会保障费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;5、福利费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;（三）高中人员支出&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;1、行政和其它人员&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;2、教师&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;3、宿管人员&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;4、社会保障费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;5、福利费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;二、租赁费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;（一）小学租赁费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;小学教学&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;小学住宿&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;（二）初中租赁费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;初中教学&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;初中住宿&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;（三）高中租赁费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;高中教学&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;高中住宿&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;三、财务费用&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;（一）小学财务费用&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;小学教学&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;小学住宿&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;（二）初中财务费用&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;初中教学&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;初中住宿&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;（三）高中财务费用&quot;</span> ,                    <span class="string">&quot;高中教学\n&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;高中住宿&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;四、公用支出&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;1、办公费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;2、水电费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;3、维修费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;4、职工教育经费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;5、工会经费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;6、招待费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;7、交通费&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;8、&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;9、&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;10、&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;11、&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;12、&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;13、&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;14、&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;15、其它费用&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;五、合计&quot;</span> ,</span><br><span class="line">                    <span class="string">&quot;六、固定资产原值&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listNumber = listC1.length;</span><br><span class="line">        <span class="keyword">int</span> i ;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;listNumber;i++)&#123;</span><br><span class="line">            XSSFRow row5 = sheet.createRow(i + <span class="number">4</span>);</span><br><span class="line">            row5.createCell(<span class="number">0</span>).setCellValue(listC1[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置第K列的数据 K列有很多的合并单元格先合并单元格</span></span><br><span class="line">        <span class="keyword">int</span>[] list1 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">10</span>,<span class="number">29</span>,<span class="number">39</span>,<span class="number">48</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] list2 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">17</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">15</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            CellRangeAddress cellAddresses3 = <span class="keyword">new</span> CellRangeAddress(list1[j],list1[j]+list2[j], <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">            sheet.addMergedRegion(cellAddresses3);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//为底k列设值</span></span><br><span class="line">        <span class="keyword">int</span>[] list3 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">10</span>,<span class="number">28</span>,<span class="number">29</span>,<span class="number">38</span>,<span class="number">39</span>,<span class="number">48</span>,<span class="number">64</span>,<span class="number">65</span>&#125;;</span><br><span class="line">        <span class="comment">//设置值</span></span><br><span class="line">        String[] listK = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;提供2021全体人员工资发放表&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;提供三年租赁合同&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;按建筑面积比或学生比分摊&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;提供金融机构贷款合同&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;按建筑面积比或学生比分摊&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;根据审计报告科目，可增加科目或另行加行。&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;和审计报告数是否一致？&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;和审计报告数一致&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;=<span class="number">7</span>;i++)&#123;</span><br><span class="line">            sheet.getRow(list3[i]).createCell(<span class="number">10</span>).setCellValue(listK[i]);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置表格宽</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">32</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">10</span>,<span class="number">256</span>*<span class="number">30</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>表四编写成功</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">minban_biaosi</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line">        String sheetName = <span class="string">&quot;固定资产表4&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line">        <span class="comment">//编写第一行</span></span><br><span class="line">        <span class="comment">//编写第一行的内容</span></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">0</span>);</span><br><span class="line">        XSSFCell cell = row.createCell(<span class="number">0</span>);</span><br><span class="line">        cell.setCellValue(<span class="string">&quot;表四&quot;</span>);</span><br><span class="line">        <span class="comment">//编写第二行的内容</span></span><br><span class="line">        <span class="comment">//第二行是从A到L有一个合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses = <span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses);</span><br><span class="line">        XSSFRow row1 = sheet.createRow(<span class="number">1</span>);</span><br><span class="line">        XSSFCell cell1 = row1.createCell(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        cell1.setCellValue(<span class="string">&quot;XXX学校2021年度固定资产折旧核定表&quot;</span>);</span><br><span class="line">        <span class="comment">//第三行是从A到L有一个合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses1 = <span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses1);</span><br><span class="line">        XSSFRow row2 = sheet.createRow(<span class="number">2</span>);</span><br><span class="line">        XSSFCell cell2 = row2.createCell(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        cell2.setCellValue(<span class="string">&quot;单位名称：（盖章）                                                                                                残值率：3%                     单位：元&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//编写第四行的内容</span></span><br><span class="line">        String[] list4 = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;项 目&quot;</span>,<span class="string">&quot;栏次及关系&quot;</span>,<span class="string">&quot;原值&quot;</span>,<span class="string">&quot;教学原值&quot;</span>,<span class="string">&quot;公用支出核转&quot;</span>,<span class="string">&quot;宿舍原值&quot;</span>,<span class="string">&quot;餐厅原值&quot;</span>,<span class="string">&quot;折旧年限&quot;</span>,<span class="string">&quot;教学年折旧&quot;</span>,<span class="string">&quot;宿舍年折旧&quot;</span>,<span class="string">&quot;备注&quot;</span>&#125;;</span><br><span class="line">        <span class="comment">//给第四行填值</span></span><br><span class="line">        XSSFRow row3 = sheet.createRow(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">11</span>;i++) &#123;</span><br><span class="line">            row3.createCell(i).setCellValue(list4[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第一列是一个有规律的列 给其添值</span></span><br><span class="line">        String[] list5 = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;一、房屋建筑物&quot;</span>,</span><br><span class="line">                <span class="string">&quot;1、钢结构混凝土结构&quot;</span> ,</span><br><span class="line">                <span class="string">&quot;2、砖混结构&quot;</span> ,</span><br><span class="line">                <span class="string">&quot;3、房屋附属物和构筑物&quot;</span> ,</span><br><span class="line">                <span class="string">&quot;二、通用设备&quot;</span> ,</span><br><span class="line">                <span class="string">&quot;三、专用设备&quot;</span> ,</span><br><span class="line">                <span class="string">&quot;四、家具&quot;</span> ,</span><br><span class="line">                <span class="string">&quot;五、土地&quot;</span> ,</span><br><span class="line">                <span class="string">&quot;六、合计&quot;</span> ,</span><br><span class="line">                <span class="string">&quot;七、预增固定资产&quot;</span>,</span><br><span class="line">                <span class="string">&quot;八、合计&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt;=<span class="number">10</span>;j++)&#123;</span><br><span class="line">            sheet.createRow(j+<span class="number">4</span>).createCell(<span class="number">0</span>).setCellValue(list5[j]);</span><br><span class="line">            sheet.getRow(j+<span class="number">4</span>).createCell(<span class="number">1</span>).setCellValue(j+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sheet.getRow(<span class="number">11</span>).createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;购地合同&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">12</span>).createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;C13和审计报告数是否一致？&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建倒数第二行 一个大的合并</span></span><br><span class="line">        CellRangeAddress cellAddresses2 = <span class="keyword">new</span> CellRangeAddress(<span class="number">15</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">        CellRangeAddress cellAddresses3 = <span class="keyword">new</span> CellRangeAddress(<span class="number">16</span>, <span class="number">16</span>, <span class="number">2</span>, <span class="number">6</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses2);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses3);</span><br><span class="line">        <span class="comment">//设值</span></span><br><span class="line">        sheet.createRow(<span class="number">15</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;1、通用设备包括计算机、网络设备、安全设备、终端设备、存储设备、电话机、传真机、复印机、投影仪、多功能一体机、车辆、音像设备、电子白板、LED显示屏、触控一体机、图书等；2、专用设备包括电梯、制冷空调、锅炉、空气能、后续安装的电机、变压器、电源设备、直饮供水设备、乐器、舞台设备、多功能厅设备、田径设备、球类设备、体育运动辅助设备等。&quot;</span>);</span><br><span class="line">        sheet.createRow(<span class="number">16</span>).createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;填表说明：加黄线的不要填写，更不要更改公式&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置表格宽度</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">32</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">10</span>,<span class="number">256</span>*<span class="number">35</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>表五编写成功</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">minban_biaowu</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line">        String sheetName = <span class="string">&quot;三年账册相关科目表5&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line">        <span class="comment">//编写第一行</span></span><br><span class="line">        <span class="comment">//编写第一行的内容</span></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">0</span>);</span><br><span class="line">        XSSFCell cell = row.createCell(<span class="number">0</span>);</span><br><span class="line">        cell.setCellValue(<span class="string">&quot;表五&quot;</span>);</span><br><span class="line">        <span class="comment">//第二行是从A到L有一个合并单元格</span></span><br><span class="line">        CellRangeAddress cellAddresses = <span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses);</span><br><span class="line">        XSSFRow row1 = sheet.createRow(<span class="number">1</span>);</span><br><span class="line">        XSSFCell cell1 = row1.createCell(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        cell1.setCellValue(<span class="string">&quot;新乡市xxx学校账册基本情况调查表&quot;</span>);</span><br><span class="line">        <span class="comment">//第三行是从A到L有一个合并单元格</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//第思维航的第一个合并列</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="comment">//又有一系列小的横向合并</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">6</span>;i=i+<span class="number">3</span>)&#123;</span><br><span class="line">            CellRangeAddress cellAddresses1 = <span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>, <span class="number">2</span>, i+<span class="number">1</span>, i+<span class="number">3</span>);</span><br><span class="line">            sheet.addMergedRegion(cellAddresses1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添值</span></span><br><span class="line">        sheet.createRow(<span class="number">2</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;科目&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;2019年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;2020年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">7</span>).setCellValue(<span class="string">&quot;2021年&quot;</span>);</span><br><span class="line">        XSSFRow row4 = sheet.createRow(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j&lt;=<span class="number">9</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row4.createCell(j).setCellValue(<span class="string">&quot;凭证类型&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                row4.createCell(j).setCellValue(<span class="string">&quot;账册号&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row4.createCell(j).setCellValue(<span class="string">&quot;金额&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        row4.createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对第一列进行添值</span></span><br><span class="line">        String[] listC1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、维修费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;4、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;5、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、低值易耗品&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;4、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;5、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;三、其它支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;4、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;5、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;四、财务费用&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;4、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;5、&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;=<span class="number">23</span>;i++)&#123;</span><br><span class="line">            sheet.createRow(i+<span class="number">4</span>).createCell(<span class="number">0</span>).setCellValue(listC1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//备注行有很多的合并单元格 这些单元格的合并都是五行</span></span><br><span class="line">        <span class="keyword">int</span>[] list1 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">4</span>,<span class="number">10</span>,<span class="number">16</span>,<span class="number">22</span>&#125;;</span><br><span class="line">        String[] list2 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;1、统计大于该科目金额20%的明细。2、凭证类型填写发票、合同（协议）、白条（收据）&quot;</span> ,</span><br><span class="line"></span><br><span class="line">                        <span class="string">&quot;1、统计大于该科目金额20%的明细。2、凭证类型填写发票、合同（协议）、白条（收据）&quot;</span> ,</span><br><span class="line"></span><br><span class="line">                        <span class="string">&quot;1、如果金额大于公用支出20%，请按内容分类。 如果金额小于公用支出20%，不填写。2、凭证类型填写发票、合同（协议）、白条（收据）&quot;</span> ,</span><br><span class="line"></span><br><span class="line">                        <span class="string">&quot;1、统计还款利息。2、凭证类型填写发票、合同（协议）、白条（收据）.&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;=<span class="number">3</span>;i++)&#123;</span><br><span class="line">            sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(list1[i],list1[i]+<span class="number">5</span>,<span class="number">10</span>,<span class="number">10</span>));</span><br><span class="line">            sheet.getRow(list1[i]).createCell(<span class="number">10</span>).setCellValue(list2[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置列表的行宽</span></span><br><span class="line"></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">17</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">10</span>,<span class="number">256</span>*<span class="number">66</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2022-3-2"><a href="#2022-3-2" class="headerlink" title="2022/3/2"></a>2022/3/2</h2><p>民办表编写结束</p>
<p>教育参数表</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">minban_jiaoyuhesuanbiao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line">        String sheetName = <span class="string">&quot;教育核定表&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对第一行进行合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">4</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">4</span>));</span><br><span class="line">        <span class="comment">//给第一、二行添值</span></span><br><span class="line">        sheet.createRow(<span class="number">0</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;表一&quot;</span>);</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;XXX学校2021年度教育培养、住宿成本生均核定表&quot;</span>);</span><br><span class="line">        <span class="comment">//给第一列添值</span></span><br><span class="line">        String[] list1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">              <span class="string">&quot;项目&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;一、基本情况&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（一）标准学生数&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（二）教职工&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（三）占地面积&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（四）建筑面积&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;二、成本构成&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（一）人员支出&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（二）租赁费&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（三）财务费用&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（四）商品和服务支出&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（五）固定资产折旧&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;三、生均成本&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength = list1.length;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;listLength;i++)&#123;</span><br><span class="line">            sheet.createRow(i+<span class="number">2</span>).createCell(<span class="number">0</span>).setCellValue(list1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;核定数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;教育成本核定数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;住宿成本核定数&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调整列表的宽</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">33</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>成分分析表</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">minban_chengfenfenxibiao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String sheetName = <span class="string">&quot;成本分析表&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;新乡市xxx学校成本分析表&quot;</span>);</span><br><span class="line">        <span class="comment">//老朋友 一系列合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给合并过的单元格设值</span></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">2</span>);</span><br><span class="line">        row.createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        row.createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;成本核算结果&quot;</span>);</span><br><span class="line">        row.createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;项目占比&quot;</span>);</span><br><span class="line">        row.createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;公充值&quot;</span>);</span><br><span class="line">        row.createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;是否合理&quot;</span>);</span><br><span class="line">        row.createCell(<span class="number">6</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line">        XSSFRow row1 = sheet.createRow(<span class="number">3</span>);</span><br><span class="line">        row1.createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;下限&quot;</span>);</span><br><span class="line">        row1.createCell(<span class="number">5</span>).setCellValue(<span class="string">&quot;上限&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">        String[] list = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、人员支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、租赁费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;三、财务费用&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;四、商品和服务支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;五、固定资产折旧&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;六、成本合计&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、高中&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength = list.length;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;listLength;i++)&#123;</span><br><span class="line">            sheet.createRow(i+<span class="number">4</span>).createCell(<span class="number">0</span>).setCellValue(list[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sheet.getRow(<span class="number">5</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.65-0.75&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">6</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.65-0.75&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">7</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.65-0.75&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        sheet.getRow(<span class="number">9</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.08-0.12&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">10</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.08-0.12&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">11</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.08-0.12&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        sheet.getRow(<span class="number">13</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.01-0.05&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">14</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.01-0.05&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">15</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.01-0.05&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.getRow(<span class="number">17</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.10-0.20&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">18</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.10-0.20&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">19</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.10-0.20&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.getRow(<span class="number">21</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.08-0.15&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">22</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.08-0.15&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">23</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;0.08-0.15&quot;</span>);</span><br><span class="line">        <span class="comment">//设置表的列宽</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">23</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">1</span>,<span class="number">256</span>*<span class="number">23</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">2</span>,<span class="number">256</span>*<span class="number">23</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">4</span>,<span class="number">256</span>*<span class="number">23</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">5</span>,<span class="number">256</span>*<span class="number">23</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">3</span>,<span class="number">256</span>*<span class="number">17</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>教育核算表</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">minban_jiaoyuhesuanbiao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line">        String sheetName = <span class="string">&quot;教育核定表&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对第一行进行合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">4</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">4</span>));</span><br><span class="line">        <span class="comment">//给第一、二行添值</span></span><br><span class="line">        sheet.createRow(<span class="number">0</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;表一&quot;</span>);</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;XXX学校2021年度教育培养、住宿成本生均核定表&quot;</span>);</span><br><span class="line">        <span class="comment">//给第一列添值</span></span><br><span class="line">        String[] list1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">              <span class="string">&quot;项目&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;一、基本情况&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（一）标准学生数&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（二）教职工&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（三）占地面积&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（四）建筑面积&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;二、成本构成&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（一）人员支出&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（二）租赁费&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（三）财务费用&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;1、小学&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;2、初中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;3、高中&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（四）商品和服务支出&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;（五）固定资产折旧&quot;</span> ,</span><br><span class="line">                      <span class="string">&quot;三、生均成本&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength = list1.length;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;listLength;i++)&#123;</span><br><span class="line">            sheet.createRow(i+<span class="number">2</span>).createCell(<span class="number">0</span>).setCellValue(list1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;核定数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;教育成本核定数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;住宿成本核定数&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调整列表的宽</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">33</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>参数表</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">minban_canshubiao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j,i;</span><br><span class="line">        String sheetName = <span class="string">&quot;参数表&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line">        sheet.createRow(<span class="number">0</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;表：一&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">14</span>));</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;新乡市民办学校教育定价成本监审参数表&quot;</span>);</span><br><span class="line">        <span class="comment">//同理 有一个一系列的合并单元格</span></span><br><span class="line">        <span class="keyword">int</span>[] list1 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">            sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,list1[i],list1[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">2</span>);</span><br><span class="line">        String[] list2 = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;项          目&quot;</span>,<span class="string">&quot;栏次及关系&quot;</span>,<span class="string">&quot;总监审数&quot;</span>,<span class="string">&quot;教育生均监审数&quot;</span>,<span class="string">&quot;住宿生均监审数&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">            row.createCell(list1[i]).setCellValue(list2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        row.createCell(<span class="number">14</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;2019年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">5</span>).setCellValue(<span class="string">&quot;2020年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">8</span>).setCellValue(<span class="string">&quot;2021年&quot;</span>);</span><br><span class="line">        XSSFRow row1 = sheet.createRow(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span> ( j = <span class="number">1</span>;j&lt;=<span class="number">9</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row1.createCell(j+<span class="number">1</span>).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                row1.createCell(j+<span class="number">1</span>).setCellValue(<span class="string">&quot;核增核减数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row1.createCell(j+<span class="number">1</span>).setCellValue(<span class="string">&quot;核定数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//给第一列和备注列添值</span></span><br><span class="line">        String[] list3 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、固定资产利用率&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、教学建筑面积占比&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、住宿建筑面积占比&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;三、行管分摊率&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;四、教职工占比&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;小学&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;初中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;高中&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;五、平均工资&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;六、招待费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;七、培训费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;八、工会经费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;九、维修费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;十、其它支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;十一、福利费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;十二、&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        String[] list4 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;不得低于80%。&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;均为1正确&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;不得明显高于公办水准（标准120%）&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;标准：小学1：19&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;标准：初中1：13.5&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;标准：高中1：12.5&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;统计局：2019年71027元；2020年72261元；2021年？&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;年收入0.5%&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;人员工资总额的8%&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;人员工资总额的2%&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;不得高于固定资产原值的2%&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;不得高于公用支出（不含维修费）20%&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;人员工资总额的14%&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> list1Length = list3.length;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt; list1Length;i++)&#123;</span><br><span class="line">            sheet.createRow(i+<span class="number">4</span>).createCell(<span class="number">0</span>).setCellValue(list3[i]);</span><br><span class="line">            sheet.getRow(i+<span class="number">4</span>).createCell(<span class="number">1</span>).setCellValue(i+<span class="number">1</span>);</span><br><span class="line">            sheet.getRow(i+<span class="number">4</span>).createCell(<span class="number">14</span>).setCellValue(list4[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添加几个常数</span></span><br><span class="line"></span><br><span class="line">            sheet.getRow(<span class="number">12</span>).createCell(<span class="number">2</span>).setCellValue(<span class="number">19</span>);</span><br><span class="line">            sheet.getRow(<span class="number">12</span>).createCell(<span class="number">5</span>).setCellValue(<span class="number">19</span>);</span><br><span class="line">            sheet.getRow(<span class="number">12</span>).createCell(<span class="number">8</span>).setCellValue(<span class="number">19</span>);</span><br><span class="line"></span><br><span class="line">            sheet.getRow(<span class="number">13</span>).createCell(<span class="number">2</span>).setCellValue(<span class="number">13.5</span>);</span><br><span class="line">            sheet.getRow(<span class="number">13</span>).createCell(<span class="number">5</span>).setCellValue(<span class="number">13.5</span>);</span><br><span class="line">            sheet.getRow(<span class="number">13</span>).createCell(<span class="number">8</span>).setCellValue(<span class="number">13.5</span>);</span><br><span class="line"></span><br><span class="line">            sheet.getRow(<span class="number">14</span>).createCell(<span class="number">2</span>).setCellValue(<span class="number">12.5</span>);</span><br><span class="line">            sheet.getRow(<span class="number">14</span>).createCell(<span class="number">5</span>).setCellValue(<span class="number">12.5</span>);</span><br><span class="line">            sheet.getRow(<span class="number">14</span>).createCell(<span class="number">8</span>).setCellValue(<span class="number">12.5</span>);</span><br><span class="line">            <span class="comment">//设置表宽</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">24</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2022-3-3"><a href="#2022-3-3" class="headerlink" title="2022/3/3"></a>2022/3/3</h2><p>公办的表都写好了</p>
<p><strong>封面</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.public_schools;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">cover</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line">        String sheetName = <span class="string">&quot;封面&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置民办封面</span></span><br><span class="line">        <span class="comment">//创建一个sheet</span></span><br><span class="line">        <span class="comment">//封面的第一行是空着的</span></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        XSSFRow xssfRow;</span><br><span class="line">        XSSFCell xssfCell;</span><br><span class="line">        <span class="comment">// 申请第一行 行和列都是从零开始的</span></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">0</span>);</span><br><span class="line">        CellRangeAddress cellAddresses1 = <span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses1);</span><br><span class="line">        <span class="comment">//第一行是四个cell</span></span><br><span class="line">        <span class="keyword">for</span> ( i = <span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            XSSFCell cell = row.createCell(i);</span><br><span class="line">            <span class="comment">//第一行都是空着的 因此我们也把这个值设成空值</span></span><br><span class="line">            cell.setCellValue(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//下边编写第二行</span></span><br><span class="line">        <span class="comment">//第二行只用一列</span></span><br><span class="line">        <span class="comment">//设置单元格的合并</span></span><br><span class="line">        CellRangeAddress cellAddresses = <span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses);</span><br><span class="line">        XSSFRow row1 = sheet.createRow(<span class="number">1</span>);</span><br><span class="line">        XSSFCell cell = row1.createCell(<span class="number">0</span>);</span><br><span class="line">        cell.setCellValue(<span class="string">&quot;新乡市民办学校教育定价成本监审表&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第三行是一个空格行</span></span><br><span class="line">        CellRangeAddress cellAddresses2 = <span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses2);</span><br><span class="line">        XSSFRow row2 = sheet.createRow(<span class="number">2</span>);</span><br><span class="line">        XSSFCell cell1 = row2.createCell(<span class="number">0</span>);</span><br><span class="line">        cell1.setCellValue(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">//为第五后的合并单元格</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">3</span>;i&lt;=<span class="number">11</span>;i++)&#123;</span><br><span class="line">            CellRangeAddress cellAddresses4 = <span class="keyword">new</span> CellRangeAddress(i, i, <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">            sheet.addMergedRegion(cellAddresses4);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//第五航到第12行</span></span><br><span class="line">        String[] name = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;学 校 名 称&quot;</span>,<span class="string">&quot;法 定人 代 表&quot;</span>,<span class="string">&quot;学 校 地 址&quot;</span>,<span class="string">&quot;邮 政 编 码&quot;</span>,<span class="string">&quot;财务负责人&quot;</span>,<span class="string">&quot;填  表  人&quot;</span>,<span class="string">&quot;电     话  &quot;</span>,<span class="string">&quot;邮     箱&quot;</span>,<span class="string">&quot;传     真 &quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">3</span>;i&lt;=<span class="number">11</span>; i++)&#123;</span><br><span class="line">            XSSFRow row4 = sheet.createRow(i);</span><br><span class="line">            XSSFCell cell4 = row4.createCell(<span class="number">1</span>);</span><br><span class="line">            cell4.setCellValue(name[i-<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//第十三行是空格行</span></span><br><span class="line">        sheet.createRow(<span class="number">12</span>);</span><br><span class="line">        <span class="comment">//第十四行</span></span><br><span class="line">        XSSFRow row3 = sheet.createRow(<span class="number">13</span>);</span><br><span class="line">        XSSFCell cell2 = row3.createCell(<span class="number">3</span>);</span><br><span class="line">        cell2.setCellValue(<span class="string">&quot;学校盖章&quot;</span>);</span><br><span class="line">        CellRangeAddress cellAddresses3 = <span class="keyword">new</span> CellRangeAddress(<span class="number">13</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">        sheet.addMergedRegion(cellAddresses3);</span><br><span class="line">        <span class="comment">//第十五行</span></span><br><span class="line"></span><br><span class="line">        XSSFRow row4 = sheet.createRow(<span class="number">14</span>);</span><br><span class="line">        XSSFCell cell3 = row4.createCell(<span class="number">3</span>);</span><br><span class="line">        cell3.setCellValue(<span class="string">&quot;          年&quot;</span>);</span><br><span class="line"></span><br><span class="line">        XSSFCell cell4 = row4.createCell(<span class="number">4</span>);</span><br><span class="line">        cell4.setCellValue(<span class="string">&quot;     月           日&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//一下是对表格的宽度等的优化</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置列宽</span></span><br><span class="line"></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>, <span class="number">258</span>*<span class="number">23</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">1</span>, <span class="number">258</span>*<span class="number">23</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">3</span>, <span class="number">258</span>*<span class="number">13</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">4</span>, <span class="number">258</span>*<span class="number">13</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">5</span>, <span class="number">258</span>*<span class="number">28</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置行高</span></span><br><span class="line">        sheet.setDefaultRowHeight((<span class="keyword">short</span>) <span class="number">456</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>基本表1</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.public_schools;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sheet01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line">        String sheetName = <span class="string">&quot;基本情况表1&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置表格的第一行</span></span><br><span class="line">        sheet.createRow(<span class="number">0</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;表：一&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置第二行 有一个大的合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">9</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">9</span>));</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;XXX学校住宿定价成本监审学生人数调查表&quot;</span>);</span><br><span class="line">        sheet.createRow(<span class="number">2</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;学校名称：（盖章）            &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//老朋友 一系列的小合并单元格</span></span><br><span class="line">        <span class="comment">//老朋友 一系列合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">9</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">8</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//        又有一系列小的横向合并</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i=i+<span class="number">2</span>)&#123;</span><br><span class="line">            CellRangeAddress cellAddresses1 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">3</span>, i+<span class="number">2</span>, i+<span class="number">3</span>);</span><br><span class="line">            sheet.addMergedRegion(cellAddresses1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添值</span></span><br><span class="line">        sheet.createRow(<span class="number">3</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;项          目&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;栏次及关系&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">8</span>).setCellValue(<span class="string">&quot;总监审数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">9</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;2019年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;2020年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">6</span>).setCellValue(<span class="string">&quot;2021年&quot;</span>);</span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;<span class="number">6</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row.createCell(j+<span class="number">2</span>).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row.createCell(j+<span class="number">2</span>).setCellValue(<span class="string">&quot;核定数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置第一列的值</span></span><br><span class="line">        String[] list1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、规模房间数（间）&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;6人/间&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;8人/间&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;10人/间&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;三、规模人数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;6人/间&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;8人/间&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;10人/间&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;四、实际房间数（间&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;6人/间&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;8人/间&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;10人/间&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;五、实际在校平均学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;其中：年初学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;         年末学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;六、实际在校平均住宿标准学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;其中：年初学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;         年末学生数&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength = list1.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> h = <span class="number">1</span>; h &lt;= listLength;h++)&#123;</span><br><span class="line">            sheet.createRow(h+<span class="number">4</span>).createCell(<span class="number">0</span>).setCellValue(list1[h-<span class="number">1</span>]);</span><br><span class="line">            sheet.getRow(h+<span class="number">4</span>).createCell(<span class="number">1</span>).setCellValue(h);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在备注最后有两个合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">17</span>,<span class="number">19</span>,<span class="number">9</span>,<span class="number">9</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">20</span>,<span class="number">22</span>,<span class="number">9</span>,<span class="number">9</span>));</span><br><span class="line">        sheet.getRow(<span class="number">17</span>).createCell(<span class="number">9</span>).setCellValue(<span class="string">&quot;按实际在校学生人数填写。&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">20</span>).createCell(<span class="number">9</span>).setCellValue(<span class="string">&quot;按按实际在校住宿学生人数填写。&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置单元格的宽度</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">17</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">2</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">3</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">4</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">5</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">6</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">7</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">8</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">9</span>,<span class="number">256</span>*<span class="number">17</span>+<span class="number">184</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>基本表2</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.public_schools;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sheet02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String sheetName = <span class="string">&quot;基本情况表2&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line">        sheet.createRow(<span class="number">0</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;表：二&quot;</span>);</span><br><span class="line">        <span class="comment">//编写第二行</span></span><br><span class="line">        <span class="comment">//设置第二行 有一个大的合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">9</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">9</span>));</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;XXX学校住宿定价成本监审学生人数调查表&quot;</span>);</span><br><span class="line">        sheet.createRow(<span class="number">2</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;学校名称：（盖章）                                                                                                  单位：人学校名称：（盖章）                                                                                                  单位：人&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//老朋友 一系列的小合并单元格</span></span><br><span class="line">        <span class="comment">//老朋友 一系列合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">9</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">8</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//        又有一系列小的横向合并</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i=i+<span class="number">2</span>)&#123;</span><br><span class="line">            CellRangeAddress cellAddresses1 = <span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>, <span class="number">3</span>, i+<span class="number">2</span>, i+<span class="number">3</span>);</span><br><span class="line">            sheet.addMergedRegion(cellAddresses1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添值</span></span><br><span class="line">        sheet.createRow(<span class="number">3</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;项          目&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;栏次及关系&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">8</span>).setCellValue(<span class="string">&quot;总监审数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">9</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;2019年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;2020年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">6</span>).setCellValue(<span class="string">&quot;2021年&quot;</span>);</span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;<span class="number">6</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row.createCell(j+<span class="number">2</span>).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row.createCell(j+<span class="number">2</span>).setCellValue(<span class="string">&quot;核定数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//给第一列填值</span></span><br><span class="line">        String[] list1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、教职工总数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（一）宿管人员数 &quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（二）维修人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（三）其它人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、总建筑面积&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（一）教学建筑面积&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（二）住宿面积&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（三）餐厅面积&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;三、固定资产原值&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;四、现执行收费标准&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength = list1.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> h = <span class="number">1</span>; h &lt;= listLength;h++)&#123;</span><br><span class="line">            sheet.createRow(h+<span class="number">4</span>).createCell(<span class="number">0</span>).setCellValue(list1[h-<span class="number">1</span>]);</span><br><span class="line">            sheet.getRow(h+<span class="number">4</span>).createCell(<span class="number">1</span>).setCellValue(h);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//备注行由合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">9</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        sheet.getRow(<span class="number">6</span>).createCell(<span class="number">9</span>).setCellValue(<span class="string">&quot;其它人员：指保洁、保安等。此表格视情况而定，一般情况下不申报，特殊情况下可以研究。&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.getRow(<span class="number">13</span>).createCell(<span class="number">9</span>).setCellValue(<span class="string">&quot;单位：万元&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">14</span>).createCell(<span class="number">9</span>).setCellValue(<span class="string">&quot;单位：元/生.年&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">17</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">2</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">3</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">4</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">5</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">6</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">7</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">8</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">184</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">9</span>,<span class="number">256</span>*<span class="number">17</span>+<span class="number">184</span>);</span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>基本表3</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.public_schools;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sheet03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String sheetName = <span class="string">&quot;三年相关科目调查表3&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line"></span><br><span class="line">        sheet.createRow(<span class="number">0</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;表三&quot;</span>);</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">10</span>));</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;新乡市xxx学校财政审核后账册中相关科目基本情况表&quot;</span>);</span><br><span class="line">        <span class="comment">//创建我们的老朋友 一系列小合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>));</span><br><span class="line">        sheet.createRow(<span class="number">2</span>).createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;2019年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;2020年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">7</span>).setCellValue(<span class="string">&quot;2021年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j&lt;=<span class="number">9</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;核增核减数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;审定数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建第一列</span></span><br><span class="line">        String[] list1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、人员支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（一）宿管人员数 &quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（二）维修人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（三）其它人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、公用支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、维修费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、水费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、电费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;4、垃圾清运费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;5、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;6、其它费用&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;三、合计&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength = list1.length;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">1</span>;i&lt;=listLength;i++)&#123;</span><br><span class="line">            sheet.createRow(i+<span class="number">3</span>).createCell(<span class="number">0</span>).setCellValue(list1[i-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">5</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">6</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">7</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">5</span>,<span class="number">7</span>,<span class="number">10</span>,<span class="number">10</span>));</span><br><span class="line">        sheet.getRow(<span class="number">5</span>).createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;提供三类人员工资表&quot;</span>);</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">8</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">10</span>));</span><br><span class="line">        sheet.getRow(<span class="number">8</span>).createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;根据实际情况，可增加科目或另行加行。&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置单元格的宽度</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">14</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">1</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">2</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">3</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">4</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">5</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">6</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">7</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">8</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">9</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">10</span>,<span class="number">256</span>*<span class="number">14</span>+<span class="number">186</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>基本表4</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.public_schools;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sheet04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String sheetName = <span class="string">&quot;三年账册相关科目表4&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line">        <span class="comment">//设置第一行第一列</span></span><br><span class="line">        sheet.createRow(<span class="number">0</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;表：四&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">10</span>));</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;新乡市xxx学校账册相关科目基本情况调查表&quot;</span>);</span><br><span class="line">        <span class="comment">//老朋友来喽 一系列合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        sheet.createRow(<span class="number">2</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;科目&quot;</span>);</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>));</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;2019年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;2020年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">7</span>).setCellValue(<span class="string">&quot;2021年&quot;</span>);</span><br><span class="line">        sheet.createRow(<span class="number">3</span>).createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"></span><br><span class="line">        XSSFRow row = sheet.getRow(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j&lt;=<span class="number">9</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;凭证类型&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;账册号&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;金额&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置第一列</span></span><br><span class="line">        String[] list1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、维修费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;4、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;5、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;6、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;7、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;8、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;9、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;10、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、其它支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;4、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;5、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;6、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;7、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;8、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;9、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;10、&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength = list1.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span> ;i&lt;= listLength;i++)&#123;</span><br><span class="line">            sheet.createRow(i+<span class="number">3</span>).createCell(<span class="number">0</span>).setCellValue(list1[i-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">4</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">10</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">15</span>,<span class="number">25</span>,<span class="number">10</span>,<span class="number">10</span>));</span><br><span class="line">        sheet.getRow(<span class="number">4</span>).createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;1、统计大于该科目金额20%的明细。2、凭证类型填写发票、合同（协议）、白条（收据）&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">15</span>).createCell(<span class="number">10</span>).setCellValue(<span class="string">&quot;1、如果金额大于公用支出20%，请按内容分类。 如果金额小于公用支出20%，不填写。2、凭证类型填写发票、合同（协议）、白条（收据）&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">1</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">2</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">3</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">4</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">6</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">7</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">8</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">9</span>,<span class="number">256</span>*<span class="number">10</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">10</span>,<span class="number">256</span>*<span class="number">12</span>+<span class="number">186</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>附表1</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.public_schools;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sheet05</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line">        String sheetName = <span class="string">&quot;住宿成本调查核算表&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line">        sheet.createRow(<span class="number">0</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;附件1&quot;</span>);</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">14</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">14</span>));</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;XXXXXX生均教育价格成本调查核算表&quot;</span>);</span><br><span class="line">        sheet.createRow(<span class="number">2</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;学校名称：（盖章）                                                                                        单位：元                                &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//啊哈哈哈 一系列合并单元格来喽~~~</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">11</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">4</span>,<span class="number">14</span>,<span class="number">14</span>));</span><br><span class="line">        sheet.createRow(<span class="number">3</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;项       目&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;栏次及关系&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">11</span>).setCellValue(<span class="string">&quot;2021年度成本费用核定数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">14</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">10</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">3</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">13</span>));</span><br><span class="line"></span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;2019年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">5</span>).setCellValue(<span class="string">&quot;2020年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">8</span>).setCellValue(<span class="string">&quot;2021年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">3</span>).createCell(<span class="number">12</span>).setCellValue(<span class="string">&quot;2021年度住宿成本核定数&quot;</span>);</span><br><span class="line"></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>;j&lt;=<span class="number">10</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;核增核减数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;审定数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        row.createCell(<span class="number">12</span>).setCellValue(<span class="string">&quot;住宿成本&quot;</span>);</span><br><span class="line">        row.createCell(<span class="number">13</span>).setCellValue(<span class="string">&quot;生均结论&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置第一列</span></span><br><span class="line">        String[] list1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、人员支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（一）宿管人员数 &quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（二）维修人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（三）其它人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、公用支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、维修费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、水费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、电费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;4、垃圾清运费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;5、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;6、其它费用&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;十二、生均合计&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength = list1.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;listLength;i++)&#123;</span><br><span class="line">            sheet.createRow(i+<span class="number">5</span>).createCell(<span class="number">0</span>).setCellValue(list1[i]);</span><br><span class="line">            sheet.getRow(i+<span class="number">5</span>).createCell(<span class="number">1</span>).setCellValue(i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">5</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">13</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">9</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">13</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">10</span>,<span class="number">15</span>,<span class="number">14</span>,<span class="number">14</span>));</span><br><span class="line">        sheet.getRow(<span class="number">10</span>).createCell(<span class="number">14</span>).setCellValue(<span class="string">&quot;按建筑面积比进行分摊&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建列表的宽</span></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">13</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">11</span>+<span class="number">186</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>附表2</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.public_schools;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sheet06</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line">        String sheetName = <span class="string">&quot;住宿成本报告核定表&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line"></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">4</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">4</span>));</span><br><span class="line"></span><br><span class="line">        sheet.createRow(<span class="number">0</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;表一&quot;</span>);</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;XXX学校2021年度住宿成本生均核定表&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.createRow(<span class="number">2</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;项目&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;栏次及关系&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">3</span>).setCellValue(<span class="string">&quot;核定数&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">4</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String[] list1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、基本情况&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（一）标准学生数&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;其中：年初学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;         年末学生数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（二）宿舍管理人员&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（三）宿舍建筑面积&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（四）标准间（人/间）&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（五）房间数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、成本构成&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（一）人员支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、宿管人员数 &quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、维修人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、其它人员数&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;（二）公用支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;1、维修费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;2、水费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;3、电费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;4、垃圾清运费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;5、&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;6、其它费用&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;三、生均成本&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength = list1.length;</span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;listLength;i++)&#123;</span><br><span class="line">            sheet.createRow(i+<span class="number">3</span>).createCell(<span class="number">0</span>).setCellValue(list1[i]);</span><br><span class="line">            sheet.getRow(i+<span class="number">3</span>).createCell(<span class="number">1</span>).setCellValue(i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">19</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">1</span>,<span class="number">256</span>*<span class="number">11</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">2</span>,<span class="number">256</span>*<span class="number">14</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">3</span>,<span class="number">256</span>*<span class="number">14</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">4</span>,<span class="number">256</span>*<span class="number">14</span>+<span class="number">186</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>附表3</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.public_schools;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sheet07</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">setSheet</span><span class="params">(XSSFWorkbook sheets)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String sheetName = <span class="string">&quot;参数表&quot;</span>;</span><br><span class="line">        XSSFSheet sheet = sheets.createSheet(sheetName);</span><br><span class="line"></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">12</span>));</span><br><span class="line">        sheet.createRow(<span class="number">1</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;新乡XXX学校住宿定价成本监审参数表&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//啊哈哈哈 一系列的合并单元格</span></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">11</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">12</span>));</span><br><span class="line"></span><br><span class="line">        sheet.createRow(<span class="number">2</span>).createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;项          目&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;栏次及关系&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">11</span>).setCellValue(<span class="string">&quot;结论&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">12</span>).setCellValue(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>));</span><br><span class="line">        sheet.addMergedRegion(<span class="keyword">new</span> CellRangeAddress(<span class="number">2</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">10</span>));</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;2019年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">5</span>).setCellValue(<span class="string">&quot;2020年&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">2</span>).createCell(<span class="number">8</span>).setCellValue(<span class="string">&quot;2021年&quot;</span>);</span><br><span class="line"></span><br><span class="line">        XSSFRow row = sheet.createRow(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>;j&lt;=<span class="number">10</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;申报数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (j%<span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;核增核减数&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                row.createCell(j).setCellValue(<span class="string">&quot;审定数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建第一列</span></span><br><span class="line">        String[] list1 = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">                <span class="string">&quot;一、固定资产利用率&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;二、住宿建筑面积占比&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;三、住宿学生占比&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;四、维修费&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;五、其它支出&quot;</span> ,</span><br><span class="line">                        <span class="string">&quot;六、&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> listLength = list1.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= listLength;j++)&#123;</span><br><span class="line"></span><br><span class="line">            sheet.createRow(j+<span class="number">3</span>).createCell(<span class="number">0</span>).setCellValue(list1[j-<span class="number">1</span>]);</span><br><span class="line">            sheet.getRow(j+<span class="number">3</span>).createCell(<span class="number">1</span>).setCellValue(j);</span><br><span class="line">        &#125;</span><br><span class="line">        sheet.getRow(<span class="number">4</span>).createCell(<span class="number">12</span>).setCellValue(<span class="string">&quot;不得低于80%。&quot;</span>);</span><br><span class="line">        sheet.getRow(<span class="number">7</span>).createCell(<span class="number">12</span>).setCellValue(<span class="string">&quot;不得高于固定资产原值的2%&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sheet.setColumnWidth(<span class="number">0</span>,<span class="number">256</span>*<span class="number">15</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">2</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">3</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">4</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">5</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">6</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">7</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">8</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">9</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">10</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">11</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line">        sheet.setColumnWidth(<span class="number">12</span>,<span class="number">256</span>*<span class="number">9</span>+<span class="number">186</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>静态资源导入以及thymeleaf</title>
    <url>/2022/04/06/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%AF%BC%E5%85%A5%E4%BB%A5%E5%8F%8Athymeleaf/</url>
    <content><![CDATA[<h1 id="静态资源导入以及thymeleaf"><a href="#静态资源导入以及thymeleaf" class="headerlink" title="静态资源导入以及thymeleaf"></a>静态资源导入以及thymeleaf</h1><p>因为SpringBoot是在面方法中内置Tomcat,而且它打的包是jar包，因此是没有产生对应的web。那么我们的静态资源放到哪里呐？</p>
<h2 id="静态资源导入"><a href="#静态资源导入" class="headerlink" title="静态资源导入"></a>静态资源导入</h2><p>在SpringBoot中有一个XXproperties类，是存放着我们的默认的配置的，当然包括我们的静态资源</p>
<p>这里静态资源的导入一首页为例。</p>
<p>通过那个类，我们可以知道SpringBoot中放置静态资源的有三个地方</p>
<ul>
<li>classpath: /resource/</li>
<li>classpath: /static/</li>
<li>classpath: /public/</li>
<li>classpath:/templates/</li>
</ul>
<p>在上述的几个地方创建名为<code>index.html</code>的文件，会被默认为是主页</p>
<p><strong>注意：</strong></p>
<p>在其他的文件夹下的网页是可以随意访问的，但是在<code>templates</code>文件夹下的html文件只能通过controller层跳转时候访问到。</p>
<h2 id="ThyMeleaf"><a href="#ThyMeleaf" class="headerlink" title="ThyMeleaf"></a>ThyMeleaf</h2><p>这个是一种新式的取值的语言，ThyMeleaf之于SpringBoot相当于JSP之于SSM。</p>
<p>也是取值的一种方式，SpringBoot为它提供了Properties类，也就是说是有默认配置的。</p>
<p>ThyMeleaf的默认配置为，在<code>templates</code>文件夹下的<code>.html</code>文件。</p>
<p>我们可以使用thymeleaf代替所有的Html标签来使用。</p>
<h3 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h3><p><strong>引入依赖</strong></p>
<p>thymeleaf需要引入依赖，在HTML的头文件里</p>
<p><code>&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</code></p>
<p>语法一会儿学，现在只是进行一个测试</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>thymeleafTest<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p> 非官方中文文档<a href="https://www.docs4dev.com/docs/zh/thymeleaf/3.0/reference/using_thymeleaf.html#introducing-thymeleaf">Thymeleaf 教程 - Thymeleaf | Docs4dev</a> </p>
<p>  在前后端分离时代，很可能前端是别去写的，因此这里我放弃学习这个工具的语法。</p>
]]></content>
  </entry>
  <entry>
    <title>阶梯计划开发历程</title>
    <url>/2022/09/30/%E9%98%B6%E6%A2%AF%E8%AE%A1%E5%88%92%E5%BC%80%E5%8F%91%E5%8E%86%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="开发历程"><a href="#开发历程" class="headerlink" title="开发历程"></a>开发历程</h1><h2 id="起点（2022-9-27）"><a href="#起点（2022-9-27）" class="headerlink" title="起点（2022/9/27）"></a>起点（2022/9/27）</h2><p>今晚，在某学习平台学习党的先进知识的时候，偶然翻阅到一篇文章</p>
<p><a href="https://imgse.com/i/xu6D4U"><img src="https://s1.ax1x.com/2022/09/30/xu6D4U.jpg" alt="xu6D4U.jpg"></a></p>
<p>作为名在校大学生，我是能够看懂这些文字的，但是理解意思上很吃力。</p>
<p>对里边的一些特有名词比如“xx个xx”，我是没有理解的。是我个人党的基本理论掌握不牢，作者在写这篇文章时直接使用特有名词来缩短文章篇幅的行为是可以理解的。</p>
<p>解决这个问题的方法有很多，比如建议所有作者在引用完专有名词后在文章末尾对专有名词进行解释。如《毛泽东选集》的每一章，和《邓小平文选》的文章后边都是有做注释的。但是改变别人的方法不可取，也是比较难实现的。</p>
<p>因此我想到，用浏览器是可以帮助我的，但是不能帮助我记录，且很多的浏览器是对知识服务收费的。因此我萌生了自己写一个==专有名词查询网站==的想法。</p>
<h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p>该网站最启初版，是有两个部分组成，第一部分是像浏览器一样的搜索，查询平台（前台），是给所有用户使用的。</p>
<p><a href="https://imgse.com/i/xu6cv9"><img src="https://s1.ax1x.com/2022/09/30/xu6cv9.png" alt="xu6cv9.png"></a></p>
<p>像这种</p>
<p>另一部分是后台管理员页面，用来对词条进行查看和修改</p>
<p><a href="https://imgse.com/i/xu62uR"><img src="https://s1.ax1x.com/2022/09/30/xu62uR.png" alt="xu62uR.png"></a></p>
<p><a href="https://imgse.com/i/xu6RD1"><img src="https://s1.ax1x.com/2022/09/30/xu6RD1.png" alt="xu6RD1.png"></a></p>
<p>类似于超时订单系统</p>
<h3 id="技术以及来源"><a href="#技术以及来源" class="headerlink" title="技术以及来源"></a>技术以及来源</h3><p><strong>后端：</strong>使用SSM框架，由我本人手写，数据库选用mysql</p>
<p><strong>前端：</strong>使用网上搜索到的免费的前台和后台代码进行改进</p>
<h2 id="2022-9-27"><a href="#2022-9-27" class="headerlink" title="2022/9/27"></a>2022/9/27</h2><p>前台结束（只实现一个关键词查询功能）很简单。后续可能会逐步添加一些东西，暂时只有一个查询功能。</p>
<p><a href="https://imgse.com/i/xu6WHx"><img src="https://s1.ax1x.com/2022/09/30/xu6WHx.png" alt="xu6WHx.png"></a></p>
<p><a href="https://imgse.com/i/xu6oCD"><img src="https://s1.ax1x.com/2022/09/30/xu6oCD.png" alt="xu6oCD.png"></a></p>
<p>大概就这样 ，后续添加后端。</p>
<h2 id="2022-9-28"><a href="#2022-9-28" class="headerlink" title="2022/9/28"></a>2022/9/28</h2><p><strong>登录与后台系统已经打通</strong></p>
<p>现在可以通过登录页面跳转到后台页面了</p>
<p><a href="https://imgse.com/i/xu67gH"><img src="https://s1.ax1x.com/2022/09/30/xu67gH.png" alt="xu67gH.png"></a></p>
<p>也实现了退出和修改密码功能</p>
<p><a href="https://imgse.com/i/xu6Hvd"><img src="https://s1.ax1x.com/2022/09/30/xu6Hvd.png" alt="xu6Hvd.png"></a></p>
<p><strong>对于订单管理部分</strong>：计划是对这个页面进行改造，我并没有掌握ajax技术，因此可能这个页面无法实现分页，可以进行尝试一下</p>
<p><a href="https://imgse.com/i/xu6vUf"><img src="https://s1.ax1x.com/2022/09/30/xu6vUf.png" alt="xu6vUf.png"></a></p>
<h1 id="2022-9-30"><a href="#2022-9-30" class="headerlink" title="2022/9/30"></a>2022/9/30</h1><p>今天对关键词程序进行了一个实现，增，删，改，查全部完成，但是没有完成分页查询，在后续优化中，会对分页查询进行实现</p>
<p><strong>查询所有</strong></p>
<p><a href="https://imgse.com/i/xu6x58"><img src="https://s1.ax1x.com/2022/09/30/xu6x58.png" alt="xu6x58.png"></a></p>
<p><strong>查询单个</strong></p>
<p><a href="https://imgse.com/i/xucp8g"><img src="https://s1.ax1x.com/2022/09/30/xucp8g.png" alt="xucp8g.png"></a></p>
<p><strong>增加</strong></p>
<p><a href="https://imgse.com/i/xuc92Q"><img src="https://s1.ax1x.com/2022/09/30/xuc92Q.png" alt="xuc92Q.png"></a><a href="https://imgse.com/i/xuc92Q"><img src="https://s1.ax1x.com/2022/09/30/xuc92Q.png" alt="xuc92Q.png"></a></p>
<p><a href="https://imgse.com/i/xucCvj"><img src="https://s1.ax1x.com/2022/09/30/xucCvj.png" alt="xucCvj.png"></a></p>
<p><strong>修改</strong></p>
<p><a href="https://imgse.com/i/xuciKs"><img src="https://s1.ax1x.com/2022/09/30/xuciKs.png" alt="xuciKs.png"></a></p>
<p><a href="https://imgse.com/i/xucFrn"><img src="https://s1.ax1x.com/2022/09/30/xucFrn.png" alt="xucFrn.png"></a></p>
<p><strong>删除</strong></p>
<p><a href="https://imgse.com/i/xuckbq"><img src="https://s1.ax1x.com/2022/09/30/xuckbq.png" alt="xuckbq.png"></a></p>
<p><strong>删除之后的情况</strong></p>
<p><a href="https://imgse.com/i/xucEV0"><img src="https://s1.ax1x.com/2022/09/30/xucEV0.png" alt="xucEV0.png"></a></p>
<p><strong>对于管理员操作 对下边这个页面进行操作</strong></p>
<p><a href="https://imgse.com/i/xucmPU"><img src="https://s1.ax1x.com/2022/09/30/xucmPU.png" alt="xucmPU.png"></a><a href="https://imgse.com/i/xucmPU"><img src="https://s1.ax1x.com/2022/09/30/xucmPU.png" alt="xucmPU.png"></a></p>
<h2 id="2022-10-1"><a href="#2022-10-1" class="headerlink" title="2022/10/1"></a>2022/10/1</h2><p><strong>用户程序已经写好了</strong></p>
<p><a href="https://imgse.com/i/xKASBD"><img src="https://s1.ax1x.com/2022/10/01/xKASBD.png" alt="xKASBD.png"></a></p>
<p>包括搜索 展示 修改功能 有已经完成</p>
<p><strong>展示</strong></p>
<p><a href="https://imgse.com/i/xKApHe"><img src="https://s1.ax1x.com/2022/10/01/xKApHe.png" alt="xKApHe.png"></a></p>
<p><strong>修改</strong></p>
<p><a href="https://imgse.com/i/xKACAH"><img src="https://s1.ax1x.com/2022/10/01/xKACAH.png" alt="xKACAH.png"></a></p>
<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>第一版已经结束了，要把我们的项目放到服务器上 在运行一下试试</p>
]]></content>
  </entry>
  <entry>
    <title>迪杰斯特拉算法</title>
    <url>/2022/03/13/%E8%BF%AA%E6%9D%B0%E6%96%AF%E7%89%B9%E6%8B%89%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="迪杰斯特拉算法"><a href="#迪杰斯特拉算法" class="headerlink" title="迪杰斯特拉算法"></a>迪杰斯特拉算法</h1><p>今天在学习数学建模的时候发现 matlab实现迪杰斯特拉算法太麻烦了 想来想去还是通过C语言或者JAVA语言来实现这个算法最划算。</p>
<p><strong>算法特点：</strong>是来实现查看一个确定的点到其余各个顶点的最短路径问题。</p>
<h2 id="算法思想"><a href="#算法思想" class="headerlink" title="算法思想"></a>算法思想</h2><p>每次找到离源点最近的一个顶点，然后以该顶点为中心进行拓展，最终得到源点到其余各顶点的最短路径</p>
<p><strong>重要的概念：</strong>松弛，即如果1-&gt;3为43，但是1-&gt;2-&gt;3为13，那么我们就用第二个距离来表示1-&gt;3的距离</p>
<h2 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h2><ul>
<li>将所有的顶点分为两个部分，一直最短路程的顶点集合P和未知最短路径的顶点集合Q。使用一个数组Book【】来记录那些点是在集合P中，book[i]=1表示已经在集合中了0表示不在</li>
<li>设置源点s到自己的最短距离为0，即dis[s]=0,如果存在源点能够直接到的点，则设置为e<code>[ s ][ j ]</code>如果不是则设为无穷大（9999）</li>
<li>在集合中找到一个离源点最近的顶点，加入到集合p，并考察以此点到其他的的边并进行松弛操作</li>
<li>循环第三步 知道全部的点都进入到我们的book数组中</li>
</ul>
<h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><p><strong>使用JAVA语言，代码中有注释说明用途</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dijkstar</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] dis = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span>[] book = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span> i,j,n,u = <span class="number">0</span>,v,min;</span><br><span class="line">        <span class="keyword">int</span> inf = <span class="number">99999999</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> e[][] = <span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">8</span>,inf,inf,inf,inf&#125;,</span><br><span class="line">                &#123;<span class="number">2</span>,<span class="number">0</span>,inf,<span class="number">6</span>,<span class="number">1</span>,inf,inf,inf&#125;,</span><br><span class="line">                &#123;<span class="number">1</span>,inf,<span class="number">0</span>,<span class="number">7</span>,inf,inf,<span class="number">9</span>,inf&#125;,</span><br><span class="line">                &#123;<span class="number">8</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,inf&#125;,</span><br><span class="line">                &#123;inf,<span class="number">1</span>,inf,<span class="number">5</span>,<span class="number">0</span>,<span class="number">3</span>,inf,<span class="number">9</span>&#125;,</span><br><span class="line">                &#123;inf,inf,inf,<span class="number">1</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">6</span>&#125;,</span><br><span class="line">                &#123;inf,inf,<span class="number">9</span>,<span class="number">2</span>,inf,<span class="number">4</span>,<span class="number">0</span>,<span class="number">3</span>&#125;,</span><br><span class="line">                &#123;inf,inf,inf,inf,<span class="number">9</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">0</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        n = e[<span class="number">0</span>].length-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化dis数组  这里是记录源点到其他各点的最短距离的</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            dis[i] = e[<span class="number">0</span>][i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化book数组 book数组是记录已经被放入最短路径集合的点</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            book[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将第一个点（源点）放入book数组中</span></span><br><span class="line">        book[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//Dijkstra算法的核心</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=n-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            min = inf;</span><br><span class="line">            <span class="comment">//找到距离源点最短的点</span></span><br><span class="line">            <span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (book[j] == <span class="number">0</span> &amp;&amp; dis[j]&lt;min)&#123;</span><br><span class="line">                    min = dis[j];</span><br><span class="line">                    u = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将这个点读到book数组中</span></span><br><span class="line">            book[u] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (v=<span class="number">0</span>;v&lt;=n;v++)&#123;</span><br><span class="line">                <span class="comment">//收缩调整最短路径</span></span><br><span class="line">                <span class="keyword">if</span> (e[u][v] &lt; inf)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (dis[v]&gt;dis[u]+e[u][v])&#123;</span><br><span class="line">                        dis[v] = dis[u]+e[u][v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> di : dis) &#123;</span><br><span class="line">            System.out.print(di+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dwx.passage2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dijkstra</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] e = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span>[] dis = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span>[] book = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span> i,j,n,m,t1,t2,t3,u = <span class="number">0</span>,v,min;</span><br><span class="line">        <span class="keyword">int</span> inf = <span class="number">99999999</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//这个操作是在实现存储图</span></span><br><span class="line">        <span class="comment">//读入顶点个数 和 边的条数</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//n表示顶点个数 m表示边数</span></span><br><span class="line">        n = scanner.nextInt();</span><br><span class="line">        m = scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化 将自己到自己的顶点为0 其他的全改为inf</span></span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j)&#123;</span><br><span class="line">                    e[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    e[i][j] = inf;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//读入边和权值</span></span><br><span class="line">        <span class="comment">//这里我们使用的是有向边</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m;i++)&#123;</span><br><span class="line">            <span class="comment">//这里 t1表示起始的顶点 t2表示目标定点 t3表示权值</span></span><br><span class="line">            t1 = scanner.nextInt();</span><br><span class="line">            t2 = scanner.nextInt();</span><br><span class="line">            t3 = scanner.nextInt();</span><br><span class="line">            e[t1][t2] = t3;</span><br><span class="line">            <span class="comment">// e[t2][t1] = t3; //如果加上这一句话 就是在储存无向图</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//初始化dis数组  这里是记录源点到其他各点的最短距离的</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            dis[i] = e[<span class="number">1</span>][i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化book数组 book数组是记录已经被放入最短路径集合的点</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            book[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将第一个点（源点）放入book数组中</span></span><br><span class="line">        book[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//Dijkstra算法的核心</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            min = inf;</span><br><span class="line">            <span class="comment">//找到距离源点最短的点</span></span><br><span class="line">            <span class="keyword">for</span> (j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (book[j] == <span class="number">0</span> &amp;&amp; dis[j]&lt;min)&#123;</span><br><span class="line">                    min = dis[j];</span><br><span class="line">                    u = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将这个点读到book数组中</span></span><br><span class="line">            book[u] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (v=<span class="number">1</span>;v&lt;=n;v++)&#123;</span><br><span class="line">                <span class="comment">//收缩调整最短路径</span></span><br><span class="line">                <span class="keyword">if</span> (e[u][v] &lt; inf)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (dis[v]&gt;dis[u]+e[u][v])&#123;</span><br><span class="line">                        dis[v] = dis[u]+e[u][v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> di : dis) &#123;</span><br><span class="line">            System.out.print(di+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">**输入**</span><br><span class="line">    <span class="number">6</span> <span class="number">9</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">12</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">9</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">13</span></span><br><span class="line"><span class="number">4</span> <span class="number">6</span> <span class="number">16</span></span><br><span class="line"><span class="number">5</span> <span class="number">6</span> <span class="number">4</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
